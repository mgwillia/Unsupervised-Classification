vulcan07.umiacs.umd.edu
[31m{'setup': 'scan', 'criterion': 'scan', 'criterion_kwargs': {'entropy_weight': 5.0}, 'update_cluster_head_only': False, 'num_heads': 1, 'backbone': 'resnet50', 'train_db_name': 'cub-256', 'val_db_name': 'cub-256', 'num_classes': 200, 'num_neighbors': 10, 'augmentation_strategy': 'cub', 'augmentation_kwargs': {'resize': 256, 'crop_size': 224, 'normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}, 'num_strong_augs': 4, 'cutout_kwargs': {'n_holes': 1, 'length': 16, 'random': True}}, 'transformation_kwargs': {'resize': 256, 'crop_size': 224, 'normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}, 'optimizer': 'adam', 'optimizer_kwargs': {'lr': 0.0001, 'weight_decay': 0.0001}, 'epochs': 50, 'batch_size': 128, 'num_workers': 8, 'scheduler': 'constant', 'pretext_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/pretext', 'pretext_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/pretext/checkpoint.pth.tar', 'pretext_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/pretext/model.pth.tar', 'topk_neighbors_train_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/pretext/topk-train-neighbors.npy', 'topk_neighbors_val_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/pretext/topk-val-neighbors.npy', 'topk_strangers_train_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/pretext/topk-train-strangers.npy', 'topk_strangers_val_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/pretext/topk-val-strangers.npy', 'scan_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/scan', 'scan_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/scan/checkpoint.pth.tar', 'scan_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/scan/model.pth.tar', 'scanf_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/scanf', 'scanf_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/scanf/checkpoint.pth.tar', 'scanf_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/scanf/model.pth.tar', 'selflabel_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/selflabel', 'selflabel_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/selflabel/checkpoint.pth.tar', 'selflabel_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/selflabel/model.pth.tar'}[0m
[34mGet dataset and dataloaders[0m
Train transforms: Compose(
    RandomHorizontalFlip(p=0.5)
    Resize(size=(256, 256), interpolation=bilinear)
    RandomCrop(size=(224, 224), padding=None)
    <data.augment.Augment object at 0x7f1fb042a130>
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
    <data.augment.Cutout object at 0x7f1fb042a070>
)
Validation transforms: Compose(
    Resize(size=(256, 256), interpolation=bilinear)
    CenterCrop(size=(224, 224))
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
)
Train samples 5794 - Val samples 5794
[34mGet model[0m
{'setup': 'scan', 'criterion': 'scan', 'criterion_kwargs': {'entropy_weight': 5.0}, 'update_cluster_head_only': False, 'num_heads': 1, 'backbone': 'resnet50', 'train_db_name': 'cub-256', 'val_db_name': 'cub-256', 'num_classes': 200, 'num_neighbors': 10, 'augmentation_strategy': 'cub', 'augmentation_kwargs': {'resize': 256, 'crop_size': 224, 'normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}, 'num_strong_augs': 4, 'cutout_kwargs': {'n_holes': 1, 'length': 16, 'random': True}}, 'transformation_kwargs': {'resize': 256, 'crop_size': 224, 'normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}, 'optimizer': 'adam', 'optimizer_kwargs': {'lr': 0.0001, 'weight_decay': 0.0001}, 'epochs': 50, 'batch_size': 128, 'num_workers': 8, 'scheduler': 'constant', 'pretext_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/pretext', 'pretext_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/pretext/checkpoint.pth.tar', 'pretext_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/pretext/model.pth.tar', 'topk_neighbors_train_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/pretext/topk-train-neighbors.npy', 'topk_neighbors_val_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/pretext/topk-val-neighbors.npy', 'topk_strangers_train_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/pretext/topk-train-strangers.npy', 'topk_strangers_val_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/pretext/topk-val-strangers.npy', 'scan_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/scan', 'scan_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/scan/checkpoint.pth.tar', 'scan_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/scan/model.pth.tar', 'scanf_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/scanf', 'scanf_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/scanf/checkpoint.pth.tar', 'scanf_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/scanf/model.pth.tar', 'selflabel_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/selflabel', 'selflabel_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/selflabel/checkpoint.pth.tar', 'selflabel_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/selflabel/model.pth.tar'}
loading pretrained
ClusteringModel(
  (backbone): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): Bottleneck(
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): Sequential(
      (0): Bottleneck(
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): Sequential(
      (0): Bottleneck(
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): Sequential(
      (0): Bottleneck(
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
    (fc): Linear(in_features=2048, out_features=1000, bias=True)
  )
  (cluster_head): ModuleList(
    (0): Linear(in_features=2048, out_features=200, bias=True)
  )
)
[34mGet optimizer[0m
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0001
)
[34mGet loss[0m
SCANLoss(
  (softmax): Softmax(dim=1)
  (bce): BCELoss()
)
[34mNo checkpoint file at /cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub-256/scan/checkpoint.pth.tar[0m
[34mStarting main loop[0m
[33mEpoch 1/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [0][ 0/45]	Total Loss -2.1186e+01 (-2.1186e+01)	Consistency Loss 5.2906e+00 (5.2906e+00)	Entropy 5.2953e+00 (5.2953e+00)
Epoch: [0][25/45]	Total Loss -2.1196e+01 (-2.1194e+01)	Consistency Loss 5.2948e+00 (5.2951e+00)	Entropy 5.2983e+00 (5.2979e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.297799110412598, 'consistency': 5.271522045135498, 'total_loss': -0.02627706527709961}], 'lowest_loss_head': 0, 'lowest_loss': -0.02627706527709961}
New lowest loss on validation set: 10000.0000 -> -0.0263
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.07904729030031067, 'ARI': 0.017208568435819208, 'NMI': 0.3424452807278689, 'ACC Top-5': 0.13945460821539524, 'hungarian_match': [(0, 99), (1, 183), (2, 75), (3, 14), (4, 3), (5, 126), (6, 64), (7, 10), (8, 55), (9, 148), (10, 11), (11, 180), (12, 103), (13, 91), (14, 104), (15, 94), (16, 132), (17, 111), (18, 182), (19, 79), (20, 129), (21, 117), (22, 105), (23, 66), (24, 34), (25, 172), (26, 173), (27, 45), (28, 69), (29, 97), (30, 197), (31, 5), (32, 13), (33, 36), (34, 84), (35, 72), (36, 6), (37, 190), (38, 96), (39, 170), (40, 7), (41, 155), (42, 89), (43, 166), (44, 26), (45, 78), (46, 76), (47, 188), (48, 124), (49, 187), (50, 116), (51, 130), (52, 198), (53, 157), (54, 8), (55, 113), (56, 199), (57, 121), (58, 140), (59, 23), (60, 169), (61, 20), (62, 194), (63, 110), (64, 67), (65, 139), (66, 175), (67, 33), (68, 147), (69, 53), (70, 161), (71, 27), (72, 164), (73, 12), (74, 98), (75, 134), (76, 158), (77, 46), (78, 184), (79, 185), (80, 114), (81, 16), (82, 112), (83, 81), (84, 109), (85, 9), (86, 15), (87, 43), (88, 58), (89, 4), (90, 176), (91, 0), (92, 90), (93, 18), (94, 167), (95, 102), (96, 19), (97, 145), (98, 21), (99, 179), (100, 137), (101, 80), (102, 31), (103, 1), (104, 39), (105, 70), (106, 62), (107, 88), (108, 101), (109, 100), (110, 108), (111, 37), (112, 35), (113, 136), (114, 125), (115, 65), (116, 165), (117, 193), (118, 32), (119, 115), (120, 195), (121, 17), (122, 42), (123, 40), (124, 38), (125, 192), (126, 138), (127, 50), (128, 25), (129, 150), (130, 74), (131, 51), (132, 49), (133, 57), (134, 127), (135, 133), (136, 196), (137, 144), (138, 60), (139, 131), (140, 82), (141, 52), (142, 93), (143, 107), (144, 56), (145, 191), (146, 189), (147, 160), (148, 73), (149, 44), (150, 163), (151, 156), (152, 128), (153, 168), (154, 47), (155, 59), (156, 92), (157, 141), (158, 178), (159, 86), (160, 95), (161, 63), (162, 120), (163, 41), (164, 118), (165, 171), (166, 83), (167, 30), (168, 154), (169, 146), (170, 2), (171, 106), (172, 123), (173, 119), (174, 174), (175, 135), (176, 152), (177, 143), (178, 85), (179, 61), (180, 122), (181, 71), (182, 24), (183, 186), (184, 22), (185, 28), (186, 87), (187, 149), (188, 151), (189, 153), (190, 142), (191, 162), (192, 159), (193, 29), (194, 68), (195, 177), (196, 48), (197, 54), (198, 181), (199, 77)]}
Checkpoint ...
[33mEpoch 2/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [1][ 0/45]	Total Loss -2.1204e+01 (-2.1204e+01)	Consistency Loss 5.2872e+00 (5.2872e+00)	Entropy 5.2983e+00 (5.2983e+00)
Epoch: [1][25/45]	Total Loss -2.1285e+01 (-2.1229e+01)	Consistency Loss 5.2008e+00 (5.2606e+00)	Entropy 5.2972e+00 (5.2980e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.252881050109863, 'consistency': 4.570554733276367, 'total_loss': -0.6823263168334961}], 'lowest_loss_head': 0, 'lowest_loss': -0.6823263168334961}
New lowest loss on validation set: -0.0263 -> -0.6823
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.07455988954090438, 'ARI': 0.019298222700131415, 'NMI': 0.33540705916300195, 'ACC Top-5': 0.1534345875043148, 'hungarian_match': [(0, 24), (1, 117), (2, 18), (3, 0), (4, 3), (5, 57), (6, 193), (7, 14), (8, 138), (9, 5), (10, 141), (11, 180), (12, 147), (13, 25), (14, 191), (15, 185), (16, 156), (17, 125), (18, 31), (19, 97), (20, 102), (21, 35), (22, 21), (23, 198), (24, 176), (25, 135), (26, 54), (27, 194), (28, 137), (29, 187), (30, 172), (31, 10), (32, 7), (33, 36), (34, 84), (35, 190), (36, 8), (37, 143), (38, 90), (39, 46), (40, 121), (41, 94), (42, 182), (43, 118), (44, 4), (45, 68), (46, 22), (47, 39), (48, 123), (49, 78), (50, 63), (51, 12), (52, 96), (53, 168), (54, 115), (55, 50), (56, 53), (57, 111), (58, 79), (59, 100), (60, 199), (61, 120), (62, 69), (63, 134), (64, 66), (65, 47), (66, 38), (67, 33), (68, 16), (69, 150), (70, 17), (71, 75), (72, 19), (73, 72), (74, 98), (75, 20), (76, 91), (77, 113), (78, 23), (79, 52), (80, 70), (81, 196), (82, 104), (83, 71), (84, 109), (85, 159), (86, 65), (87, 142), (88, 116), (89, 87), (90, 178), (91, 89), (92, 152), (93, 37), (94, 160), (95, 1), (96, 107), (97, 60), (98, 41), (99, 163), (100, 42), (101, 80), (102, 86), (103, 195), (104, 127), (105, 43), (106, 188), (107, 45), (108, 122), (109, 48), (110, 175), (111, 81), (112, 124), (113, 49), (114, 155), (115, 44), (116, 58), (117, 157), (118, 30), (119, 173), (120, 149), (121, 174), (122, 82), (123, 2), (124, 56), (125, 13), (126, 105), (127, 61), (128, 34), (129, 179), (130, 67), (131, 64), (132, 51), (133, 153), (134, 11), (135, 28), (136, 151), (137, 110), (138, 55), (139, 73), (140, 184), (141, 132), (142, 77), (143, 85), (144, 189), (145, 32), (146, 27), (147, 95), (148, 164), (149, 183), (150, 158), (151, 108), (152, 128), (153, 101), (154, 103), (155, 59), (156, 139), (157, 170), (158, 40), (159, 112), (160, 166), (161, 146), (162, 114), (163, 9), (164, 15), (165, 145), (166, 119), (167, 181), (168, 186), (169, 83), (170, 140), (171, 106), (172, 130), (173, 131), (174, 74), (175, 133), (176, 154), (177, 148), (178, 88), (179, 144), (180, 126), (181, 26), (182, 136), (183, 167), (184, 92), (185, 62), (186, 197), (187, 99), (188, 165), (189, 169), (190, 129), (191, 171), (192, 6), (193, 29), (194, 161), (195, 177), (196, 76), (197, 93), (198, 192), (199, 162)]}
Checkpoint ...
[33mEpoch 3/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [2][ 0/45]	Total Loss -2.1464e+01 (-2.1464e+01)	Consistency Loss 4.9971e+00 (4.9971e+00)	Entropy 5.2922e+00 (5.2922e+00)
Epoch: [2][25/45]	Total Loss -2.1755e+01 (-2.1638e+01)	Consistency Loss 4.7199e+00 (4.8306e+00)	Entropy 5.2950e+00 (5.2937e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.261747360229492, 'consistency': 4.017100811004639, 'total_loss': -1.2446465492248535}], 'lowest_loss_head': 0, 'lowest_loss': -1.2446465492248535}
New lowest loss on validation set: -0.6823 -> -1.2446
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.09250949257852951, 'ARI': 0.03283229971470035, 'NMI': 0.39830076693403466, 'ACC Top-5': 0.17483603727994476, 'hungarian_match': [(0, 99), (1, 129), (2, 18), (3, 95), (4, 3), (5, 57), (6, 115), (7, 149), (8, 20), (9, 5), (10, 17), (11, 42), (12, 120), (13, 86), (14, 124), (15, 94), (16, 56), (17, 73), (18, 11), (19, 91), (20, 128), (21, 27), (22, 183), (23, 161), (24, 117), (25, 135), (26, 87), (27, 104), (28, 137), (29, 19), (30, 177), (31, 112), (32, 160), (33, 185), (34, 84), (35, 54), (36, 182), (37, 80), (38, 35), (39, 174), (40, 121), (41, 176), (42, 51), (43, 151), (44, 106), (45, 37), (46, 24), (47, 39), (48, 127), (49, 4), (50, 144), (51, 63), (52, 53), (53, 157), (54, 103), (55, 14), (56, 96), (57, 125), (58, 113), (59, 59), (60, 166), (61, 154), (62, 136), (63, 134), (64, 67), (65, 26), (66, 38), (67, 33), (68, 88), (69, 188), (70, 162), (71, 9), (72, 68), (73, 105), (74, 98), (75, 61), (76, 197), (77, 199), (78, 90), (79, 131), (80, 100), (81, 196), (82, 193), (83, 81), (84, 147), (85, 179), (86, 198), (87, 140), (88, 116), (89, 15), (90, 164), (91, 0), (92, 184), (93, 114), (94, 169), (95, 52), (96, 28), (97, 22), (98, 75), (99, 163), (100, 31), (101, 55), (102, 45), (103, 172), (104, 32), (105, 43), (106, 6), (107, 85), (108, 170), (109, 34), (110, 155), (111, 36), (112, 119), (113, 93), (114, 123), (115, 44), (116, 13), (117, 158), (118, 30), (119, 25), (120, 173), (121, 46), (122, 165), (123, 66), (124, 69), (125, 159), (126, 72), (127, 122), (128, 76), (129, 171), (130, 130), (131, 58), (132, 1), (133, 40), (134, 10), (135, 133), (136, 192), (137, 110), (138, 97), (139, 47), (140, 21), (141, 23), (142, 74), (143, 152), (144, 187), (145, 180), (146, 189), (147, 49), (148, 50), (149, 2), (150, 153), (151, 156), (152, 118), (153, 78), (154, 77), (155, 62), (156, 132), (157, 70), (158, 82), (159, 64), (160, 175), (161, 60), (162, 102), (163, 41), (164, 191), (165, 83), (166, 79), (167, 181), (168, 29), (169, 146), (170, 92), (171, 48), (172, 126), (173, 108), (174, 190), (175, 194), (176, 178), (177, 148), (178, 89), (179, 16), (180, 168), (181, 111), (182, 107), (183, 167), (184, 8), (185, 65), (186, 109), (187, 141), (188, 143), (189, 150), (190, 101), (191, 142), (192, 139), (193, 12), (194, 138), (195, 186), (196, 71), (197, 195), (198, 7), (199, 145)]}
Checkpoint ...
[33mEpoch 4/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [3][ 0/45]	Total Loss -2.1909e+01 (-2.1909e+01)	Consistency Loss 4.5510e+00 (4.5510e+00)	Entropy 5.2921e+00 (5.2921e+00)
Epoch: [3][25/45]	Total Loss -2.2133e+01 (-2.2038e+01)	Consistency Loss 4.2907e+00 (4.4051e+00)	Entropy 5.2847e+00 (5.2887e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.279426097869873, 'consistency': 3.76544189453125, 'total_loss': -1.513984203338623}], 'lowest_loss_head': 0, 'lowest_loss': -1.513984203338623}
New lowest loss on validation set: -1.2446 -> -1.5140
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.10493614083534691, 'ARI': 0.0339261778941036, 'NMI': 0.42030668019025486, 'ACC Top-5': 0.2052122885743873, 'hungarian_match': [(0, 86), (1, 74), (2, 18), (3, 118), (4, 3), (5, 57), (6, 167), (7, 10), (8, 30), (9, 5), (10, 176), (11, 16), (12, 147), (13, 24), (14, 123), (15, 32), (16, 20), (17, 198), (18, 11), (19, 80), (20, 130), (21, 117), (22, 186), (23, 170), (24, 159), (25, 102), (26, 94), (27, 17), (28, 137), (29, 19), (30, 177), (31, 149), (32, 42), (33, 54), (34, 120), (35, 189), (36, 51), (37, 131), (38, 87), (39, 174), (40, 121), (41, 152), (42, 49), (43, 164), (44, 106), (45, 163), (46, 99), (47, 40), (48, 53), (49, 22), (50, 92), (51, 7), (52, 169), (53, 108), (54, 103), (55, 14), (56, 67), (57, 125), (58, 98), (59, 65), (60, 180), (61, 113), (62, 69), (63, 39), (64, 115), (65, 175), (66, 157), (67, 33), (68, 31), (69, 124), (70, 96), (71, 2), (72, 68), (73, 188), (74, 183), (75, 105), (76, 197), (77, 81), (78, 46), (79, 85), (80, 100), (81, 173), (82, 193), (83, 43), (84, 109), (85, 162), (86, 71), (87, 141), (88, 97), (89, 15), (90, 165), (91, 0), (92, 185), (93, 62), (94, 161), (95, 52), (96, 13), (97, 29), (98, 93), (99, 151), (100, 50), (101, 126), (102, 23), (103, 135), (104, 153), (105, 142), (106, 6), (107, 88), (108, 128), (109, 83), (110, 155), (111, 140), (112, 56), (113, 34), (114, 148), (115, 145), (116, 194), (117, 119), (118, 114), (119, 90), (120, 129), (121, 127), (122, 139), (123, 77), (124, 184), (125, 38), (126, 25), (127, 112), (128, 101), (129, 171), (130, 95), (131, 79), (132, 44), (133, 192), (134, 156), (135, 133), (136, 199), (137, 110), (138, 55), (139, 45), (140, 21), (141, 66), (142, 48), (143, 61), (144, 187), (145, 178), (146, 27), (147, 150), (148, 134), (149, 35), (150, 37), (151, 158), (152, 47), (153, 78), (154, 172), (155, 59), (156, 82), (157, 70), (158, 73), (159, 190), (160, 168), (161, 58), (162, 191), (163, 41), (164, 91), (165, 195), (166, 136), (167, 181), (168, 26), (169, 146), (170, 1), (171, 12), (172, 63), (173, 196), (174, 9), (175, 76), (176, 72), (177, 182), (178, 89), (179, 75), (180, 122), (181, 111), (182, 107), (183, 160), (184, 8), (185, 60), (186, 84), (187, 64), (188, 179), (189, 36), (190, 116), (191, 154), (192, 166), (193, 28), (194, 138), (195, 104), (196, 143), (197, 4), (198, 132), (199, 144)]}
Checkpoint ...
[33mEpoch 5/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [4][ 0/45]	Total Loss -2.2178e+01 (-2.2178e+01)	Consistency Loss 4.2679e+00 (4.2679e+00)	Entropy 5.2892e+00 (5.2892e+00)
Epoch: [4][25/45]	Total Loss -2.2324e+01 (-2.2279e+01)	Consistency Loss 4.0840e+00 (4.1313e+00)	Entropy 5.2815e+00 (5.2820e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.275635719299316, 'consistency': 3.5175621509552, 'total_loss': -1.7580735683441162}], 'lowest_loss_head': 0, 'lowest_loss': -1.7580735683441162}
New lowest loss on validation set: -1.5140 -> -1.7581
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.11339316534345875, 'ARI': 0.03920473144459504, 'NMI': 0.4353965081283646, 'ACC Top-5': 0.232136693130825, 'hungarian_match': [(0, 86), (1, 149), (2, 3), (3, 118), (4, 20), (5, 74), (6, 167), (7, 10), (8, 30), (9, 5), (10, 64), (11, 42), (12, 116), (13, 60), (14, 73), (15, 95), (16, 174), (17, 18), (18, 40), (19, 6), (20, 170), (21, 35), (22, 186), (23, 16), (24, 14), (25, 102), (26, 87), (27, 124), (28, 137), (29, 162), (30, 175), (31, 122), (32, 150), (33, 54), (34, 84), (35, 27), (36, 45), (37, 117), (38, 126), (39, 169), (40, 32), (41, 94), (42, 49), (43, 69), (44, 133), (45, 33), (46, 24), (47, 154), (48, 112), (49, 23), (50, 7), (51, 78), (52, 178), (53, 108), (54, 103), (55, 48), (56, 67), (57, 125), (58, 90), (59, 83), (60, 166), (61, 81), (62, 136), (63, 39), (64, 38), (65, 113), (66, 46), (67, 198), (68, 88), (69, 188), (70, 47), (71, 80), (72, 134), (73, 75), (74, 98), (75, 140), (76, 197), (77, 179), (78, 173), (79, 85), (80, 100), (81, 171), (82, 91), (83, 43), (84, 147), (85, 164), (86, 0), (87, 142), (88, 196), (89, 15), (90, 156), (91, 1), (92, 185), (93, 62), (94, 160), (95, 52), (96, 135), (97, 144), (98, 55), (99, 36), (100, 181), (101, 130), (102, 22), (103, 68), (104, 79), (105, 141), (106, 82), (107, 51), (108, 101), (109, 115), (110, 53), (111, 143), (112, 96), (113, 34), (114, 155), (115, 65), (116, 56), (117, 168), (118, 17), (119, 41), (120, 172), (121, 31), (122, 139), (123, 131), (124, 159), (125, 153), (126, 25), (127, 114), (128, 191), (129, 176), (130, 184), (131, 182), (132, 44), (133, 177), (134, 37), (135, 106), (136, 161), (137, 110), (138, 183), (139, 50), (140, 128), (141, 199), (142, 194), (143, 2), (144, 187), (145, 19), (146, 21), (147, 165), (148, 111), (149, 109), (150, 72), (151, 158), (152, 93), (153, 105), (154, 119), (155, 59), (156, 145), (157, 76), (158, 180), (159, 190), (160, 151), (161, 58), (162, 121), (163, 77), (164, 66), (165, 195), (166, 189), (167, 157), (168, 193), (169, 146), (170, 70), (171, 12), (172, 127), (173, 13), (174, 9), (175, 4), (176, 138), (177, 148), (178, 89), (179, 61), (180, 123), (181, 26), (182, 57), (183, 129), (184, 8), (185, 99), (186, 107), (187, 29), (188, 192), (189, 11), (190, 163), (191, 97), (192, 92), (193, 28), (194, 152), (195, 104), (196, 71), (197, 120), (198, 132), (199, 63)]}
Checkpoint ...
[33mEpoch 6/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [5][ 0/45]	Total Loss -2.2427e+01 (-2.2427e+01)	Consistency Loss 3.9772e+00 (3.9772e+00)	Entropy 5.2808e+00 (5.2808e+00)
Epoch: [5][25/45]	Total Loss -2.2503e+01 (-2.2459e+01)	Consistency Loss 3.8419e+00 (3.9267e+00)	Entropy 5.2691e+00 (5.2772e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.274084091186523, 'consistency': 3.3602867126464844, 'total_loss': -1.913797378540039}], 'lowest_loss_head': 0, 'lowest_loss': -1.913797378540039}
New lowest loss on validation set: -1.7581 -> -1.9138
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.118570935450466, 'ARI': 0.040690502884041295, 'NMI': 0.44167508629418306, 'ACC Top-5': 0.2309285467725233, 'hungarian_match': [(0, 86), (1, 129), (2, 11), (3, 97), (4, 112), (5, 183), (6, 198), (7, 10), (8, 30), (9, 5), (10, 74), (11, 37), (12, 182), (13, 99), (14, 124), (15, 95), (16, 192), (17, 19), (18, 40), (19, 35), (20, 18), (21, 91), (22, 63), (23, 161), (24, 117), (25, 102), (26, 149), (27, 119), (28, 54), (29, 162), (30, 175), (31, 122), (32, 2), (33, 46), (34, 84), (35, 27), (36, 7), (37, 115), (38, 126), (39, 169), (40, 32), (41, 94), (42, 49), (43, 172), (44, 133), (45, 75), (46, 24), (47, 156), (48, 170), (49, 4), (50, 107), (51, 196), (52, 180), (53, 138), (54, 103), (55, 78), (56, 67), (57, 125), (58, 147), (59, 83), (60, 151), (61, 76), (62, 69), (63, 39), (64, 42), (65, 81), (66, 108), (67, 33), (68, 88), (69, 194), (70, 9), (71, 41), (72, 16), (73, 188), (74, 98), (75, 140), (76, 197), (77, 157), (78, 121), (79, 85), (80, 100), (81, 116), (82, 80), (83, 43), (84, 109), (85, 167), (86, 0), (87, 142), (88, 48), (89, 6), (90, 152), (91, 57), (92, 185), (93, 1), (94, 153), (95, 52), (96, 38), (97, 136), (98, 55), (99, 36), (100, 45), (101, 130), (102, 22), (103, 135), (104, 72), (105, 141), (106, 15), (107, 51), (108, 137), (109, 186), (110, 53), (111, 143), (112, 79), (113, 17), (114, 118), (115, 65), (116, 56), (117, 168), (118, 165), (119, 90), (120, 174), (121, 127), (122, 139), (123, 131), (124, 123), (125, 159), (126, 105), (127, 120), (128, 34), (129, 171), (130, 87), (131, 20), (132, 44), (133, 145), (134, 154), (135, 28), (136, 181), (137, 110), (138, 158), (139, 66), (140, 184), (141, 68), (142, 31), (143, 70), (144, 187), (145, 178), (146, 21), (147, 150), (148, 134), (149, 148), (150, 14), (151, 155), (152, 163), (153, 114), (154, 47), (155, 62), (156, 61), (157, 59), (158, 73), (159, 190), (160, 164), (161, 58), (162, 191), (163, 77), (164, 195), (165, 193), (166, 189), (167, 82), (168, 26), (169, 146), (170, 64), (171, 12), (172, 173), (173, 13), (174, 166), (175, 96), (176, 160), (177, 3), (178, 89), (179, 50), (180, 128), (181, 111), (182, 23), (183, 199), (184, 25), (185, 60), (186, 106), (187, 29), (188, 179), (189, 113), (190, 93), (191, 101), (192, 92), (193, 8), (194, 176), (195, 104), (196, 71), (197, 177), (198, 132), (199, 144)]}
Checkpoint ...
[33mEpoch 7/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [6][ 0/45]	Total Loss -2.2457e+01 (-2.2457e+01)	Consistency Loss 3.8897e+00 (3.8897e+00)	Entropy 5.2693e+00 (5.2693e+00)
Epoch: [6][25/45]	Total Loss -2.2645e+01 (-2.2549e+01)	Consistency Loss 3.7325e+00 (3.8193e+00)	Entropy 5.2755e+00 (5.2738e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.277157783508301, 'consistency': 3.250479221343994, 'total_loss': -2.0266785621643066}], 'lowest_loss_head': 0, 'lowest_loss': -2.0266785621643066}
New lowest loss on validation set: -1.9138 -> -2.0267
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.12133241284086986, 'ARI': 0.04299877424053783, 'NMI': 0.45003200421972983, 'ACC Top-5': 0.24059371763893683, 'hungarian_match': [(0, 86), (1, 112), (2, 3), (3, 97), (4, 26), (5, 116), (6, 198), (7, 10), (8, 171), (9, 183), (10, 163), (11, 37), (12, 115), (13, 60), (14, 17), (15, 95), (16, 169), (17, 150), (18, 40), (19, 35), (20, 90), (21, 91), (22, 184), (23, 75), (24, 178), (25, 136), (26, 149), (27, 124), (28, 54), (29, 19), (30, 158), (31, 122), (32, 2), (33, 36), (34, 84), (35, 189), (36, 182), (37, 194), (38, 126), (39, 155), (40, 32), (41, 46), (42, 49), (43, 78), (44, 106), (45, 14), (46, 24), (47, 199), (48, 76), (49, 29), (50, 71), (51, 196), (52, 53), (53, 108), (54, 103), (55, 162), (56, 67), (57, 125), (58, 18), (59, 83), (60, 69), (61, 81), (62, 190), (63, 39), (64, 137), (65, 113), (66, 152), (67, 68), (68, 88), (69, 50), (70, 9), (71, 101), (72, 135), (73, 191), (74, 98), (75, 140), (76, 197), (77, 118), (78, 170), (79, 85), (80, 100), (81, 166), (82, 80), (83, 43), (84, 147), (85, 168), (86, 0), (87, 142), (88, 12), (89, 4), (90, 138), (91, 1), (92, 185), (93, 59), (94, 160), (95, 52), (96, 20), (97, 144), (98, 55), (99, 176), (100, 172), (101, 130), (102, 22), (103, 94), (104, 79), (105, 70), (106, 6), (107, 51), (108, 73), (109, 167), (110, 156), (111, 143), (112, 119), (113, 66), (114, 114), (115, 65), (116, 157), (117, 42), (118, 165), (119, 38), (120, 174), (121, 127), (122, 139), (123, 131), (124, 123), (125, 159), (126, 105), (127, 120), (128, 34), (129, 56), (130, 134), (131, 47), (132, 192), (133, 177), (134, 164), (135, 25), (136, 175), (137, 110), (138, 129), (139, 96), (140, 121), (141, 23), (142, 15), (143, 141), (144, 187), (145, 31), (146, 21), (147, 180), (148, 111), (149, 109), (150, 72), (151, 153), (152, 102), (153, 5), (154, 30), (155, 62), (156, 145), (157, 7), (158, 117), (159, 188), (160, 151), (161, 58), (162, 161), (163, 77), (164, 195), (165, 193), (166, 186), (167, 181), (168, 148), (169, 146), (170, 133), (171, 48), (172, 173), (173, 13), (174, 74), (175, 82), (176, 154), (177, 33), (178, 89), (179, 45), (180, 128), (181, 61), (182, 57), (183, 16), (184, 8), (185, 99), (186, 107), (187, 64), (188, 179), (189, 11), (190, 93), (191, 27), (192, 92), (193, 28), (194, 41), (195, 104), (196, 44), (197, 87), (198, 132), (199, 63)]}
Checkpoint ...
[33mEpoch 8/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [7][ 0/45]	Total Loss -2.2398e+01 (-2.2398e+01)	Consistency Loss 3.9246e+00 (3.9246e+00)	Entropy 5.2644e+00 (5.2644e+00)
Epoch: [7][25/45]	Total Loss -2.2510e+01 (-2.2582e+01)	Consistency Loss 3.8209e+00 (3.7554e+00)	Entropy 5.2662e+00 (5.2675e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.278824806213379, 'consistency': 3.173391819000244, 'total_loss': -2.1054329872131348}], 'lowest_loss_head': 0, 'lowest_loss': -2.1054329872131348}
New lowest loss on validation set: -2.0267 -> -2.1054
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.12374870555747325, 'ARI': 0.04255199960442978, 'NMI': 0.449706127768708, 'ACC Top-5': 0.23955816361753537, 'hungarian_match': [(0, 86), (1, 129), (2, 3), (3, 140), (4, 112), (5, 183), (6, 198), (7, 10), (8, 30), (9, 57), (10, 196), (11, 46), (12, 182), (13, 65), (14, 123), (15, 95), (16, 169), (17, 150), (18, 81), (19, 33), (20, 147), (21, 91), (22, 193), (23, 75), (24, 14), (25, 176), (26, 149), (27, 124), (28, 54), (29, 19), (30, 158), (31, 122), (32, 82), (33, 94), (34, 84), (35, 27), (36, 51), (37, 195), (38, 12), (39, 155), (40, 32), (41, 97), (42, 49), (43, 79), (44, 29), (45, 194), (46, 24), (47, 156), (48, 170), (49, 4), (50, 7), (51, 192), (52, 171), (53, 108), (54, 103), (55, 172), (56, 67), (57, 127), (58, 18), (59, 83), (60, 56), (61, 69), (62, 136), (63, 39), (64, 90), (65, 113), (66, 164), (67, 68), (68, 88), (69, 73), (70, 9), (71, 76), (72, 111), (73, 5), (74, 98), (75, 92), (76, 197), (77, 15), (78, 181), (79, 85), (80, 100), (81, 165), (82, 80), (83, 43), (84, 151), (85, 163), (86, 0), (87, 142), (88, 40), (89, 135), (90, 152), (91, 1), (92, 185), (93, 64), (94, 160), (95, 52), (96, 20), (97, 144), (98, 55), (99, 13), (100, 70), (101, 130), (102, 50), (103, 199), (104, 190), (105, 62), (106, 186), (107, 105), (108, 101), (109, 126), (110, 53), (111, 143), (112, 125), (113, 66), (114, 118), (115, 63), (116, 138), (117, 168), (118, 37), (119, 34), (120, 174), (121, 31), (122, 139), (123, 137), (124, 177), (125, 41), (126, 22), (127, 120), (128, 115), (129, 178), (130, 131), (131, 47), (132, 44), (133, 78), (134, 121), (135, 28), (136, 175), (137, 110), (138, 162), (139, 96), (140, 116), (141, 23), (142, 45), (143, 141), (144, 187), (145, 154), (146, 21), (147, 180), (148, 134), (149, 109), (150, 72), (151, 153), (152, 102), (153, 188), (154, 17), (155, 59), (156, 99), (157, 71), (158, 167), (159, 191), (160, 42), (161, 58), (162, 161), (163, 77), (164, 114), (165, 35), (166, 189), (167, 36), (168, 26), (169, 146), (170, 157), (171, 48), (172, 173), (173, 38), (174, 74), (175, 6), (176, 166), (177, 148), (178, 89), (179, 61), (180, 128), (181, 184), (182, 107), (183, 16), (184, 25), (185, 60), (186, 106), (187, 8), (188, 179), (189, 11), (190, 93), (191, 117), (192, 133), (193, 119), (194, 159), (195, 104), (196, 2), (197, 87), (198, 132), (199, 145)]}
Checkpoint ...
[33mEpoch 9/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [8][ 0/45]	Total Loss -2.2669e+01 (-2.2669e+01)	Consistency Loss 3.6972e+00 (3.6972e+00)	Entropy 5.2732e+00 (5.2732e+00)
Epoch: [8][25/45]	Total Loss -2.2807e+01 (-2.2636e+01)	Consistency Loss 3.5578e+00 (3.6971e+00)	Entropy 5.2729e+00 (5.2666e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.277971267700195, 'consistency': 3.0706310272216797, 'total_loss': -2.2073402404785156}], 'lowest_loss_head': 0, 'lowest_loss': -2.2073402404785156}
New lowest loss on validation set: -2.1054 -> -2.2073
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.12530203658957542, 'ARI': 0.04330797464234526, 'NMI': 0.45743018047522804, 'ACC Top-5': 0.24767000345184673, 'hungarian_match': [(0, 86), (1, 115), (2, 3), (3, 97), (4, 26), (5, 74), (6, 167), (7, 10), (8, 157), (9, 197), (10, 31), (11, 37), (12, 116), (13, 65), (14, 17), (15, 95), (16, 169), (17, 183), (18, 40), (19, 35), (20, 147), (21, 91), (22, 64), (23, 16), (24, 5), (25, 176), (26, 140), (27, 124), (28, 54), (29, 112), (30, 158), (31, 122), (32, 136), (33, 46), (34, 84), (35, 189), (36, 182), (37, 194), (38, 126), (39, 181), (40, 13), (41, 72), (42, 49), (43, 159), (44, 106), (45, 131), (46, 0), (47, 81), (48, 76), (49, 23), (50, 107), (51, 69), (52, 121), (53, 108), (54, 103), (55, 172), (56, 67), (57, 125), (58, 30), (59, 44), (60, 11), (61, 42), (62, 190), (63, 134), (64, 175), (65, 47), (66, 166), (67, 68), (68, 88), (69, 73), (70, 119), (71, 101), (72, 137), (73, 191), (74, 98), (75, 105), (76, 87), (77, 15), (78, 170), (79, 51), (80, 100), (81, 155), (82, 80), (83, 43), (84, 146), (85, 164), (86, 71), (87, 142), (88, 12), (89, 82), (90, 138), (91, 57), (92, 185), (93, 62), (94, 160), (95, 52), (96, 20), (97, 144), (98, 55), (99, 36), (100, 196), (101, 130), (102, 50), (103, 9), (104, 79), (105, 70), (106, 6), (107, 45), (108, 90), (109, 120), (110, 171), (111, 143), (112, 199), (113, 198), (114, 173), (115, 63), (116, 78), (117, 168), (118, 192), (119, 184), (120, 150), (121, 127), (122, 139), (123, 66), (124, 123), (125, 18), (126, 22), (127, 149), (128, 94), (129, 178), (130, 135), (131, 188), (132, 1), (133, 38), (134, 19), (135, 28), (136, 165), (137, 110), (138, 34), (139, 96), (140, 118), (141, 75), (142, 177), (143, 141), (144, 187), (145, 154), (146, 21), (147, 180), (148, 111), (149, 109), (150, 174), (151, 153), (152, 102), (153, 85), (154, 14), (155, 59), (156, 99), (157, 7), (158, 117), (159, 27), (160, 151), (161, 58), (162, 161), (163, 77), (164, 195), (165, 193), (166, 186), (167, 56), (168, 148), (169, 83), (170, 53), (171, 48), (172, 162), (173, 129), (174, 93), (175, 4), (176, 32), (177, 114), (178, 89), (179, 61), (180, 128), (181, 39), (182, 24), (183, 152), (184, 25), (185, 60), (186, 133), (187, 29), (188, 179), (189, 113), (190, 163), (191, 156), (192, 92), (193, 8), (194, 41), (195, 104), (196, 2), (197, 33), (198, 132), (199, 145)]}
Checkpoint ...
[33mEpoch 10/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [9][ 0/45]	Total Loss -2.2691e+01 (-2.2691e+01)	Consistency Loss 3.6309e+00 (3.6309e+00)	Entropy 5.2645e+00 (5.2645e+00)
Epoch: [9][25/45]	Total Loss -2.2787e+01 (-2.2704e+01)	Consistency Loss 3.5420e+00 (3.6014e+00)	Entropy 5.2657e+00 (5.2611e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.281130790710449, 'consistency': 3.0480008125305176, 'total_loss': -2.2331299781799316}], 'lowest_loss_head': 0, 'lowest_loss': -2.2331299781799316}
New lowest loss on validation set: -2.2073 -> -2.2331
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.12789092164307905, 'ARI': 0.04594218008887497, 'NMI': 0.45823607358631063, 'ACC Top-5': 0.2392129789437349, 'hungarian_match': [(0, 86), (1, 112), (2, 3), (3, 148), (4, 13), (5, 183), (6, 131), (7, 10), (8, 18), (9, 6), (10, 150), (11, 37), (12, 147), (13, 65), (14, 17), (15, 30), (16, 169), (17, 73), (18, 81), (19, 119), (20, 120), (21, 91), (22, 127), (23, 42), (24, 111), (25, 176), (26, 103), (27, 124), (28, 97), (29, 173), (30, 163), (31, 122), (32, 166), (33, 54), (34, 84), (35, 189), (36, 51), (37, 194), (38, 126), (39, 155), (40, 121), (41, 46), (42, 49), (43, 79), (44, 133), (45, 34), (46, 24), (47, 40), (48, 170), (49, 5), (50, 107), (51, 196), (52, 171), (53, 108), (54, 109), (55, 172), (56, 67), (57, 125), (58, 9), (59, 44), (60, 82), (61, 69), (62, 66), (63, 134), (64, 102), (65, 175), (66, 156), (67, 68), (68, 88), (69, 136), (70, 33), (71, 101), (72, 123), (73, 50), (74, 98), (75, 145), (76, 197), (77, 15), (78, 129), (79, 85), (80, 100), (81, 157), (82, 80), (83, 43), (84, 151), (85, 164), (86, 71), (87, 142), (88, 188), (89, 74), (90, 152), (91, 0), (92, 185), (93, 62), (94, 160), (95, 52), (96, 20), (97, 83), (98, 55), (99, 36), (100, 114), (101, 116), (102, 4), (103, 78), (104, 190), (105, 70), (106, 61), (107, 105), (108, 137), (109, 167), (110, 53), (111, 143), (112, 199), (113, 198), (114, 118), (115, 63), (116, 138), (117, 168), (118, 192), (119, 94), (120, 174), (121, 11), (122, 139), (123, 75), (124, 159), (125, 95), (126, 22), (127, 130), (128, 181), (129, 178), (130, 135), (131, 7), (132, 191), (133, 38), (134, 31), (135, 106), (136, 14), (137, 110), (138, 162), (139, 96), (140, 184), (141, 23), (142, 177), (143, 1), (144, 187), (145, 19), (146, 21), (147, 180), (148, 39), (149, 35), (150, 165), (151, 153), (152, 47), (153, 140), (154, 45), (155, 59), (156, 64), (157, 92), (158, 117), (159, 27), (160, 179), (161, 58), (162, 161), (163, 77), (164, 195), (165, 193), (166, 186), (167, 56), (168, 26), (169, 146), (170, 115), (171, 48), (172, 158), (173, 141), (174, 93), (175, 12), (176, 32), (177, 182), (178, 89), (179, 149), (180, 128), (181, 29), (182, 57), (183, 16), (184, 8), (185, 60), (186, 25), (187, 99), (188, 76), (189, 113), (190, 90), (191, 154), (192, 72), (193, 28), (194, 41), (195, 104), (196, 2), (197, 87), (198, 132), (199, 144)]}
Checkpoint ...
[33mEpoch 11/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [10][ 0/45]	Total Loss -2.2804e+01 (-2.2804e+01)	Consistency Loss 3.4147e+00 (3.4147e+00)	Entropy 5.2438e+00 (5.2438e+00)
Epoch: [10][25/45]	Total Loss -2.2697e+01 (-2.2715e+01)	Consistency Loss 3.6071e+00 (3.5948e+00)	Entropy 5.2609e+00 (5.2619e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.274779796600342, 'consistency': 3.0010640621185303, 'total_loss': -2.2737157344818115}], 'lowest_loss_head': 0, 'lowest_loss': -2.2737157344818115}
New lowest loss on validation set: -2.2331 -> -2.2737
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.12840869865377977, 'ARI': 0.04802148355703554, 'NMI': 0.46054475311377613, 'ACC Top-5': 0.2516396272005523, 'hungarian_match': [(0, 86), (1, 112), (2, 13), (3, 148), (4, 1), (5, 183), (6, 194), (7, 10), (8, 154), (9, 195), (10, 164), (11, 42), (12, 116), (13, 60), (14, 17), (15, 95), (16, 169), (17, 19), (18, 81), (19, 33), (20, 120), (21, 35), (22, 26), (23, 75), (24, 117), (25, 176), (26, 149), (27, 124), (28, 54), (29, 125), (30, 168), (31, 122), (32, 7), (33, 47), (34, 84), (35, 189), (36, 45), (37, 78), (38, 126), (39, 192), (40, 121), (41, 46), (42, 49), (43, 119), (44, 133), (45, 93), (46, 24), (47, 40), (48, 170), (49, 23), (50, 107), (51, 36), (52, 171), (53, 108), (54, 103), (55, 172), (56, 67), (57, 127), (58, 18), (59, 44), (60, 96), (61, 69), (62, 66), (63, 39), (64, 102), (65, 113), (66, 166), (67, 68), (68, 88), (69, 191), (70, 114), (71, 111), (72, 16), (73, 5), (74, 98), (75, 2), (76, 197), (77, 15), (78, 181), (79, 52), (80, 100), (81, 157), (82, 80), (83, 43), (84, 147), (85, 167), (86, 71), (87, 142), (88, 184), (89, 74), (90, 50), (91, 0), (92, 185), (93, 62), (94, 160), (95, 51), (96, 97), (97, 144), (98, 55), (99, 14), (100, 196), (101, 158), (102, 4), (103, 94), (104, 190), (105, 70), (106, 61), (107, 105), (108, 137), (109, 34), (110, 53), (111, 140), (112, 37), (113, 198), (114, 182), (115, 63), (116, 56), (117, 129), (118, 30), (119, 90), (120, 118), (121, 11), (122, 139), (123, 12), (124, 150), (125, 156), (126, 22), (127, 130), (128, 38), (129, 178), (130, 135), (131, 136), (132, 85), (133, 159), (134, 31), (135, 28), (136, 115), (137, 110), (138, 162), (139, 79), (140, 83), (141, 199), (142, 177), (143, 141), (144, 187), (145, 155), (146, 21), (147, 180), (148, 134), (149, 109), (150, 174), (151, 153), (152, 151), (153, 6), (154, 165), (155, 58), (156, 64), (157, 92), (158, 73), (159, 27), (160, 179), (161, 59), (162, 161), (163, 77), (164, 193), (165, 91), (166, 186), (167, 76), (168, 9), (169, 146), (170, 101), (171, 48), (172, 173), (173, 175), (174, 188), (175, 131), (176, 32), (177, 3), (178, 89), (179, 65), (180, 128), (181, 82), (182, 57), (183, 152), (184, 25), (185, 99), (186, 106), (187, 29), (188, 20), (189, 123), (190, 163), (191, 138), (192, 72), (193, 8), (194, 41), (195, 104), (196, 143), (197, 87), (198, 132), (199, 145)]}
Checkpoint ...
[33mEpoch 12/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [11][ 0/45]	Total Loss -2.2699e+01 (-2.2699e+01)	Consistency Loss 3.6031e+00 (3.6031e+00)	Entropy 5.2604e+00 (5.2604e+00)
Epoch: [11][25/45]	Total Loss -2.2901e+01 (-2.2743e+01)	Consistency Loss 3.3737e+00 (3.5458e+00)	Entropy 5.2549e+00 (5.2578e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.277735233306885, 'consistency': 2.9307448863983154, 'total_loss': -2.3469903469085693}], 'lowest_loss_head': 0, 'lowest_loss': -2.3469903469085693}
New lowest loss on validation set: -2.2737 -> -2.3470
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13203313772868486, 'ARI': 0.04809280514018079, 'NMI': 0.4638966981682946, 'ACC Top-5': 0.25854332067656194, 'hungarian_match': [(0, 86), (1, 112), (2, 3), (3, 97), (4, 20), (5, 183), (6, 16), (7, 90), (8, 30), (9, 197), (10, 196), (11, 37), (12, 116), (13, 65), (14, 17), (15, 96), (16, 164), (17, 167), (18, 47), (19, 182), (20, 102), (21, 35), (22, 136), (23, 42), (24, 117), (25, 137), (26, 64), (27, 124), (28, 54), (29, 125), (30, 156), (31, 122), (32, 129), (33, 46), (34, 84), (35, 27), (36, 51), (37, 78), (38, 126), (39, 169), (40, 121), (41, 94), (42, 49), (43, 159), (44, 133), (45, 93), (46, 2), (47, 40), (48, 148), (49, 23), (50, 10), (51, 194), (52, 178), (53, 176), (54, 103), (55, 172), (56, 67), (57, 127), (58, 18), (59, 83), (60, 95), (61, 70), (62, 66), (63, 39), (64, 115), (65, 113), (66, 38), (67, 68), (68, 88), (69, 73), (70, 119), (71, 101), (72, 123), (73, 5), (74, 98), (75, 140), (76, 87), (77, 15), (78, 149), (79, 7), (80, 100), (81, 155), (82, 80), (83, 43), (84, 106), (85, 157), (86, 0), (87, 142), (88, 181), (89, 79), (90, 171), (91, 57), (92, 185), (93, 62), (94, 160), (95, 52), (96, 191), (97, 144), (98, 55), (99, 14), (100, 120), (101, 158), (102, 9), (103, 199), (104, 13), (105, 141), (106, 82), (107, 45), (108, 170), (109, 12), (110, 138), (111, 143), (112, 118), (113, 198), (114, 173), (115, 186), (116, 74), (117, 168), (118, 53), (119, 81), (120, 36), (121, 11), (122, 139), (123, 75), (124, 147), (125, 108), (126, 22), (127, 130), (128, 165), (129, 56), (130, 135), (131, 188), (132, 85), (133, 150), (134, 31), (135, 28), (136, 175), (137, 110), (138, 34), (139, 69), (140, 33), (141, 50), (142, 177), (143, 1), (144, 187), (145, 19), (146, 21), (147, 192), (148, 111), (149, 109), (150, 174), (151, 153), (152, 151), (153, 105), (154, 195), (155, 59), (156, 63), (157, 92), (158, 180), (159, 190), (160, 179), (161, 58), (162, 161), (163, 77), (164, 193), (165, 91), (166, 189), (167, 134), (168, 26), (169, 146), (170, 4), (171, 48), (172, 162), (173, 71), (174, 72), (175, 6), (176, 32), (177, 114), (178, 89), (179, 61), (180, 128), (181, 29), (182, 24), (183, 152), (184, 25), (185, 60), (186, 107), (187, 99), (188, 76), (189, 184), (190, 163), (191, 154), (192, 166), (193, 8), (194, 41), (195, 104), (196, 44), (197, 131), (198, 132), (199, 145)]}
Checkpoint ...
[33mEpoch 13/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [12][ 0/45]	Total Loss -2.2632e+01 (-2.2632e+01)	Consistency Loss 3.5998e+00 (3.5998e+00)	Entropy 5.2463e+00 (5.2463e+00)
Epoch: [12][25/45]	Total Loss -2.2644e+01 (-2.2758e+01)	Consistency Loss 3.6127e+00 (3.5014e+00)	Entropy 5.2513e+00 (5.2518e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.278325080871582, 'consistency': 2.927767038345337, 'total_loss': -2.350558042526245}], 'lowest_loss_head': 0, 'lowest_loss': -2.350558042526245}
New lowest loss on validation set: -2.3470 -> -2.3506
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13082499137038314, 'ARI': 0.047425529984900267, 'NMI': 0.46345484041888657, 'ACC Top-5': 0.2590610976872627, 'hungarian_match': [(0, 86), (1, 148), (2, 13), (3, 17), (4, 3), (5, 74), (6, 34), (7, 10), (8, 56), (9, 197), (10, 150), (11, 131), (12, 182), (13, 60), (14, 123), (15, 95), (16, 164), (17, 167), (18, 40), (19, 63), (20, 102), (21, 35), (22, 21), (23, 42), (24, 134), (25, 176), (26, 33), (27, 124), (28, 54), (29, 19), (30, 158), (31, 122), (32, 166), (33, 46), (34, 84), (35, 27), (36, 45), (37, 5), (38, 12), (39, 169), (40, 116), (41, 47), (42, 50), (43, 155), (44, 29), (45, 172), (46, 24), (47, 133), (48, 170), (49, 8), (50, 71), (51, 196), (52, 178), (53, 96), (54, 109), (55, 181), (56, 67), (57, 127), (58, 90), (59, 44), (60, 14), (61, 191), (62, 190), (63, 39), (64, 115), (65, 113), (66, 38), (67, 68), (68, 88), (69, 112), (70, 9), (71, 101), (72, 137), (73, 119), (74, 98), (75, 145), (76, 87), (77, 15), (78, 132), (79, 51), (80, 100), (81, 168), (82, 80), (83, 43), (84, 147), (85, 157), (86, 0), (87, 142), (88, 193), (89, 92), (90, 152), (91, 57), (92, 185), (93, 62), (94, 160), (95, 52), (96, 20), (97, 144), (98, 55), (99, 36), (100, 120), (101, 114), (102, 22), (103, 66), (104, 188), (105, 83), (106, 186), (107, 49), (108, 76), (109, 171), (110, 53), (111, 143), (112, 199), (113, 198), (114, 173), (115, 65), (116, 117), (117, 195), (118, 30), (119, 184), (120, 118), (121, 11), (122, 139), (123, 136), (124, 175), (125, 156), (126, 106), (127, 126), (128, 31), (129, 94), (130, 138), (131, 7), (132, 85), (133, 159), (134, 154), (135, 107), (136, 78), (137, 110), (138, 183), (139, 69), (140, 72), (141, 81), (142, 177), (143, 141), (144, 187), (145, 97), (146, 125), (147, 180), (148, 111), (149, 103), (150, 174), (151, 153), (152, 151), (153, 105), (154, 93), (155, 59), (156, 61), (157, 75), (158, 73), (159, 192), (160, 179), (161, 58), (162, 161), (163, 77), (164, 194), (165, 91), (166, 189), (167, 165), (168, 149), (169, 1), (170, 70), (171, 48), (172, 162), (173, 163), (174, 79), (175, 6), (176, 32), (177, 140), (178, 89), (179, 64), (180, 128), (181, 82), (182, 23), (183, 16), (184, 25), (185, 4), (186, 26), (187, 99), (188, 18), (189, 135), (190, 37), (191, 108), (192, 129), (193, 28), (194, 41), (195, 104), (196, 2), (197, 130), (198, 121), (199, 146)]}
Checkpoint ...
[33mEpoch 14/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [13][ 0/45]	Total Loss -2.2787e+01 (-2.2787e+01)	Consistency Loss 3.5222e+00 (3.5222e+00)	Entropy 5.2618e+00 (5.2618e+00)
Epoch: [13][25/45]	Total Loss -2.2713e+01 (-2.2774e+01)	Consistency Loss 3.4785e+00 (3.4914e+00)	Entropy 5.2384e+00 (5.2530e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.279519557952881, 'consistency': 2.880394220352173, 'total_loss': -2.399125337600708}], 'lowest_loss_head': 0, 'lowest_loss': -2.399125337600708}
New lowest loss on validation set: -2.3506 -> -2.3991
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.12927166033828097, 'ARI': 0.04523296843860099, 'NMI': 0.46092122186749834, 'ACC Top-5': 0.2566448049706593, 'hungarian_match': [(0, 86), (1, 183), (2, 13), (3, 55), (4, 3), (5, 115), (6, 196), (7, 10), (8, 30), (9, 197), (10, 150), (11, 37), (12, 147), (13, 65), (14, 123), (15, 95), (16, 169), (17, 73), (18, 39), (19, 119), (20, 102), (21, 35), (22, 193), (23, 129), (24, 49), (25, 97), (26, 149), (27, 124), (28, 137), (29, 19), (30, 158), (31, 122), (32, 136), (33, 94), (34, 84), (35, 27), (36, 45), (37, 78), (38, 12), (39, 171), (40, 121), (41, 46), (42, 50), (43, 159), (44, 107), (45, 93), (46, 186), (47, 81), (48, 114), (49, 23), (50, 71), (51, 194), (52, 79), (53, 162), (54, 109), (55, 172), (56, 67), (57, 127), (58, 90), (59, 44), (60, 47), (61, 26), (62, 190), (63, 134), (64, 42), (65, 69), (66, 38), (67, 68), (68, 88), (69, 116), (70, 120), (71, 101), (72, 20), (73, 5), (74, 98), (75, 140), (76, 87), (77, 15), (78, 155), (79, 85), (80, 100), (81, 166), (82, 80), (83, 43), (84, 146), (85, 167), (86, 0), (87, 142), (88, 40), (89, 74), (90, 152), (91, 57), (92, 54), (93, 59), (94, 151), (95, 52), (96, 14), (97, 144), (98, 118), (99, 36), (100, 75), (101, 170), (102, 22), (103, 199), (104, 178), (105, 141), (106, 6), (107, 51), (108, 76), (109, 126), (110, 53), (111, 143), (112, 179), (113, 198), (114, 182), (115, 63), (116, 131), (117, 168), (118, 181), (119, 185), (120, 175), (121, 11), (122, 139), (123, 66), (124, 125), (125, 108), (126, 106), (127, 130), (128, 31), (129, 176), (130, 135), (131, 112), (132, 188), (133, 161), (134, 117), (135, 28), (136, 156), (137, 110), (138, 34), (139, 96), (140, 56), (141, 191), (142, 177), (143, 1), (144, 187), (145, 154), (146, 21), (147, 195), (148, 111), (149, 103), (150, 174), (151, 153), (152, 157), (153, 105), (154, 184), (155, 62), (156, 61), (157, 7), (158, 180), (159, 192), (160, 160), (161, 58), (162, 164), (163, 77), (164, 17), (165, 91), (166, 189), (167, 165), (168, 9), (169, 83), (170, 70), (171, 48), (172, 173), (173, 148), (174, 82), (175, 4), (176, 32), (177, 72), (178, 89), (179, 64), (180, 128), (181, 29), (182, 24), (183, 16), (184, 25), (185, 60), (186, 133), (187, 99), (188, 18), (189, 113), (190, 163), (191, 138), (192, 92), (193, 8), (194, 41), (195, 104), (196, 2), (197, 33), (198, 132), (199, 145)]}
Checkpoint ...
[33mEpoch 15/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [14][ 0/45]	Total Loss -2.2900e+01 (-2.2900e+01)	Consistency Loss 3.3550e+00 (3.3550e+00)	Entropy 5.2511e+00 (5.2511e+00)
Epoch: [14][25/45]	Total Loss -2.2716e+01 (-2.2779e+01)	Consistency Loss 3.5529e+00 (3.4668e+00)	Entropy 5.2538e+00 (5.2491e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.277231693267822, 'consistency': 2.8249638080596924, 'total_loss': -2.45226788520813}], 'lowest_loss_head': 0, 'lowest_loss': -2.45226788520813}
New lowest loss on validation set: -2.3991 -> -2.4523
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13444943044528823, 'ARI': 0.048315279181671375, 'NMI': 0.4653973453211949, 'ACC Top-5': 0.2676907145322748, 'hungarian_match': [(0, 86), (1, 112), (2, 3), (3, 148), (4, 20), (5, 149), (6, 131), (7, 10), (8, 56), (9, 195), (10, 93), (11, 37), (12, 116), (13, 60), (14, 114), (15, 95), (16, 164), (17, 73), (18, 31), (19, 33), (20, 102), (21, 35), (22, 193), (23, 129), (24, 143), (25, 135), (26, 55), (27, 123), (28, 137), (29, 157), (30, 156), (31, 122), (32, 136), (33, 46), (34, 84), (35, 189), (36, 45), (37, 194), (38, 126), (39, 171), (40, 121), (41, 94), (42, 49), (43, 79), (44, 133), (45, 163), (46, 24), (47, 81), (48, 170), (49, 5), (50, 71), (51, 12), (52, 178), (53, 165), (54, 103), (55, 172), (56, 67), (57, 127), (58, 90), (59, 44), (60, 26), (61, 66), (62, 188), (63, 39), (64, 42), (65, 153), (66, 139), (67, 68), (68, 88), (69, 125), (70, 38), (71, 111), (72, 34), (73, 7), (74, 124), (75, 92), (76, 197), (77, 15), (78, 168), (79, 85), (80, 100), (81, 179), (82, 80), (83, 43), (84, 147), (85, 166), (86, 0), (87, 142), (88, 181), (89, 185), (90, 152), (91, 57), (92, 54), (93, 83), (94, 160), (95, 52), (96, 14), (97, 144), (98, 96), (99, 36), (100, 196), (101, 118), (102, 22), (103, 78), (104, 47), (105, 70), (106, 6), (107, 51), (108, 76), (109, 40), (110, 53), (111, 140), (112, 199), (113, 198), (114, 173), (115, 65), (116, 74), (117, 169), (118, 132), (119, 184), (120, 155), (121, 11), (122, 30), (123, 75), (124, 175), (125, 108), (126, 106), (127, 120), (128, 159), (129, 176), (130, 97), (131, 182), (132, 191), (133, 190), (134, 19), (135, 28), (136, 192), (137, 110), (138, 183), (139, 69), (140, 130), (141, 50), (142, 177), (143, 141), (144, 187), (145, 154), (146, 21), (147, 180), (148, 134), (149, 109), (150, 174), (151, 119), (152, 151), (153, 105), (154, 117), (155, 59), (156, 63), (157, 62), (158, 98), (159, 27), (160, 72), (161, 58), (162, 161), (163, 77), (164, 17), (165, 91), (166, 186), (167, 150), (168, 9), (169, 146), (170, 101), (171, 48), (172, 162), (173, 158), (174, 82), (175, 4), (176, 32), (177, 1), (178, 89), (179, 64), (180, 128), (181, 29), (182, 23), (183, 16), (184, 25), (185, 61), (186, 107), (187, 99), (188, 18), (189, 113), (190, 115), (191, 138), (192, 13), (193, 8), (194, 41), (195, 104), (196, 2), (197, 87), (198, 167), (199, 145)]}
Checkpoint ...
[33mEpoch 16/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [15][ 0/45]	Total Loss -2.2939e+01 (-2.2939e+01)	Consistency Loss 3.3633e+00 (3.3633e+00)	Entropy 5.2605e+00 (5.2605e+00)
Epoch: [15][25/45]	Total Loss -2.3039e+01 (-2.2884e+01)	Consistency Loss 3.1893e+00 (3.3640e+00)	Entropy 5.2457e+00 (5.2495e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.280378341674805, 'consistency': 2.8133630752563477, 'total_loss': -2.467015266418457}], 'lowest_loss_head': 0, 'lowest_loss': -2.467015266418457}
New lowest loss on validation set: -2.4523 -> -2.4670
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13444943044528823, 'ARI': 0.049656496740404156, 'NMI': 0.46574315213928735, 'ACC Top-5': 0.26009665170866414, 'hungarian_match': [(0, 86), (1, 112), (2, 3), (3, 148), (4, 20), (5, 74), (6, 16), (7, 10), (8, 56), (9, 197), (10, 162), (11, 131), (12, 116), (13, 65), (14, 123), (15, 95), (16, 199), (17, 167), (18, 31), (19, 71), (20, 102), (21, 35), (22, 49), (23, 55), (24, 14), (25, 46), (26, 186), (27, 124), (28, 137), (29, 125), (30, 158), (31, 122), (32, 136), (33, 94), (34, 84), (35, 27), (36, 45), (37, 194), (38, 12), (39, 178), (40, 179), (41, 37), (42, 50), (43, 155), (44, 133), (45, 93), (46, 24), (47, 40), (48, 114), (49, 8), (50, 107), (51, 196), (52, 75), (53, 157), (54, 109), (55, 181), (56, 67), (57, 127), (58, 73), (59, 44), (60, 30), (61, 188), (62, 190), (63, 39), (64, 42), (65, 153), (66, 38), (67, 68), (68, 88), (69, 175), (70, 182), (71, 111), (72, 47), (73, 7), (74, 98), (75, 105), (76, 87), (77, 15), (78, 163), (79, 85), (80, 100), (81, 164), (82, 80), (83, 43), (84, 147), (85, 168), (86, 0), (87, 142), (88, 193), (89, 185), (90, 171), (91, 57), (92, 54), (93, 83), (94, 151), (95, 52), (96, 135), (97, 144), (98, 117), (99, 36), (100, 120), (101, 170), (102, 59), (103, 78), (104, 13), (105, 141), (106, 70), (107, 51), (108, 76), (109, 34), (110, 53), (111, 143), (112, 119), (113, 198), (114, 118), (115, 146), (116, 72), (117, 169), (118, 96), (119, 156), (120, 172), (121, 11), (122, 139), (123, 66), (124, 159), (125, 108), (126, 22), (127, 126), (128, 101), (129, 176), (130, 97), (131, 129), (132, 5), (133, 161), (134, 19), (135, 28), (136, 192), (137, 110), (138, 183), (139, 69), (140, 130), (141, 81), (142, 177), (143, 1), (144, 187), (145, 154), (146, 21), (147, 195), (148, 134), (149, 103), (150, 165), (151, 166), (152, 173), (153, 6), (154, 184), (155, 62), (156, 63), (157, 92), (158, 180), (159, 191), (160, 160), (161, 58), (162, 121), (163, 77), (164, 17), (165, 91), (166, 189), (167, 150), (168, 9), (169, 145), (170, 106), (171, 48), (172, 149), (173, 174), (174, 79), (175, 4), (176, 32), (177, 82), (178, 89), (179, 61), (180, 128), (181, 64), (182, 23), (183, 152), (184, 25), (185, 60), (186, 26), (187, 99), (188, 18), (189, 113), (190, 115), (191, 138), (192, 90), (193, 29), (194, 41), (195, 104), (196, 2), (197, 33), (198, 132), (199, 140)]}
Checkpoint ...
[33mEpoch 17/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [16][ 0/45]	Total Loss -2.2813e+01 (-2.2813e+01)	Consistency Loss 3.4701e+00 (3.4701e+00)	Entropy 5.2567e+00 (5.2567e+00)
Epoch: [16][25/45]	Total Loss -2.2791e+01 (-2.2856e+01)	Consistency Loss 3.4311e+00 (3.4000e+00)	Entropy 5.2445e+00 (5.2512e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.279519081115723, 'consistency': 2.7753562927246094, 'total_loss': -2.5041627883911133}], 'lowest_loss_head': 0, 'lowest_loss': -2.5041627883911133}
New lowest loss on validation set: -2.4670 -> -2.5042
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.1360027614773904, 'ARI': 0.049195271415695754, 'NMI': 0.4685901911782599, 'ACC Top-5': 0.26337590610976874, 'hungarian_match': [(0, 51), (1, 112), (2, 20), (3, 171), (4, 3), (5, 117), (6, 16), (7, 9), (8, 81), (9, 106), (10, 93), (11, 37), (12, 147), (13, 65), (14, 173), (15, 32), (16, 196), (17, 73), (18, 31), (19, 197), (20, 102), (21, 188), (22, 21), (23, 114), (24, 111), (25, 176), (26, 86), (27, 124), (28, 97), (29, 15), (30, 186), (31, 122), (32, 136), (33, 46), (34, 84), (35, 27), (36, 45), (37, 5), (38, 126), (39, 154), (40, 121), (41, 47), (42, 50), (43, 155), (44, 133), (45, 172), (46, 10), (47, 40), (48, 179), (49, 23), (50, 60), (51, 36), (52, 79), (53, 108), (54, 109), (55, 181), (56, 67), (57, 127), (58, 74), (59, 83), (60, 26), (61, 13), (62, 66), (63, 39), (64, 42), (65, 113), (66, 156), (67, 68), (68, 88), (69, 125), (70, 33), (71, 131), (72, 137), (73, 7), (74, 98), (75, 140), (76, 149), (77, 30), (78, 132), (79, 85), (80, 100), (81, 164), (82, 80), (83, 43), (84, 92), (85, 157), (86, 0), (87, 142), (88, 193), (89, 185), (90, 150), (91, 57), (92, 54), (93, 1), (94, 153), (95, 52), (96, 161), (97, 144), (98, 55), (99, 14), (100, 130), (101, 170), (102, 12), (103, 78), (104, 190), (105, 64), (106, 70), (107, 49), (108, 76), (109, 167), (110, 53), (111, 143), (112, 119), (113, 198), (114, 151), (115, 44), (116, 165), (117, 71), (118, 96), (119, 184), (120, 118), (121, 162), (122, 139), (123, 75), (124, 159), (125, 38), (126, 22), (127, 120), (128, 115), (129, 94), (130, 135), (131, 129), (132, 191), (133, 166), (134, 19), (135, 28), (136, 95), (137, 110), (138, 158), (139, 69), (140, 183), (141, 199), (142, 177), (143, 141), (144, 187), (145, 178), (146, 17), (147, 180), (148, 101), (149, 148), (150, 72), (151, 194), (152, 34), (153, 105), (154, 134), (155, 59), (156, 63), (157, 62), (158, 182), (159, 192), (160, 160), (161, 58), (162, 168), (163, 77), (164, 195), (165, 91), (166, 189), (167, 56), (168, 35), (169, 146), (170, 103), (171, 48), (172, 116), (173, 175), (174, 82), (175, 6), (176, 169), (177, 11), (178, 89), (179, 4), (180, 128), (181, 29), (182, 24), (183, 152), (184, 25), (185, 61), (186, 107), (187, 99), (188, 18), (189, 123), (190, 163), (191, 138), (192, 90), (193, 8), (194, 41), (195, 104), (196, 2), (197, 87), (198, 174), (199, 145)]}
Checkpoint ...
[33mEpoch 18/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [17][ 0/45]	Total Loss -2.2993e+01 (-2.2993e+01)	Consistency Loss 3.2067e+00 (3.2067e+00)	Entropy 5.2399e+00 (5.2399e+00)
Epoch: [17][25/45]	Total Loss -2.2922e+01 (-2.2844e+01)	Consistency Loss 3.3402e+00 (3.3811e+00)	Entropy 5.2525e+00 (5.2451e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.279182434082031, 'consistency': 2.7492268085479736, 'total_loss': -2.5299556255340576}], 'lowest_loss_head': 0, 'lowest_loss': -2.5299556255340576}
New lowest loss on validation set: -2.5042 -> -2.5300
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13617535381429063, 'ARI': 0.051251861056358594, 'NMI': 0.47042178428228115, 'ACC Top-5': 0.2644114601311702, 'hungarian_match': [(0, 51), (1, 112), (2, 3), (3, 17), (4, 13), (5, 183), (6, 131), (7, 9), (8, 56), (9, 106), (10, 150), (11, 37), (12, 147), (13, 60), (14, 123), (15, 32), (16, 164), (17, 167), (18, 31), (19, 35), (20, 170), (21, 188), (22, 193), (23, 116), (24, 117), (25, 46), (26, 86), (27, 124), (28, 54), (29, 20), (30, 175), (31, 122), (32, 174), (33, 94), (34, 84), (35, 27), (36, 45), (37, 5), (38, 126), (39, 171), (40, 15), (41, 47), (42, 49), (43, 156), (44, 107), (45, 93), (46, 24), (47, 81), (48, 119), (49, 22), (50, 71), (51, 36), (52, 196), (53, 192), (54, 109), (55, 172), (56, 67), (57, 127), (58, 74), (59, 44), (60, 97), (61, 187), (62, 190), (63, 39), (64, 102), (65, 69), (66, 108), (67, 68), (68, 88), (69, 125), (70, 33), (71, 111), (72, 134), (73, 6), (74, 98), (75, 145), (76, 197), (77, 30), (78, 132), (79, 85), (80, 100), (81, 179), (82, 80), (83, 43), (84, 133), (85, 153), (86, 0), (87, 142), (88, 40), (89, 82), (90, 152), (91, 57), (92, 185), (93, 83), (94, 199), (95, 52), (96, 160), (97, 144), (98, 55), (99, 14), (100, 120), (101, 114), (102, 75), (103, 78), (104, 136), (105, 70), (106, 95), (107, 50), (108, 76), (109, 34), (110, 53), (111, 143), (112, 10), (113, 198), (114, 173), (115, 65), (116, 159), (117, 151), (118, 96), (119, 140), (120, 118), (121, 11), (122, 139), (123, 77), (124, 155), (125, 38), (126, 92), (127, 130), (128, 73), (129, 176), (130, 135), (131, 129), (132, 64), (133, 161), (134, 154), (135, 28), (136, 165), (137, 110), (138, 158), (139, 79), (140, 121), (141, 191), (142, 177), (143, 141), (144, 186), (145, 178), (146, 21), (147, 180), (148, 101), (149, 12), (150, 72), (151, 166), (152, 163), (153, 105), (154, 184), (155, 62), (156, 63), (157, 7), (158, 182), (159, 66), (160, 42), (161, 58), (162, 168), (163, 137), (164, 195), (165, 91), (166, 189), (167, 157), (168, 148), (169, 1), (170, 103), (171, 48), (172, 162), (173, 194), (174, 19), (175, 4), (176, 169), (177, 149), (178, 89), (179, 59), (180, 128), (181, 29), (182, 23), (183, 16), (184, 25), (185, 61), (186, 26), (187, 99), (188, 18), (189, 113), (190, 115), (191, 138), (192, 90), (193, 8), (194, 41), (195, 104), (196, 2), (197, 87), (198, 181), (199, 146)]}
Checkpoint ...
[33mEpoch 19/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [18][ 0/45]	Total Loss -2.2959e+01 (-2.2959e+01)	Consistency Loss 3.2808e+00 (3.2808e+00)	Entropy 5.2479e+00 (5.2479e+00)
Epoch: [18][25/45]	Total Loss -2.2995e+01 (-2.2903e+01)	Consistency Loss 3.2420e+00 (3.3318e+00)	Entropy 5.2475e+00 (5.2470e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.277063369750977, 'consistency': 2.713005304336548, 'total_loss': -2.5640580654144287}], 'lowest_loss_head': 0, 'lowest_loss': -2.5640580654144287}
New lowest loss on validation set: -2.5300 -> -2.5641
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13652053848809112, 'ARI': 0.04887303853730201, 'NMI': 0.4682479255156161, 'ACC Top-5': 0.2632033137728685, 'hungarian_match': [(0, 86), (1, 183), (2, 3), (3, 171), (4, 13), (5, 117), (6, 131), (7, 9), (8, 81), (9, 106), (10, 15), (11, 174), (12, 147), (13, 65), (14, 123), (15, 165), (16, 164), (17, 73), (18, 31), (19, 197), (20, 102), (21, 188), (22, 21), (23, 114), (24, 108), (25, 137), (26, 84), (27, 124), (28, 97), (29, 148), (30, 158), (31, 122), (32, 184), (33, 94), (34, 149), (35, 27), (36, 45), (37, 194), (38, 126), (39, 154), (40, 121), (41, 46), (42, 49), (43, 79), (44, 133), (45, 90), (46, 10), (47, 40), (48, 173), (49, 23), (50, 60), (51, 112), (52, 178), (53, 192), (54, 109), (55, 181), (56, 67), (57, 127), (58, 30), (59, 44), (60, 26), (61, 66), (62, 186), (63, 39), (64, 42), (65, 12), (66, 153), (67, 68), (68, 88), (69, 125), (70, 33), (71, 101), (72, 135), (73, 191), (74, 98), (75, 92), (76, 87), (77, 74), (78, 36), (79, 85), (80, 100), (81, 157), (82, 80), (83, 43), (84, 146), (85, 159), (86, 0), (87, 142), (88, 193), (89, 4), (90, 152), (91, 57), (92, 185), (93, 83), (94, 151), (95, 52), (96, 160), (97, 144), (98, 55), (99, 14), (100, 196), (101, 170), (102, 195), (103, 78), (104, 93), (105, 70), (106, 95), (107, 7), (108, 76), (109, 150), (110, 53), (111, 143), (112, 199), (113, 198), (114, 175), (115, 62), (116, 136), (117, 169), (118, 96), (119, 156), (120, 118), (121, 11), (122, 139), (123, 190), (124, 172), (125, 38), (126, 22), (127, 120), (128, 115), (129, 176), (130, 75), (131, 182), (132, 51), (133, 161), (134, 19), (135, 28), (136, 116), (137, 110), (138, 34), (139, 69), (140, 130), (141, 50), (142, 177), (143, 141), (144, 187), (145, 155), (146, 17), (147, 180), (148, 111), (149, 20), (150, 72), (151, 166), (152, 47), (153, 105), (154, 54), (155, 59), (156, 63), (157, 140), (158, 167), (159, 71), (160, 179), (161, 58), (162, 168), (163, 77), (164, 119), (165, 91), (166, 189), (167, 56), (168, 35), (169, 1), (170, 103), (171, 48), (172, 162), (173, 163), (174, 82), (175, 6), (176, 32), (177, 134), (178, 89), (179, 61), (180, 128), (181, 29), (182, 24), (183, 16), (184, 25), (185, 64), (186, 107), (187, 99), (188, 18), (189, 113), (190, 37), (191, 138), (192, 129), (193, 8), (194, 41), (195, 104), (196, 2), (197, 5), (198, 132), (199, 145)]}
Checkpoint ...
[33mEpoch 20/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [19][ 0/45]	Total Loss -2.2948e+01 (-2.2948e+01)	Consistency Loss 3.3276e+00 (3.3276e+00)	Entropy 5.2551e+00 (5.2551e+00)
Epoch: [19][25/45]	Total Loss -2.2857e+01 (-2.2858e+01)	Consistency Loss 3.3700e+00 (3.3667e+00)	Entropy 5.2453e+00 (5.2448e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.278994560241699, 'consistency': 2.7042579650878906, 'total_loss': -2.5747365951538086}], 'lowest_loss_head': 0, 'lowest_loss': -2.5747365951538086}
New lowest loss on validation set: -2.5641 -> -2.5747
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.1372109078356921, 'ARI': 0.0488818972997947, 'NMI': 0.4680053385234312, 'ACC Top-5': 0.2670003451846738, 'hungarian_match': [(0, 86), (1, 183), (2, 3), (3, 182), (4, 103), (5, 74), (6, 131), (7, 10), (8, 138), (9, 82), (10, 196), (11, 37), (12, 147), (13, 65), (14, 123), (15, 165), (16, 167), (17, 73), (18, 31), (19, 197), (20, 102), (21, 35), (22, 21), (23, 114), (24, 55), (25, 46), (26, 84), (27, 124), (28, 135), (29, 112), (30, 158), (31, 122), (32, 136), (33, 94), (34, 149), (35, 27), (36, 45), (37, 78), (38, 126), (39, 171), (40, 121), (41, 47), (42, 49), (43, 155), (44, 133), (45, 172), (46, 0), (47, 77), (48, 50), (49, 23), (50, 71), (51, 34), (52, 178), (53, 157), (54, 109), (55, 181), (56, 67), (57, 127), (58, 18), (59, 44), (60, 26), (61, 187), (62, 190), (63, 39), (64, 42), (65, 12), (66, 166), (67, 68), (68, 88), (69, 125), (70, 33), (71, 101), (72, 111), (73, 7), (74, 98), (75, 61), (76, 87), (77, 38), (78, 36), (79, 85), (80, 99), (81, 164), (82, 80), (83, 43), (84, 92), (85, 153), (86, 2), (87, 142), (88, 193), (89, 4), (90, 152), (91, 57), (92, 185), (93, 83), (94, 151), (95, 52), (96, 20), (97, 144), (98, 15), (99, 40), (100, 120), (101, 170), (102, 119), (103, 66), (104, 93), (105, 91), (106, 95), (107, 51), (108, 76), (109, 160), (110, 53), (111, 140), (112, 199), (113, 195), (114, 175), (115, 63), (116, 191), (117, 169), (118, 96), (119, 156), (120, 118), (121, 11), (122, 30), (123, 75), (124, 150), (125, 108), (126, 22), (127, 130), (128, 41), (129, 176), (130, 97), (131, 174), (132, 17), (133, 161), (134, 19), (135, 28), (136, 129), (137, 110), (138, 162), (139, 69), (140, 116), (141, 81), (142, 177), (143, 141), (144, 186), (145, 139), (146, 198), (147, 180), (148, 134), (149, 14), (150, 72), (151, 184), (152, 163), (153, 105), (154, 54), (155, 59), (156, 100), (157, 62), (158, 13), (159, 192), (160, 179), (161, 60), (162, 168), (163, 137), (164, 194), (165, 188), (166, 189), (167, 56), (168, 148), (169, 146), (170, 70), (171, 48), (172, 173), (173, 159), (174, 79), (175, 6), (176, 32), (177, 1), (178, 89), (179, 58), (180, 128), (181, 29), (182, 24), (183, 16), (184, 25), (185, 64), (186, 107), (187, 9), (188, 117), (189, 113), (190, 115), (191, 154), (192, 90), (193, 8), (194, 106), (195, 104), (196, 143), (197, 5), (198, 132), (199, 145)]}
Checkpoint ...
[33mEpoch 21/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [20][ 0/45]	Total Loss -2.3002e+01 (-2.3002e+01)	Consistency Loss 3.2515e+00 (3.2515e+00)	Entropy 5.2507e+00 (5.2507e+00)
Epoch: [20][25/45]	Total Loss -2.2874e+01 (-2.2912e+01)	Consistency Loss 3.3549e+00 (3.3118e+00)	Entropy 5.2459e+00 (5.2447e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.278802871704102, 'consistency': 2.672236204147339, 'total_loss': -2.6065666675567627}], 'lowest_loss_head': 0, 'lowest_loss': -2.6065666675567627}
New lowest loss on validation set: -2.5747 -> -2.6066
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.1368657231618916, 'ARI': 0.05207615055662456, 'NMI': 0.4707789689028662, 'ACC Top-5': 0.2625129444252675, 'hungarian_match': [(0, 99), (1, 132), (2, 3), (3, 148), (4, 13), (5, 74), (6, 131), (7, 10), (8, 94), (9, 186), (10, 196), (11, 139), (12, 20), (13, 65), (14, 119), (15, 95), (16, 164), (17, 167), (18, 31), (19, 197), (20, 102), (21, 188), (22, 193), (23, 114), (24, 198), (25, 14), (26, 50), (27, 123), (28, 75), (29, 124), (30, 157), (31, 122), (32, 136), (33, 46), (34, 84), (35, 27), (36, 45), (37, 5), (38, 126), (39, 171), (40, 121), (41, 47), (42, 49), (43, 79), (44, 106), (45, 90), (46, 71), (47, 40), (48, 173), (49, 23), (50, 59), (51, 112), (52, 178), (53, 172), (54, 109), (55, 181), (56, 67), (57, 127), (58, 116), (59, 44), (60, 156), (61, 69), (62, 194), (63, 39), (64, 42), (65, 113), (66, 153), (67, 68), (68, 88), (69, 125), (70, 33), (71, 101), (72, 135), (73, 81), (74, 98), (75, 92), (76, 87), (77, 111), (78, 38), (79, 85), (80, 100), (81, 165), (82, 80), (83, 43), (84, 133), (85, 159), (86, 2), (87, 142), (88, 12), (89, 185), (90, 152), (91, 0), (92, 54), (93, 83), (94, 96), (95, 52), (96, 161), (97, 145), (98, 55), (99, 36), (100, 117), (101, 170), (102, 51), (103, 78), (104, 15), (105, 70), (106, 57), (107, 86), (108, 76), (109, 34), (110, 53), (111, 143), (112, 199), (113, 195), (114, 175), (115, 146), (116, 190), (117, 169), (118, 37), (119, 155), (120, 150), (121, 26), (122, 30), (123, 66), (124, 115), (125, 108), (126, 22), (127, 120), (128, 129), (129, 176), (130, 97), (131, 7), (132, 4), (133, 179), (134, 19), (135, 28), (136, 118), (137, 110), (138, 162), (139, 158), (140, 182), (141, 93), (142, 177), (143, 141), (144, 187), (145, 138), (146, 21), (147, 180), (148, 137), (149, 8), (150, 72), (151, 166), (152, 151), (153, 105), (154, 184), (155, 62), (156, 63), (157, 60), (158, 147), (159, 191), (160, 160), (161, 58), (162, 168), (163, 11), (164, 17), (165, 91), (166, 189), (167, 56), (168, 35), (169, 140), (170, 103), (171, 48), (172, 149), (173, 174), (174, 82), (175, 6), (176, 32), (177, 134), (178, 89), (179, 61), (180, 128), (181, 77), (182, 24), (183, 16), (184, 25), (185, 64), (186, 107), (187, 9), (188, 18), (189, 192), (190, 163), (191, 154), (192, 73), (193, 29), (194, 41), (195, 104), (196, 1), (197, 130), (198, 183), (199, 144)]}
Checkpoint ...
[33mEpoch 22/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [21][ 0/45]	Total Loss -2.2872e+01 (-2.2872e+01)	Consistency Loss 3.3207e+00 (3.3207e+00)	Entropy 5.2385e+00 (5.2385e+00)
Epoch: [21][25/45]	Total Loss -2.2745e+01 (-2.2919e+01)	Consistency Loss 3.4371e+00 (3.2906e+00)	Entropy 5.2364e+00 (5.2419e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.280776023864746, 'consistency': 2.6426427364349365, 'total_loss': -2.6381332874298096}], 'lowest_loss_head': 0, 'lowest_loss': -2.6381332874298096}
New lowest loss on validation set: -2.6066 -> -2.6381
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13859164653089404, 'ARI': 0.05087451592215632, 'NMI': 0.4713511090544378, 'ACC Top-5': 0.2675181221953745, 'hungarian_match': [(0, 50), (1, 112), (2, 148), (3, 124), (4, 26), (5, 33), (6, 131), (7, 9), (8, 32), (9, 133), (10, 31), (11, 37), (12, 116), (13, 65), (14, 125), (15, 95), (16, 166), (17, 73), (18, 78), (19, 86), (20, 115), (21, 188), (22, 193), (23, 114), (24, 14), (25, 46), (26, 55), (27, 123), (28, 94), (29, 20), (30, 158), (31, 122), (32, 136), (33, 54), (34, 84), (35, 27), (36, 45), (37, 5), (38, 126), (39, 179), (40, 121), (41, 72), (42, 49), (43, 170), (44, 106), (45, 167), (46, 0), (47, 81), (48, 173), (49, 23), (50, 71), (51, 196), (52, 178), (53, 192), (54, 109), (55, 172), (56, 67), (57, 127), (58, 90), (59, 44), (60, 156), (61, 69), (62, 194), (63, 39), (64, 102), (65, 113), (66, 38), (67, 68), (68, 88), (69, 119), (70, 132), (71, 111), (72, 135), (73, 51), (74, 98), (75, 92), (76, 197), (77, 74), (78, 42), (79, 85), (80, 99), (81, 164), (82, 80), (83, 43), (84, 146), (85, 153), (86, 2), (87, 142), (88, 40), (89, 6), (90, 152), (91, 57), (92, 185), (93, 83), (94, 151), (95, 52), (96, 160), (97, 144), (98, 15), (99, 36), (100, 12), (101, 120), (102, 59), (103, 66), (104, 93), (105, 101), (106, 13), (107, 7), (108, 76), (109, 34), (110, 138), (111, 143), (112, 10), (113, 195), (114, 175), (115, 186), (116, 165), (117, 129), (118, 157), (119, 184), (120, 150), (121, 11), (122, 30), (123, 140), (124, 155), (125, 108), (126, 22), (127, 130), (128, 181), (129, 176), (130, 97), (131, 117), (132, 64), (133, 161), (134, 19), (135, 28), (136, 118), (137, 110), (138, 162), (139, 17), (140, 182), (141, 191), (142, 177), (143, 70), (144, 187), (145, 139), (146, 21), (147, 180), (148, 77), (149, 103), (150, 174), (151, 159), (152, 47), (153, 105), (154, 134), (155, 58), (156, 100), (157, 75), (158, 147), (159, 190), (160, 171), (161, 60), (162, 168), (163, 137), (164, 198), (165, 91), (166, 189), (167, 56), (168, 35), (169, 1), (170, 63), (171, 48), (172, 149), (173, 199), (174, 79), (175, 4), (176, 169), (177, 3), (178, 89), (179, 61), (180, 128), (181, 82), (182, 24), (183, 16), (184, 25), (185, 62), (186, 107), (187, 29), (188, 18), (189, 96), (190, 163), (191, 154), (192, 53), (193, 8), (194, 41), (195, 104), (196, 141), (197, 87), (198, 183), (199, 145)]}
Checkpoint ...
[33mEpoch 23/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [22][ 0/45]	Total Loss -2.2887e+01 (-2.2887e+01)	Consistency Loss 3.3500e+00 (3.3500e+00)	Entropy 5.2474e+00 (5.2474e+00)
Epoch: [22][25/45]	Total Loss -2.2859e+01 (-2.2951e+01)	Consistency Loss 3.2598e+00 (3.2458e+00)	Entropy 5.2237e+00 (5.2393e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.280052661895752, 'consistency': 2.6746599674224854, 'total_loss': -2.6053926944732666}], 'lowest_loss_head': 0, 'lowest_loss': -2.6053926944732666}
No new lowest loss on validation set: -2.6381 -> -2.6054
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13841905419399378, 'ARI': 0.05252377370832678, 'NMI': 0.47229963264450947, 'ACC Top-5': 0.27355885398688295, 'hungarian_match': [(0, 86), (1, 183), (2, 112), (3, 170), (4, 113), (5, 117), (6, 192), (7, 9), (8, 56), (9, 106), (10, 31), (11, 139), (12, 147), (13, 65), (14, 123), (15, 157), (16, 93), (17, 73), (18, 40), (19, 197), (20, 175), (21, 188), (22, 17), (23, 131), (24, 186), (25, 159), (26, 84), (27, 124), (28, 135), (29, 125), (30, 158), (31, 122), (32, 136), (33, 94), (34, 129), (35, 27), (36, 45), (37, 5), (38, 126), (39, 171), (40, 121), (41, 47), (42, 50), (43, 46), (44, 133), (45, 90), (46, 24), (47, 81), (48, 173), (49, 29), (50, 7), (51, 196), (52, 95), (53, 154), (54, 109), (55, 181), (56, 67), (57, 127), (58, 18), (59, 44), (60, 26), (61, 3), (62, 35), (63, 39), (64, 102), (65, 12), (66, 156), (67, 68), (68, 88), (69, 119), (70, 33), (71, 101), (72, 37), (73, 51), (74, 98), (75, 92), (76, 87), (77, 74), (78, 14), (79, 85), (80, 99), (81, 164), (82, 80), (83, 43), (84, 75), (85, 168), (86, 2), (87, 142), (88, 193), (89, 6), (90, 152), (91, 0), (92, 185), (93, 83), (94, 153), (95, 52), (96, 160), (97, 144), (98, 36), (99, 54), (100, 120), (101, 114), (102, 63), (103, 66), (104, 178), (105, 62), (106, 57), (107, 49), (108, 76), (109, 55), (110, 53), (111, 140), (112, 199), (113, 194), (114, 78), (115, 145), (116, 191), (117, 169), (118, 165), (119, 111), (120, 118), (121, 150), (122, 30), (123, 172), (124, 155), (125, 38), (126, 22), (127, 149), (128, 161), (129, 176), (130, 97), (131, 174), (132, 71), (133, 177), (134, 19), (135, 28), (136, 15), (137, 110), (138, 162), (139, 69), (140, 21), (141, 11), (142, 167), (143, 70), (144, 187), (145, 138), (146, 198), (147, 180), (148, 134), (149, 20), (150, 72), (151, 108), (152, 151), (153, 105), (154, 184), (155, 58), (156, 100), (157, 59), (158, 182), (159, 190), (160, 42), (161, 60), (162, 34), (163, 137), (164, 195), (165, 91), (166, 189), (167, 10), (168, 148), (169, 1), (170, 103), (171, 48), (172, 116), (173, 163), (174, 79), (175, 4), (176, 32), (177, 82), (178, 89), (179, 61), (180, 128), (181, 77), (182, 23), (183, 16), (184, 25), (185, 64), (186, 107), (187, 141), (188, 13), (189, 96), (190, 115), (191, 179), (192, 166), (193, 8), (194, 41), (195, 104), (196, 143), (197, 130), (198, 132), (199, 146)]}
Checkpoint ...
[33mEpoch 24/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [23][ 0/45]	Total Loss -2.2858e+01 (-2.2858e+01)	Consistency Loss 3.3161e+00 (3.3161e+00)	Entropy 5.2348e+00 (5.2348e+00)
Epoch: [23][25/45]	Total Loss -2.2978e+01 (-2.2978e+01)	Consistency Loss 3.2129e+00 (3.2329e+00)	Entropy 5.2381e+00 (5.2422e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.277581214904785, 'consistency': 2.66501522064209, 'total_loss': -2.6125659942626953}], 'lowest_loss_head': 0, 'lowest_loss': -2.6125659942626953}
No new lowest loss on validation set: -2.6381 -> -2.6126
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13738350017259235, 'ARI': 0.05256018642937808, 'NMI': 0.47281888319030396, 'ACC Top-5': 0.2699344149119779, 'hungarian_match': [(0, 50), (1, 183), (2, 148), (3, 124), (4, 113), (5, 33), (6, 16), (7, 9), (8, 32), (9, 186), (10, 22), (11, 139), (12, 147), (13, 65), (14, 173), (15, 95), (16, 93), (17, 73), (18, 111), (19, 197), (20, 102), (21, 188), (22, 21), (23, 114), (24, 14), (25, 176), (26, 10), (27, 123), (28, 75), (29, 20), (30, 168), (31, 122), (32, 136), (33, 54), (34, 84), (35, 27), (36, 45), (37, 6), (38, 149), (39, 171), (40, 121), (41, 94), (42, 49), (43, 46), (44, 133), (45, 167), (46, 24), (47, 40), (48, 132), (49, 5), (50, 59), (51, 112), (52, 196), (53, 157), (54, 109), (55, 181), (56, 67), (57, 127), (58, 90), (59, 44), (60, 13), (61, 187), (62, 35), (63, 39), (64, 42), (65, 69), (66, 166), (67, 68), (68, 86), (69, 125), (70, 182), (71, 101), (72, 135), (73, 66), (74, 98), (75, 92), (76, 87), (77, 74), (78, 118), (79, 85), (80, 99), (81, 164), (82, 80), (83, 43), (84, 63), (85, 159), (86, 2), (87, 142), (88, 193), (89, 79), (90, 156), (91, 0), (92, 185), (93, 83), (94, 153), (95, 52), (96, 160), (97, 144), (98, 55), (99, 36), (100, 120), (101, 38), (102, 119), (103, 78), (104, 15), (105, 51), (106, 70), (107, 88), (108, 76), (109, 170), (110, 138), (111, 143), (112, 199), (113, 195), (114, 175), (115, 146), (116, 131), (117, 129), (118, 37), (119, 184), (120, 150), (121, 162), (122, 30), (123, 77), (124, 115), (125, 108), (126, 106), (127, 126), (128, 82), (129, 178), (130, 97), (131, 53), (132, 57), (133, 47), (134, 19), (135, 28), (136, 165), (137, 110), (138, 158), (139, 192), (140, 161), (141, 81), (142, 177), (143, 71), (144, 190), (145, 155), (146, 198), (147, 163), (148, 134), (149, 3), (150, 174), (151, 169), (152, 151), (153, 105), (154, 117), (155, 58), (156, 100), (157, 7), (158, 180), (159, 191), (160, 179), (161, 60), (162, 34), (163, 137), (164, 17), (165, 91), (166, 189), (167, 56), (168, 26), (169, 1), (170, 103), (171, 48), (172, 116), (173, 194), (174, 12), (175, 4), (176, 31), (177, 11), (178, 89), (179, 64), (180, 128), (181, 29), (182, 23), (183, 152), (184, 25), (185, 61), (186, 107), (187, 62), (188, 18), (189, 96), (190, 172), (191, 154), (192, 72), (193, 8), (194, 41), (195, 104), (196, 141), (197, 130), (198, 140), (199, 145)]}
Checkpoint ...
[33mEpoch 25/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [24][ 0/45]	Total Loss -2.3084e+01 (-2.3084e+01)	Consistency Loss 3.1539e+00 (3.1539e+00)	Entropy 5.2476e+00 (5.2476e+00)
Epoch: [24][25/45]	Total Loss -2.3068e+01 (-2.2960e+01)	Consistency Loss 3.1578e+00 (3.2487e+00)	Entropy 5.2452e+00 (5.2418e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.283735752105713, 'consistency': 2.626234531402588, 'total_loss': -2.657501220703125}], 'lowest_loss_head': 0, 'lowest_loss': -2.657501220703125}
New lowest loss on validation set: -2.6381 -> -2.6575
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14066275457369692, 'ARI': 0.05041237234180996, 'NMI': 0.47212414160569416, 'ACC Top-5': 0.2754573696927856, 'hungarian_match': [(0, 86), (1, 183), (2, 148), (3, 171), (4, 13), (5, 33), (6, 131), (7, 9), (8, 32), (9, 106), (10, 31), (11, 37), (12, 147), (13, 65), (14, 173), (15, 95), (16, 166), (17, 167), (18, 11), (19, 197), (20, 175), (21, 188), (22, 21), (23, 114), (24, 14), (25, 117), (26, 55), (27, 123), (28, 93), (29, 15), (30, 158), (31, 122), (32, 186), (33, 54), (34, 84), (35, 27), (36, 45), (37, 5), (38, 126), (39, 42), (40, 121), (41, 94), (42, 49), (43, 46), (44, 133), (45, 194), (46, 10), (47, 81), (48, 127), (49, 29), (50, 63), (51, 112), (52, 53), (53, 151), (54, 109), (55, 172), (56, 67), (57, 125), (58, 90), (59, 44), (60, 156), (61, 69), (62, 35), (63, 39), (64, 102), (65, 12), (66, 153), (67, 68), (68, 88), (69, 119), (70, 182), (71, 101), (72, 135), (73, 51), (74, 124), (75, 105), (76, 87), (77, 74), (78, 129), (79, 85), (80, 99), (81, 164), (82, 80), (83, 43), (84, 59), (85, 192), (86, 0), (87, 142), (88, 193), (89, 185), (90, 152), (91, 57), (92, 97), (93, 83), (94, 181), (95, 52), (96, 160), (97, 144), (98, 36), (99, 73), (100, 120), (101, 170), (102, 136), (103, 78), (104, 47), (105, 71), (106, 38), (107, 50), (108, 76), (109, 34), (110, 138), (111, 143), (112, 199), (113, 195), (114, 159), (115, 145), (116, 191), (117, 168), (118, 96), (119, 111), (120, 150), (121, 162), (122, 139), (123, 140), (124, 155), (125, 108), (126, 22), (127, 149), (128, 41), (129, 176), (130, 75), (131, 7), (132, 64), (133, 161), (134, 19), (135, 28), (136, 165), (137, 110), (138, 157), (139, 79), (140, 3), (141, 23), (142, 177), (143, 70), (144, 187), (145, 184), (146, 198), (147, 180), (148, 137), (149, 20), (150, 174), (151, 169), (152, 163), (153, 6), (154, 178), (155, 62), (156, 100), (157, 92), (158, 98), (159, 190), (160, 179), (161, 60), (162, 118), (163, 77), (164, 17), (165, 91), (166, 189), (167, 56), (168, 26), (169, 1), (170, 103), (171, 48), (172, 116), (173, 196), (174, 40), (175, 4), (176, 30), (177, 134), (178, 89), (179, 58), (180, 128), (181, 82), (182, 24), (183, 16), (184, 25), (185, 61), (186, 107), (187, 141), (188, 18), (189, 113), (190, 115), (191, 154), (192, 72), (193, 8), (194, 66), (195, 104), (196, 2), (197, 130), (198, 132), (199, 146)]}
Checkpoint ...
[33mEpoch 26/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [25][ 0/45]	Total Loss -2.3016e+01 (-2.3016e+01)	Consistency Loss 3.1834e+00 (3.1834e+00)	Entropy 5.2399e+00 (5.2399e+00)
Epoch: [25][25/45]	Total Loss -2.2959e+01 (-2.2981e+01)	Consistency Loss 3.2264e+00 (3.2136e+00)	Entropy 5.2371e+00 (5.2389e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.277370452880859, 'consistency': 2.5974977016448975, 'total_loss': -2.679872751235962}], 'lowest_loss_head': 0, 'lowest_loss': -2.679872751235962}
New lowest loss on validation set: -2.6575 -> -2.6799
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13997238522609595, 'ARI': 0.05270751365193712, 'NMI': 0.47379770953416117, 'ACC Top-5': 0.26958923023817744, 'hungarian_match': [(0, 50), (1, 112), (2, 148), (3, 124), (4, 13), (5, 33), (6, 131), (7, 26), (8, 30), (9, 6), (10, 176), (11, 36), (12, 147), (13, 65), (14, 125), (15, 37), (16, 93), (17, 73), (18, 31), (19, 182), (20, 175), (21, 188), (22, 193), (23, 114), (24, 192), (25, 92), (26, 84), (27, 123), (28, 159), (29, 20), (30, 158), (31, 122), (32, 186), (33, 54), (34, 129), (35, 27), (36, 45), (37, 78), (38, 126), (39, 154), (40, 121), (41, 94), (42, 49), (43, 46), (44, 106), (45, 90), (46, 10), (47, 81), (48, 119), (49, 23), (50, 7), (51, 196), (52, 157), (53, 151), (54, 109), (55, 181), (56, 67), (57, 127), (58, 74), (59, 44), (60, 138), (61, 69), (62, 62), (63, 39), (64, 102), (65, 12), (66, 153), (67, 68), (68, 86), (69, 198), (70, 38), (71, 101), (72, 135), (73, 51), (74, 98), (75, 145), (76, 87), (77, 111), (78, 14), (79, 85), (80, 99), (81, 164), (82, 80), (83, 43), (84, 133), (85, 180), (86, 0), (87, 142), (88, 11), (89, 15), (90, 150), (91, 57), (92, 185), (93, 83), (94, 152), (95, 52), (96, 169), (97, 144), (98, 55), (99, 40), (100, 120), (101, 170), (102, 9), (103, 77), (104, 136), (105, 71), (106, 197), (107, 88), (108, 117), (109, 34), (110, 95), (111, 143), (112, 165), (113, 195), (114, 118), (115, 146), (116, 191), (117, 42), (118, 96), (119, 184), (120, 172), (121, 162), (122, 139), (123, 76), (124, 155), (125, 108), (126, 22), (127, 149), (128, 41), (129, 160), (130, 75), (131, 174), (132, 5), (133, 161), (134, 19), (135, 28), (136, 156), (137, 110), (138, 183), (139, 79), (140, 130), (141, 194), (142, 177), (143, 141), (144, 187), (145, 97), (146, 21), (147, 163), (148, 134), (149, 3), (150, 72), (151, 166), (152, 47), (153, 105), (154, 178), (155, 58), (156, 100), (157, 60), (158, 167), (159, 190), (160, 171), (161, 64), (162, 168), (163, 137), (164, 17), (165, 91), (166, 189), (167, 56), (168, 35), (169, 140), (170, 103), (171, 48), (172, 116), (173, 199), (174, 82), (175, 4), (176, 32), (177, 2), (178, 89), (179, 63), (180, 128), (181, 29), (182, 24), (183, 16), (184, 25), (185, 61), (186, 107), (187, 70), (188, 18), (189, 113), (190, 115), (191, 179), (192, 53), (193, 8), (194, 66), (195, 104), (196, 1), (197, 173), (198, 132), (199, 59)]}
Checkpoint ...
[33mEpoch 27/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [26][ 0/45]	Total Loss -2.2886e+01 (-2.2886e+01)	Consistency Loss 3.3039e+00 (3.3039e+00)	Entropy 5.2380e+00 (5.2380e+00)
Epoch: [26][25/45]	Total Loss -2.3020e+01 (-2.2968e+01)	Consistency Loss 3.0780e+00 (3.2133e+00)	Entropy 5.2196e+00 (5.2362e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.280031204223633, 'consistency': 2.5850353240966797, 'total_loss': -2.694995880126953}], 'lowest_loss_head': 0, 'lowest_loss': -2.694995880126953}
New lowest loss on validation set: -2.6799 -> -2.6950
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13893683120469452, 'ARI': 0.0530375372827021, 'NMI': 0.4733045893515213, 'ACC Top-5': 0.2799447704521919, 'hungarian_match': [(0, 86), (1, 112), (2, 3), (3, 98), (4, 13), (5, 131), (6, 132), (7, 9), (8, 95), (9, 195), (10, 93), (11, 37), (12, 147), (13, 65), (14, 125), (15, 165), (16, 166), (17, 73), (18, 150), (19, 197), (20, 175), (21, 35), (22, 193), (23, 114), (24, 64), (25, 14), (26, 173), (27, 123), (28, 135), (29, 19), (30, 158), (31, 122), (32, 136), (33, 54), (34, 84), (35, 27), (36, 45), (37, 6), (38, 126), (39, 171), (40, 121), (41, 176), (42, 49), (43, 46), (44, 106), (45, 90), (46, 2), (47, 81), (48, 55), (49, 23), (50, 10), (51, 196), (52, 181), (53, 154), (54, 109), (55, 172), (56, 67), (57, 127), (58, 183), (59, 44), (60, 97), (61, 69), (62, 62), (63, 39), (64, 102), (65, 12), (66, 157), (67, 68), (68, 88), (69, 119), (70, 33), (71, 111), (72, 137), (73, 51), (74, 182), (75, 92), (76, 87), (77, 15), (78, 36), (79, 85), (80, 99), (81, 164), (82, 80), (83, 43), (84, 133), (85, 159), (86, 0), (87, 142), (88, 160), (89, 184), (90, 152), (91, 1), (92, 185), (93, 83), (94, 153), (95, 52), (96, 161), (97, 144), (98, 34), (99, 40), (100, 120), (101, 38), (102, 186), (103, 78), (104, 188), (105, 71), (106, 8), (107, 50), (108, 76), (109, 170), (110, 138), (111, 140), (112, 199), (113, 198), (114, 117), (115, 63), (116, 191), (117, 42), (118, 96), (119, 134), (120, 118), (121, 162), (122, 30), (123, 66), (124, 155), (125, 108), (126, 22), (127, 149), (128, 41), (129, 94), (130, 75), (131, 47), (132, 57), (133, 179), (134, 31), (135, 107), (136, 113), (137, 110), (138, 124), (139, 79), (140, 130), (141, 74), (142, 177), (143, 70), (144, 187), (145, 139), (146, 21), (147, 163), (148, 101), (149, 20), (150, 174), (151, 169), (152, 151), (153, 105), (154, 178), (155, 58), (156, 100), (157, 7), (158, 180), (159, 190), (160, 72), (161, 60), (162, 168), (163, 77), (164, 17), (165, 91), (166, 189), (167, 56), (168, 148), (169, 146), (170, 103), (171, 48), (172, 116), (173, 194), (174, 82), (175, 4), (176, 32), (177, 141), (178, 89), (179, 59), (180, 128), (181, 29), (182, 24), (183, 16), (184, 25), (185, 61), (186, 26), (187, 192), (188, 18), (189, 129), (190, 115), (191, 156), (192, 53), (193, 28), (194, 11), (195, 104), (196, 143), (197, 5), (198, 167), (199, 145)]}
Checkpoint ...
[33mEpoch 28/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [27][ 0/45]	Total Loss -2.2883e+01 (-2.2883e+01)	Consistency Loss 3.3508e+00 (3.3508e+00)	Entropy 5.2467e+00 (5.2467e+00)
Epoch: [27][25/45]	Total Loss -2.3023e+01 (-2.2990e+01)	Consistency Loss 3.1522e+00 (3.1872e+00)	Entropy 5.2350e+00 (5.2355e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.278820991516113, 'consistency': 2.568044900894165, 'total_loss': -2.7107760906219482}], 'lowest_loss_head': 0, 'lowest_loss': -2.7107760906219482}
New lowest loss on validation set: -2.6950 -> -2.7108
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14083534691059718, 'ARI': 0.05349818041701669, 'NMI': 0.47325872024374205, 'ACC Top-5': 0.2761477390403866, 'hungarian_match': [(0, 51), (1, 183), (2, 148), (3, 124), (4, 112), (5, 131), (6, 192), (7, 26), (8, 56), (9, 6), (10, 93), (11, 37), (12, 147), (13, 65), (14, 123), (15, 95), (16, 164), (17, 73), (18, 40), (19, 35), (20, 33), (21, 188), (22, 193), (23, 114), (24, 194), (25, 14), (26, 103), (27, 130), (28, 135), (29, 125), (30, 158), (31, 122), (32, 136), (33, 54), (34, 84), (35, 27), (36, 45), (37, 5), (38, 120), (39, 152), (40, 121), (41, 72), (42, 49), (43, 46), (44, 29), (45, 174), (46, 63), (47, 81), (48, 173), (49, 23), (50, 7), (51, 196), (52, 178), (53, 154), (54, 109), (55, 181), (56, 67), (57, 127), (58, 90), (59, 44), (60, 13), (61, 187), (62, 190), (63, 39), (64, 102), (65, 113), (66, 153), (67, 68), (68, 86), (69, 119), (70, 42), (71, 101), (72, 41), (73, 198), (74, 98), (75, 92), (76, 87), (77, 15), (78, 170), (79, 85), (80, 99), (81, 179), (82, 80), (83, 43), (84, 133), (85, 159), (86, 0), (87, 142), (88, 31), (89, 185), (90, 171), (91, 57), (92, 97), (93, 83), (94, 139), (95, 52), (96, 160), (97, 144), (98, 55), (99, 36), (100, 12), (101, 129), (102, 22), (103, 78), (104, 74), (105, 71), (106, 70), (107, 50), (108, 76), (109, 34), (110, 138), (111, 140), (112, 199), (113, 195), (114, 94), (115, 146), (116, 165), (117, 132), (118, 157), (119, 184), (120, 118), (121, 11), (122, 30), (123, 197), (124, 150), (125, 108), (126, 106), (127, 126), (128, 161), (129, 176), (130, 75), (131, 47), (132, 88), (133, 163), (134, 19), (135, 28), (136, 175), (137, 110), (138, 162), (139, 79), (140, 3), (141, 191), (142, 177), (143, 141), (144, 186), (145, 155), (146, 21), (147, 180), (148, 111), (149, 20), (150, 38), (151, 166), (152, 151), (153, 105), (154, 66), (155, 58), (156, 100), (157, 60), (158, 182), (159, 69), (160, 169), (161, 145), (162, 168), (163, 137), (164, 17), (165, 91), (166, 189), (167, 10), (168, 9), (169, 1), (170, 149), (171, 48), (172, 116), (173, 172), (174, 82), (175, 4), (176, 32), (177, 134), (178, 89), (179, 61), (180, 128), (181, 77), (182, 24), (183, 16), (184, 25), (185, 64), (186, 107), (187, 62), (188, 18), (189, 96), (190, 115), (191, 156), (192, 53), (193, 8), (194, 2), (195, 104), (196, 143), (197, 117), (198, 167), (199, 59)]}
Checkpoint ...
[33mEpoch 29/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [28][ 0/45]	Total Loss -2.3091e+01 (-2.3091e+01)	Consistency Loss 3.0744e+00 (3.0744e+00)	Entropy 5.2331e+00 (5.2331e+00)
Epoch: [28][25/45]	Total Loss -2.2809e+01 (-2.3023e+01)	Consistency Loss 3.3483e+00 (3.1595e+00)	Entropy 5.2315e+00 (5.2365e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.276082992553711, 'consistency': 2.575566053390503, 'total_loss': -2.700516939163208}], 'lowest_loss_head': 0, 'lowest_loss': -2.700516939163208}
No new lowest loss on validation set: -2.7108 -> -2.7005
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14083534691059718, 'ARI': 0.05345305544512717, 'NMI': 0.4732960507913205, 'ACC Top-5': 0.2711425612702796, 'hungarian_match': [(0, 50), (1, 182), (2, 3), (3, 124), (4, 113), (5, 131), (6, 192), (7, 26), (8, 53), (9, 6), (10, 22), (11, 30), (12, 147), (13, 65), (14, 125), (15, 95), (16, 166), (17, 186), (18, 111), (19, 35), (20, 175), (21, 193), (22, 21), (23, 114), (24, 117), (25, 134), (26, 132), (27, 123), (28, 94), (29, 162), (30, 168), (31, 122), (32, 23), (33, 54), (34, 84), (35, 27), (36, 45), (37, 5), (38, 126), (39, 171), (40, 121), (41, 47), (42, 49), (43, 46), (44, 106), (45, 90), (46, 24), (47, 81), (48, 173), (49, 29), (50, 63), (51, 112), (52, 178), (53, 154), (54, 109), (55, 181), (56, 67), (57, 127), (58, 74), (59, 44), (60, 86), (61, 187), (62, 93), (63, 39), (64, 102), (65, 12), (66, 156), (67, 68), (68, 88), (69, 119), (70, 38), (71, 101), (72, 135), (73, 51), (74, 98), (75, 61), (76, 197), (77, 153), (78, 36), (79, 85), (80, 99), (81, 151), (82, 80), (83, 43), (84, 133), (85, 159), (86, 0), (87, 142), (88, 40), (89, 185), (90, 152), (91, 1), (92, 97), (93, 83), (94, 19), (95, 52), (96, 160), (97, 144), (98, 55), (99, 73), (100, 196), (101, 170), (102, 136), (103, 78), (104, 15), (105, 71), (106, 183), (107, 7), (108, 76), (109, 130), (110, 138), (111, 140), (112, 199), (113, 195), (114, 174), (115, 145), (116, 191), (117, 164), (118, 79), (119, 184), (120, 118), (121, 11), (122, 139), (123, 10), (124, 155), (125, 108), (126, 92), (127, 149), (128, 115), (129, 176), (130, 42), (131, 129), (132, 57), (133, 161), (134, 31), (135, 28), (136, 150), (137, 110), (138, 158), (139, 69), (140, 33), (141, 188), (142, 177), (143, 141), (144, 190), (145, 180), (146, 198), (147, 163), (148, 137), (149, 87), (150, 72), (151, 157), (152, 14), (153, 105), (154, 66), (155, 58), (156, 100), (157, 75), (158, 20), (159, 194), (160, 169), (161, 60), (162, 34), (163, 37), (164, 17), (165, 91), (166, 189), (167, 56), (168, 148), (169, 146), (170, 103), (171, 48), (172, 116), (173, 172), (174, 82), (175, 4), (176, 32), (177, 2), (178, 89), (179, 59), (180, 128), (181, 77), (182, 9), (183, 16), (184, 25), (185, 62), (186, 107), (187, 70), (188, 18), (189, 96), (190, 13), (191, 179), (192, 165), (193, 8), (194, 41), (195, 104), (196, 143), (197, 120), (198, 167), (199, 64)]}
Checkpoint ...
[33mEpoch 30/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [29][ 0/45]	Total Loss -2.2930e+01 (-2.2930e+01)	Consistency Loss 3.1714e+00 (3.1714e+00)	Entropy 5.2203e+00 (5.2203e+00)
Epoch: [29][25/45]	Total Loss -2.3050e+01 (-2.3006e+01)	Consistency Loss 3.1289e+00 (3.1604e+00)	Entropy 5.2358e+00 (5.2333e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.276160717010498, 'consistency': 2.543349504470825, 'total_loss': -2.732811212539673}], 'lowest_loss_head': 0, 'lowest_loss': -2.732811212539673}
New lowest loss on validation set: -2.7108 -> -2.7328
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13910942354159475, 'ARI': 0.05095918815117375, 'NMI': 0.47145208465301336, 'ACC Top-5': 0.27062478425957887, 'hungarian_match': [(0, 50), (1, 183), (2, 3), (3, 124), (4, 113), (5, 117), (6, 131), (7, 9), (8, 53), (9, 6), (10, 167), (11, 139), (12, 147), (13, 65), (14, 125), (15, 95), (16, 166), (17, 186), (18, 31), (19, 197), (20, 102), (21, 35), (22, 21), (23, 114), (24, 55), (25, 176), (26, 141), (27, 123), (28, 47), (29, 162), (30, 157), (31, 122), (32, 121), (33, 54), (34, 84), (35, 27), (36, 45), (37, 5), (38, 149), (39, 154), (40, 132), (41, 94), (42, 49), (43, 46), (44, 106), (45, 90), (46, 10), (47, 40), (48, 118), (49, 23), (50, 86), (51, 112), (52, 151), (53, 175), (54, 109), (55, 36), (56, 67), (57, 127), (58, 18), (59, 44), (60, 13), (61, 66), (62, 93), (63, 77), (64, 37), (65, 81), (66, 153), (67, 68), (68, 88), (69, 119), (70, 33), (71, 101), (72, 135), (73, 51), (74, 98), (75, 2), (76, 87), (77, 74), (78, 14), (79, 85), (80, 99), (81, 164), (82, 80), (83, 43), (84, 133), (85, 180), (86, 0), (87, 142), (88, 193), (89, 97), (90, 156), (91, 57), (92, 185), (93, 59), (94, 20), (95, 52), (96, 160), (97, 144), (98, 170), (99, 73), (100, 12), (101, 120), (102, 7), (103, 78), (104, 15), (105, 71), (106, 38), (107, 105), (108, 76), (109, 130), (110, 152), (111, 140), (112, 199), (113, 195), (114, 173), (115, 145), (116, 191), (117, 181), (118, 171), (119, 184), (120, 150), (121, 11), (122, 30), (123, 136), (124, 155), (125, 79), (126, 22), (127, 126), (128, 159), (129, 178), (130, 75), (131, 188), (132, 26), (133, 161), (134, 19), (135, 28), (136, 129), (137, 110), (138, 158), (139, 69), (140, 194), (141, 196), (142, 177), (143, 1), (144, 187), (145, 138), (146, 198), (147, 163), (148, 111), (149, 103), (150, 72), (151, 169), (152, 165), (153, 83), (154, 108), (155, 62), (156, 100), (157, 60), (158, 182), (159, 190), (160, 42), (161, 58), (162, 168), (163, 137), (164, 17), (165, 91), (166, 189), (167, 56), (168, 29), (169, 146), (170, 148), (171, 48), (172, 116), (173, 172), (174, 82), (175, 4), (176, 32), (177, 134), (178, 89), (179, 64), (180, 128), (181, 39), (182, 24), (183, 16), (184, 25), (185, 61), (186, 107), (187, 70), (188, 96), (189, 192), (190, 115), (191, 179), (192, 92), (193, 8), (194, 41), (195, 104), (196, 143), (197, 34), (198, 174), (199, 63)]}
Checkpoint ...
[33mEpoch 31/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [30][ 0/45]	Total Loss -2.3236e+01 (-2.3236e+01)	Consistency Loss 2.9710e+00 (2.9710e+00)	Entropy 5.2414e+00 (5.2414e+00)
Epoch: [30][25/45]	Total Loss -2.3140e+01 (-2.3040e+01)	Consistency Loss 3.0585e+00 (3.1302e+00)	Entropy 5.2397e+00 (5.2340e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.279820442199707, 'consistency': 2.563467264175415, 'total_loss': -2.716353178024292}], 'lowest_loss_head': 0, 'lowest_loss': -2.716353178024292}
No new lowest loss on validation set: -2.7328 -> -2.7164
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14601311701760442, 'ARI': 0.056444868606434, 'NMI': 0.47770583433990854, 'ACC Top-5': 0.2811529168104936, 'hungarian_match': [(0, 86), (1, 112), (2, 3), (3, 124), (4, 20), (5, 53), (6, 131), (7, 9), (8, 56), (9, 6), (10, 196), (11, 37), (12, 147), (13, 65), (14, 125), (15, 95), (16, 152), (17, 73), (18, 150), (19, 197), (20, 33), (21, 188), (22, 59), (23, 114), (24, 117), (25, 14), (26, 84), (27, 123), (28, 172), (29, 19), (30, 174), (31, 122), (32, 136), (33, 54), (34, 129), (35, 27), (36, 45), (37, 5), (38, 149), (39, 171), (40, 121), (41, 94), (42, 49), (43, 46), (44, 29), (45, 90), (46, 24), (47, 81), (48, 173), (49, 23), (50, 10), (51, 34), (52, 168), (53, 176), (54, 109), (55, 181), (56, 67), (57, 127), (58, 74), (59, 44), (60, 26), (61, 187), (62, 135), (63, 39), (64, 102), (65, 69), (66, 166), (67, 68), (68, 88), (69, 119), (70, 132), (71, 101), (72, 137), (73, 51), (74, 98), (75, 92), (76, 87), (77, 15), (78, 36), (79, 85), (80, 99), (81, 179), (82, 80), (83, 43), (84, 133), (85, 164), (86, 2), (87, 142), (88, 193), (89, 185), (90, 156), (91, 0), (92, 180), (93, 83), (94, 151), (95, 52), (96, 30), (97, 144), (98, 55), (99, 40), (100, 120), (101, 38), (102, 12), (103, 78), (104, 178), (105, 141), (106, 70), (107, 50), (108, 76), (109, 167), (110, 155), (111, 140), (112, 199), (113, 198), (114, 11), (115, 146), (116, 165), (117, 192), (118, 96), (119, 184), (120, 116), (121, 194), (122, 139), (123, 195), (124, 159), (125, 108), (126, 22), (127, 128), (128, 41), (129, 160), (130, 75), (131, 13), (132, 57), (133, 161), (134, 31), (135, 28), (136, 175), (137, 110), (138, 158), (139, 79), (140, 183), (141, 191), (142, 177), (143, 1), (144, 186), (145, 154), (146, 21), (147, 163), (148, 111), (149, 103), (150, 93), (151, 153), (152, 118), (153, 105), (154, 47), (155, 58), (156, 100), (157, 7), (158, 182), (159, 190), (160, 169), (161, 60), (162, 162), (163, 77), (164, 17), (165, 91), (166, 189), (167, 134), (168, 35), (169, 145), (170, 148), (171, 48), (172, 170), (173, 157), (174, 82), (175, 4), (176, 32), (177, 97), (178, 89), (179, 61), (180, 126), (181, 42), (182, 106), (183, 16), (184, 25), (185, 62), (186, 107), (187, 71), (188, 18), (189, 113), (190, 115), (191, 138), (192, 72), (193, 8), (194, 66), (195, 104), (196, 143), (197, 130), (198, 64), (199, 63)]}
Checkpoint ...
[33mEpoch 32/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [31][ 0/45]	Total Loss -2.3017e+01 (-2.3017e+01)	Consistency Loss 3.1828e+00 (3.1828e+00)	Entropy 5.2399e+00 (5.2399e+00)
Epoch: [31][25/45]	Total Loss -2.3093e+01 (-2.3033e+01)	Consistency Loss 3.1042e+00 (3.1381e+00)	Entropy 5.2394e+00 (5.2342e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.282325267791748, 'consistency': 2.5496702194213867, 'total_loss': -2.7326550483703613}], 'lowest_loss_head': 0, 'lowest_loss': -2.7326550483703613}
No new lowest loss on validation set: -2.7328 -> -2.7327
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.144287193648602, 'ARI': 0.05447412420502654, 'NMI': 0.4745729960522641, 'ACC Top-5': 0.27683810838798756, 'hungarian_match': [(0, 50), (1, 112), (2, 3), (3, 182), (4, 26), (5, 7), (6, 192), (7, 9), (8, 56), (9, 6), (10, 93), (11, 30), (12, 147), (13, 65), (14, 123), (15, 96), (16, 166), (17, 73), (18, 31), (19, 35), (20, 18), (21, 188), (22, 193), (23, 114), (24, 194), (25, 76), (26, 173), (27, 149), (28, 135), (29, 124), (30, 174), (31, 127), (32, 136), (33, 46), (34, 84), (35, 27), (36, 45), (37, 197), (38, 126), (39, 171), (40, 121), (41, 94), (42, 49), (43, 155), (44, 106), (45, 163), (46, 2), (47, 40), (48, 122), (49, 23), (50, 133), (51, 196), (52, 181), (53, 154), (54, 109), (55, 156), (56, 67), (57, 125), (58, 90), (59, 44), (60, 97), (61, 187), (62, 190), (63, 39), (64, 42), (65, 12), (66, 157), (67, 68), (68, 88), (69, 198), (70, 119), (71, 101), (72, 137), (73, 51), (74, 98), (75, 145), (76, 87), (77, 74), (78, 14), (79, 85), (80, 99), (81, 168), (82, 80), (83, 43), (84, 146), (85, 164), (86, 0), (87, 142), (88, 160), (89, 185), (90, 151), (91, 1), (92, 54), (93, 83), (94, 47), (95, 52), (96, 161), (97, 144), (98, 55), (99, 36), (100, 120), (101, 38), (102, 33), (103, 78), (104, 15), (105, 71), (106, 63), (107, 86), (108, 102), (109, 150), (110, 138), (111, 143), (112, 79), (113, 195), (114, 117), (115, 53), (116, 20), (117, 175), (118, 199), (119, 95), (120, 118), (121, 11), (122, 139), (123, 66), (124, 159), (125, 108), (126, 22), (127, 130), (128, 41), (129, 152), (130, 75), (131, 13), (132, 57), (133, 165), (134, 19), (135, 28), (136, 129), (137, 110), (138, 116), (139, 69), (140, 183), (141, 81), (142, 177), (143, 70), (144, 186), (145, 184), (146, 104), (147, 180), (148, 111), (149, 103), (150, 153), (151, 178), (152, 34), (153, 105), (154, 134), (155, 58), (156, 100), (157, 92), (158, 167), (159, 191), (160, 169), (161, 60), (162, 162), (163, 77), (164, 17), (165, 91), (166, 189), (167, 10), (168, 158), (169, 140), (170, 148), (171, 48), (172, 170), (173, 172), (174, 82), (175, 4), (176, 32), (177, 141), (178, 89), (179, 131), (180, 128), (181, 29), (182, 24), (183, 16), (184, 25), (185, 61), (186, 107), (187, 62), (188, 176), (189, 113), (190, 115), (191, 179), (192, 72), (193, 8), (194, 37), (195, 21), (196, 64), (197, 5), (198, 132), (199, 59)]}
Checkpoint ...
[33mEpoch 33/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [32][ 0/45]	Total Loss -2.3088e+01 (-2.3088e+01)	Consistency Loss 3.0678e+00 (3.0678e+00)	Entropy 5.2312e+00 (5.2312e+00)
Epoch: [32][25/45]	Total Loss -2.3050e+01 (-2.3026e+01)	Consistency Loss 3.1095e+00 (3.1444e+00)	Entropy 5.2319e+00 (5.2341e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.2768964767456055, 'consistency': 2.545382499694824, 'total_loss': -2.7315139770507812}], 'lowest_loss_head': 0, 'lowest_loss': -2.7315139770507812}
No new lowest loss on validation set: -2.7328 -> -2.7315
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.1454953400069037, 'ARI': 0.05269078535197943, 'NMI': 0.47434672232305586, 'ACC Top-5': 0.27856403175699, 'hungarian_match': [(0, 51), (1, 112), (2, 3), (3, 182), (4, 13), (5, 131), (6, 174), (7, 9), (8, 81), (9, 6), (10, 93), (11, 42), (12, 147), (13, 65), (14, 125), (15, 95), (16, 36), (17, 73), (18, 31), (19, 86), (20, 102), (21, 188), (22, 21), (23, 114), (24, 194), (25, 46), (26, 141), (27, 123), (28, 135), (29, 124), (30, 158), (31, 122), (32, 136), (33, 54), (34, 84), (35, 27), (36, 45), (37, 5), (38, 126), (39, 154), (40, 121), (41, 72), (42, 49), (43, 156), (44, 8), (45, 94), (46, 24), (47, 111), (48, 173), (49, 106), (50, 7), (51, 196), (52, 151), (53, 176), (54, 109), (55, 181), (56, 67), (57, 127), (58, 90), (59, 44), (60, 96), (61, 66), (62, 35), (63, 39), (64, 37), (65, 12), (66, 153), (67, 68), (68, 88), (69, 198), (70, 33), (71, 101), (72, 137), (73, 63), (74, 119), (75, 64), (76, 87), (77, 192), (78, 170), (79, 85), (80, 99), (81, 179), (82, 80), (83, 43), (84, 133), (85, 164), (86, 0), (87, 142), (88, 193), (89, 185), (90, 171), (91, 57), (92, 97), (93, 83), (94, 166), (95, 52), (96, 160), (97, 144), (98, 55), (99, 40), (100, 120), (101, 38), (102, 186), (103, 78), (104, 15), (105, 71), (106, 197), (107, 50), (108, 76), (109, 41), (110, 152), (111, 140), (112, 199), (113, 195), (114, 175), (115, 167), (116, 190), (117, 115), (118, 30), (119, 184), (120, 150), (121, 162), (122, 139), (123, 146), (124, 159), (125, 108), (126, 22), (127, 128), (128, 82), (129, 56), (130, 75), (131, 20), (132, 118), (133, 161), (134, 19), (135, 107), (136, 165), (137, 110), (138, 157), (139, 69), (140, 183), (141, 74), (142, 177), (143, 70), (144, 187), (145, 155), (146, 129), (147, 163), (148, 134), (149, 103), (150, 47), (151, 178), (152, 14), (153, 105), (154, 117), (155, 58), (156, 100), (157, 92), (158, 180), (159, 191), (160, 169), (161, 60), (162, 168), (163, 77), (164, 17), (165, 91), (166, 189), (167, 10), (168, 148), (169, 1), (170, 149), (171, 48), (172, 116), (173, 98), (174, 79), (175, 4), (176, 32), (177, 2), (178, 89), (179, 59), (180, 130), (181, 29), (182, 23), (183, 16), (184, 25), (185, 61), (186, 26), (187, 62), (188, 18), (189, 113), (190, 172), (191, 138), (192, 53), (193, 28), (194, 11), (195, 104), (196, 143), (197, 34), (198, 132), (199, 145)]}
Checkpoint ...
[33mEpoch 34/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [33][ 0/45]	Total Loss -2.3163e+01 (-2.3163e+01)	Consistency Loss 3.0795e+00 (3.0795e+00)	Entropy 5.2484e+00 (5.2484e+00)
Epoch: [33][25/45]	Total Loss -2.2990e+01 (-2.3047e+01)	Consistency Loss 3.1935e+00 (3.1210e+00)	Entropy 5.2366e+00 (5.2336e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.28074836730957, 'consistency': 2.510442018508911, 'total_loss': -2.770306348800659}], 'lowest_loss_head': 0, 'lowest_loss': -2.770306348800659}
New lowest loss on validation set: -2.7328 -> -2.7703
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14325163962720056, 'ARI': 0.05344052967309448, 'NMI': 0.4748878341866809, 'ACC Top-5': 0.27131515360717984, 'hungarian_match': [(0, 50), (1, 183), (2, 11), (3, 182), (4, 113), (5, 33), (6, 131), (7, 9), (8, 138), (9, 197), (10, 196), (11, 30), (12, 147), (13, 65), (14, 124), (15, 96), (16, 166), (17, 167), (18, 78), (19, 193), (20, 18), (21, 188), (22, 21), (23, 114), (24, 117), (25, 13), (26, 55), (27, 149), (28, 135), (29, 157), (30, 168), (31, 122), (32, 23), (33, 54), (34, 84), (35, 27), (36, 45), (37, 6), (38, 126), (39, 154), (40, 121), (41, 95), (42, 49), (43, 46), (44, 106), (45, 90), (46, 5), (47, 81), (48, 173), (49, 8), (50, 59), (51, 112), (52, 178), (53, 20), (54, 109), (55, 172), (56, 67), (57, 127), (58, 72), (59, 44), (60, 26), (61, 187), (62, 62), (63, 39), (64, 102), (65, 79), (66, 156), (67, 68), (68, 88), (69, 125), (70, 129), (71, 101), (72, 137), (73, 51), (74, 119), (75, 63), (76, 87), (77, 74), (78, 155), (79, 85), (80, 99), (81, 164), (82, 80), (83, 43), (84, 133), (85, 199), (86, 0), (87, 142), (88, 31), (89, 185), (90, 171), (91, 57), (92, 159), (93, 83), (94, 181), (95, 52), (96, 150), (97, 144), (98, 75), (99, 40), (100, 12), (101, 116), (102, 136), (103, 77), (104, 15), (105, 70), (106, 10), (107, 7), (108, 76), (109, 103), (110, 152), (111, 140), (112, 165), (113, 195), (114, 174), (115, 1), (116, 191), (117, 151), (118, 160), (119, 34), (120, 118), (121, 194), (122, 139), (123, 66), (124, 73), (125, 108), (126, 22), (127, 120), (128, 36), (129, 94), (130, 97), (131, 56), (132, 86), (133, 161), (134, 19), (135, 28), (136, 175), (137, 110), (138, 158), (139, 69), (140, 98), (141, 93), (142, 177), (143, 141), (144, 186), (145, 184), (146, 198), (147, 163), (148, 134), (149, 3), (150, 38), (151, 153), (152, 14), (153, 105), (154, 111), (155, 58), (156, 100), (157, 92), (158, 180), (159, 190), (160, 169), (161, 60), (162, 162), (163, 47), (164, 17), (165, 91), (166, 189), (167, 41), (168, 35), (169, 146), (170, 148), (171, 48), (172, 170), (173, 192), (174, 82), (175, 4), (176, 32), (177, 2), (178, 89), (179, 64), (180, 128), (181, 42), (182, 24), (183, 16), (184, 25), (185, 61), (186, 107), (187, 71), (188, 176), (189, 123), (190, 115), (191, 179), (192, 53), (193, 29), (194, 37), (195, 104), (196, 143), (197, 130), (198, 132), (199, 145)]}
Checkpoint ...
[33mEpoch 35/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [34][ 0/45]	Total Loss -2.3166e+01 (-2.3166e+01)	Consistency Loss 3.0087e+00 (3.0087e+00)	Entropy 5.2349e+00 (5.2349e+00)
Epoch: [34][25/45]	Total Loss -2.3007e+01 (-2.3046e+01)	Consistency Loss 3.1955e+00 (3.1318e+00)	Entropy 5.2404e+00 (5.2355e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.281518936157227, 'consistency': 2.5099709033966064, 'total_loss': -2.77154803276062}], 'lowest_loss_head': 0, 'lowest_loss': -2.77154803276062}
New lowest loss on validation set: -2.7703 -> -2.7715
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14445978598550224, 'ARI': 0.05657014007879499, 'NMI': 0.47811227532214673, 'ACC Top-5': 0.28132550914739385, 'hungarian_match': [(0, 70), (1, 112), (2, 3), (3, 182), (4, 13), (5, 33), (6, 131), (7, 9), (8, 56), (9, 197), (10, 196), (11, 37), (12, 147), (13, 65), (14, 125), (15, 30), (16, 166), (17, 2), (18, 150), (19, 86), (20, 18), (21, 35), (22, 21), (23, 114), (24, 194), (25, 15), (26, 55), (27, 124), (28, 93), (29, 19), (30, 162), (31, 122), (32, 23), (33, 54), (34, 84), (35, 27), (36, 45), (37, 6), (38, 126), (39, 42), (40, 121), (41, 94), (42, 49), (43, 46), (44, 8), (45, 90), (46, 63), (47, 81), (48, 173), (49, 29), (50, 7), (51, 12), (52, 181), (53, 155), (54, 109), (55, 172), (56, 67), (57, 127), (58, 73), (59, 44), (60, 26), (61, 69), (62, 135), (63, 39), (64, 102), (65, 79), (66, 156), (67, 68), (68, 88), (69, 116), (70, 119), (71, 111), (72, 137), (73, 51), (74, 98), (75, 5), (76, 87), (77, 192), (78, 168), (79, 85), (80, 99), (81, 164), (82, 80), (83, 43), (84, 133), (85, 159), (86, 0), (87, 142), (88, 193), (89, 185), (90, 171), (91, 1), (92, 97), (93, 83), (94, 151), (95, 52), (96, 160), (97, 144), (98, 34), (99, 36), (100, 120), (101, 38), (102, 136), (103, 77), (104, 47), (105, 71), (106, 174), (107, 50), (108, 76), (109, 167), (110, 138), (111, 140), (112, 199), (113, 195), (114, 153), (115, 146), (116, 190), (117, 186), (118, 74), (119, 184), (120, 175), (121, 11), (122, 139), (123, 66), (124, 14), (125, 108), (126, 22), (127, 128), (128, 53), (129, 20), (130, 75), (131, 188), (132, 57), (133, 161), (134, 31), (135, 106), (136, 118), (137, 110), (138, 158), (139, 78), (140, 183), (141, 176), (142, 177), (143, 141), (144, 187), (145, 95), (146, 198), (147, 163), (148, 134), (149, 103), (150, 152), (151, 178), (152, 165), (153, 105), (154, 154), (155, 58), (156, 100), (157, 92), (158, 180), (159, 191), (160, 169), (161, 60), (162, 129), (163, 101), (164, 17), (165, 91), (166, 189), (167, 10), (168, 148), (169, 145), (170, 149), (171, 48), (172, 170), (173, 157), (174, 40), (175, 4), (176, 32), (177, 113), (178, 89), (179, 64), (180, 130), (181, 82), (182, 24), (183, 16), (184, 25), (185, 61), (186, 107), (187, 62), (188, 96), (189, 123), (190, 115), (191, 179), (192, 72), (193, 28), (194, 41), (195, 104), (196, 143), (197, 117), (198, 132), (199, 59)]}
Checkpoint ...
[33mEpoch 36/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [35][ 0/45]	Total Loss -2.3018e+01 (-2.3018e+01)	Consistency Loss 3.1974e+00 (3.1974e+00)	Entropy 5.2431e+00 (5.2431e+00)
Epoch: [35][25/45]	Total Loss -2.2989e+01 (-2.3050e+01)	Consistency Loss 3.1305e+00 (3.1285e+00)	Entropy 5.2240e+00 (5.2358e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.282080173492432, 'consistency': 2.49816632270813, 'total_loss': -2.7839138507843018}], 'lowest_loss_head': 0, 'lowest_loss': -2.7839138507843018}
New lowest loss on validation set: -2.7715 -> -2.7839
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14653089402830513, 'ARI': 0.055506237988024176, 'NMI': 0.47669792358986907, 'ACC Top-5': 0.2787366240938902, 'hungarian_match': [(0, 50), (1, 112), (2, 3), (3, 171), (4, 10), (5, 131), (6, 192), (7, 9), (8, 56), (9, 6), (10, 31), (11, 37), (12, 147), (13, 65), (14, 125), (15, 30), (16, 166), (17, 73), (18, 111), (19, 193), (20, 33), (21, 35), (22, 21), (23, 114), (24, 194), (25, 94), (26, 55), (27, 123), (28, 93), (29, 11), (30, 174), (31, 122), (32, 136), (33, 54), (34, 84), (35, 27), (36, 45), (37, 197), (38, 126), (39, 154), (40, 121), (41, 47), (42, 49), (43, 46), (44, 106), (45, 90), (46, 0), (47, 81), (48, 173), (49, 23), (50, 59), (51, 196), (52, 167), (53, 151), (54, 109), (55, 181), (56, 67), (57, 127), (58, 74), (59, 44), (60, 26), (61, 69), (62, 135), (63, 39), (64, 102), (65, 12), (66, 156), (67, 68), (68, 86), (69, 119), (70, 182), (71, 101), (72, 137), (73, 51), (74, 124), (75, 63), (76, 87), (77, 15), (78, 34), (79, 85), (80, 99), (81, 164), (82, 80), (83, 43), (84, 133), (85, 159), (86, 2), (87, 142), (88, 160), (89, 185), (90, 95), (91, 57), (92, 97), (93, 83), (94, 20), (95, 52), (96, 161), (97, 145), (98, 75), (99, 36), (100, 120), (101, 170), (102, 64), (103, 66), (104, 13), (105, 186), (106, 38), (107, 7), (108, 76), (109, 150), (110, 152), (111, 143), (112, 199), (113, 195), (114, 153), (115, 146), (116, 191), (117, 175), (118, 96), (119, 184), (120, 118), (121, 162), (122, 139), (123, 40), (124, 155), (125, 108), (126, 22), (127, 128), (128, 41), (129, 178), (130, 42), (131, 188), (132, 88), (133, 172), (134, 19), (135, 28), (136, 129), (137, 110), (138, 158), (139, 79), (140, 183), (141, 176), (142, 177), (143, 70), (144, 187), (145, 138), (146, 198), (147, 163), (148, 78), (149, 14), (150, 72), (151, 157), (152, 165), (153, 105), (154, 117), (155, 58), (156, 100), (157, 92), (158, 180), (159, 190), (160, 169), (161, 60), (162, 168), (163, 77), (164, 17), (165, 91), (166, 189), (167, 134), (168, 148), (169, 140), (170, 103), (171, 48), (172, 116), (173, 98), (174, 82), (175, 4), (176, 32), (177, 1), (178, 89), (179, 61), (180, 130), (181, 29), (182, 24), (183, 16), (184, 25), (185, 62), (186, 107), (187, 71), (188, 18), (189, 113), (190, 115), (191, 179), (192, 53), (193, 8), (194, 149), (195, 104), (196, 141), (197, 5), (198, 132), (199, 144)]}
Checkpoint ...
[33mEpoch 37/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [36][ 0/45]	Total Loss -2.2972e+01 (-2.2972e+01)	Consistency Loss 3.0914e+00 (3.0914e+00)	Entropy 5.2127e+00 (5.2127e+00)
Epoch: [36][25/45]	Total Loss -2.3103e+01 (-2.3080e+01)	Consistency Loss 3.0160e+00 (3.0871e+00)	Entropy 5.2238e+00 (5.2334e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.278921127319336, 'consistency': 2.466850519180298, 'total_loss': -2.812070608139038}], 'lowest_loss_head': 0, 'lowest_loss': -2.812070608139038}
New lowest loss on validation set: -2.7839 -> -2.8121
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14463237832240247, 'ARI': 0.05540090483237819, 'NMI': 0.4749167284103793, 'ACC Top-5': 0.27925440110459093, 'hungarian_match': [(0, 51), (1, 112), (2, 3), (3, 124), (4, 174), (5, 147), (6, 131), (7, 9), (8, 56), (9, 197), (10, 150), (11, 139), (12, 84), (13, 65), (14, 125), (15, 96), (16, 166), (17, 167), (18, 111), (19, 86), (20, 102), (21, 35), (22, 188), (23, 114), (24, 194), (25, 93), (26, 26), (27, 130), (28, 47), (29, 19), (30, 168), (31, 122), (32, 136), (33, 54), (34, 113), (35, 27), (36, 45), (37, 5), (38, 126), (39, 154), (40, 121), (41, 72), (42, 49), (43, 46), (44, 106), (45, 117), (46, 24), (47, 40), (48, 173), (49, 8), (50, 7), (51, 196), (52, 178), (53, 108), (54, 109), (55, 118), (56, 67), (57, 127), (58, 90), (59, 44), (60, 97), (61, 187), (62, 135), (63, 39), (64, 42), (65, 81), (66, 156), (67, 68), (68, 88), (69, 119), (70, 182), (71, 101), (72, 137), (73, 63), (74, 98), (75, 64), (76, 87), (77, 192), (78, 73), (79, 85), (80, 99), (81, 164), (82, 80), (83, 43), (84, 92), (85, 159), (86, 0), (87, 142), (88, 193), (89, 6), (90, 171), (91, 57), (92, 185), (93, 83), (94, 181), (95, 52), (96, 160), (97, 144), (98, 55), (99, 36), (100, 120), (101, 38), (102, 33), (103, 78), (104, 195), (105, 141), (106, 129), (107, 50), (108, 76), (109, 170), (110, 138), (111, 140), (112, 53), (113, 198), (114, 153), (115, 145), (116, 190), (117, 20), (118, 165), (119, 184), (120, 172), (121, 11), (122, 30), (123, 146), (124, 115), (125, 79), (126, 22), (127, 149), (128, 41), (129, 94), (130, 75), (131, 15), (132, 175), (133, 161), (134, 31), (135, 28), (136, 95), (137, 110), (138, 162), (139, 69), (140, 183), (141, 74), (142, 177), (143, 70), (144, 186), (145, 155), (146, 21), (147, 157), (148, 37), (149, 12), (150, 14), (151, 169), (152, 151), (153, 105), (154, 152), (155, 58), (156, 100), (157, 143), (158, 180), (159, 191), (160, 176), (161, 60), (162, 158), (163, 77), (164, 17), (165, 91), (166, 189), (167, 10), (168, 148), (169, 1), (170, 103), (171, 48), (172, 116), (173, 199), (174, 82), (175, 4), (176, 32), (177, 134), (178, 89), (179, 61), (180, 128), (181, 29), (182, 23), (183, 16), (184, 25), (185, 62), (186, 133), (187, 71), (188, 18), (189, 123), (190, 163), (191, 179), (192, 13), (193, 107), (194, 66), (195, 104), (196, 2), (197, 34), (198, 132), (199, 59)]}
Checkpoint ...
[33mEpoch 38/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [37][ 0/45]	Total Loss -2.3075e+01 (-2.3075e+01)	Consistency Loss 3.0236e+00 (3.0236e+00)	Entropy 5.2196e+00 (5.2196e+00)
Epoch: [37][25/45]	Total Loss -2.3025e+01 (-2.3060e+01)	Consistency Loss 3.0924e+00 (3.0747e+00)	Entropy 5.2234e+00 (5.2269e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.279372215270996, 'consistency': 2.466928005218506, 'total_loss': -2.8124442100524902}], 'lowest_loss_head': 0, 'lowest_loss': -2.8124442100524902}
New lowest loss on validation set: -2.8121 -> -2.8124
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.1472212633759061, 'ARI': 0.05782836169899445, 'NMI': 0.4775123095068686, 'ACC Top-5': 0.28167069382119436, 'hungarian_match': [(0, 51), (1, 112), (2, 3), (3, 182), (4, 8), (5, 20), (6, 16), (7, 9), (8, 56), (9, 82), (10, 93), (11, 139), (12, 84), (13, 65), (14, 125), (15, 14), (16, 166), (17, 167), (18, 111), (19, 193), (20, 175), (21, 35), (22, 21), (23, 114), (24, 194), (25, 96), (26, 10), (27, 123), (28, 46), (29, 19), (30, 168), (31, 122), (32, 23), (33, 54), (34, 136), (35, 27), (36, 45), (37, 6), (38, 126), (39, 174), (40, 121), (41, 47), (42, 49), (43, 155), (44, 133), (45, 117), (46, 2), (47, 81), (48, 173), (49, 107), (50, 86), (51, 196), (52, 165), (53, 172), (54, 109), (55, 181), (56, 67), (57, 127), (58, 90), (59, 44), (60, 13), (61, 69), (62, 135), (63, 39), (64, 102), (65, 12), (66, 153), (67, 68), (68, 88), (69, 119), (70, 42), (71, 101), (72, 137), (73, 5), (74, 124), (75, 63), (76, 131), (77, 15), (78, 129), (79, 85), (80, 99), (81, 179), (82, 80), (83, 43), (84, 146), (85, 159), (86, 0), (87, 142), (88, 160), (89, 185), (90, 171), (91, 57), (92, 11), (93, 83), (94, 151), (95, 52), (96, 161), (97, 144), (98, 170), (99, 36), (100, 120), (101, 38), (102, 33), (103, 78), (104, 187), (105, 71), (106, 95), (107, 7), (108, 76), (109, 130), (110, 138), (111, 143), (112, 199), (113, 195), (114, 59), (115, 145), (116, 190), (117, 164), (118, 37), (119, 94), (120, 150), (121, 55), (122, 30), (123, 197), (124, 18), (125, 108), (126, 22), (127, 149), (128, 41), (129, 157), (130, 75), (131, 97), (132, 50), (133, 163), (134, 31), (135, 106), (136, 192), (137, 110), (138, 158), (139, 188), (140, 183), (141, 74), (142, 177), (143, 141), (144, 186), (145, 184), (146, 198), (147, 180), (148, 134), (149, 116), (150, 72), (151, 178), (152, 118), (153, 105), (154, 154), (155, 58), (156, 100), (157, 92), (158, 147), (159, 191), (160, 169), (161, 60), (162, 34), (163, 77), (164, 17), (165, 91), (166, 189), (167, 79), (168, 148), (169, 140), (170, 103), (171, 48), (172, 162), (173, 98), (174, 40), (175, 4), (176, 32), (177, 73), (178, 89), (179, 61), (180, 128), (181, 29), (182, 24), (183, 152), (184, 25), (185, 62), (186, 26), (187, 70), (188, 176), (189, 113), (190, 115), (191, 156), (192, 53), (193, 28), (194, 66), (195, 104), (196, 1), (197, 87), (198, 132), (199, 64)]}
Checkpoint ...
[33mEpoch 39/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [38][ 0/45]	Total Loss -2.3066e+01 (-2.3066e+01)	Consistency Loss 3.1171e+00 (3.1171e+00)	Entropy 5.2366e+00 (5.2366e+00)
Epoch: [38][25/45]	Total Loss -2.2912e+01 (-2.3084e+01)	Consistency Loss 3.2430e+00 (3.0614e+00)	Entropy 5.2309e+00 (5.2291e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.278829097747803, 'consistency': 2.464559316635132, 'total_loss': -2.814269781112671}], 'lowest_loss_head': 0, 'lowest_loss': -2.814269781112671}
New lowest loss on validation set: -2.8124 -> -2.8143
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14601311701760442, 'ARI': 0.05414537762405014, 'NMI': 0.4768422251937041, 'ACC Top-5': 0.2770107007248878, 'hungarian_match': [(0, 50), (1, 132), (2, 148), (3, 182), (4, 10), (5, 117), (6, 160), (7, 9), (8, 56), (9, 106), (10, 180), (11, 139), (12, 103), (13, 65), (14, 124), (15, 3), (16, 166), (17, 73), (18, 81), (19, 33), (20, 102), (21, 188), (22, 193), (23, 114), (24, 194), (25, 96), (26, 26), (27, 123), (28, 75), (29, 20), (30, 175), (31, 122), (32, 136), (33, 54), (34, 131), (35, 27), (36, 45), (37, 6), (38, 126), (39, 154), (40, 121), (41, 94), (42, 49), (43, 46), (44, 28), (45, 93), (46, 24), (47, 47), (48, 119), (49, 29), (50, 7), (51, 196), (52, 177), (53, 172), (54, 109), (55, 181), (56, 67), (57, 127), (58, 90), (59, 44), (60, 97), (61, 187), (62, 135), (63, 39), (64, 37), (65, 173), (66, 157), (67, 68), (68, 86), (69, 125), (70, 38), (71, 101), (72, 137), (73, 5), (74, 98), (75, 63), (76, 197), (77, 74), (78, 155), (79, 85), (80, 99), (81, 179), (82, 80), (83, 43), (84, 92), (85, 164), (86, 0), (87, 142), (88, 31), (89, 185), (90, 171), (91, 1), (92, 159), (93, 83), (94, 151), (95, 52), (96, 161), (97, 144), (98, 55), (99, 36), (100, 120), (101, 170), (102, 51), (103, 66), (104, 13), (105, 71), (106, 129), (107, 88), (108, 76), (109, 130), (110, 138), (111, 143), (112, 165), (113, 195), (114, 11), (115, 62), (116, 72), (117, 168), (118, 79), (119, 95), (120, 118), (121, 150), (122, 30), (123, 146), (124, 147), (125, 108), (126, 22), (127, 149), (128, 41), (129, 176), (130, 42), (131, 190), (132, 57), (133, 192), (134, 19), (135, 107), (136, 82), (137, 110), (138, 162), (139, 69), (140, 183), (141, 199), (142, 84), (143, 141), (144, 186), (145, 184), (146, 198), (147, 163), (148, 78), (149, 12), (150, 174), (151, 178), (152, 14), (153, 105), (154, 134), (155, 58), (156, 100), (157, 104), (158, 15), (159, 191), (160, 169), (161, 60), (162, 158), (163, 77), (164, 17), (165, 91), (166, 189), (167, 59), (168, 35), (169, 140), (170, 87), (171, 48), (172, 116), (173, 152), (174, 40), (175, 4), (176, 32), (177, 112), (178, 89), (179, 64), (180, 128), (181, 111), (182, 23), (183, 16), (184, 25), (185, 61), (186, 133), (187, 70), (188, 18), (189, 113), (190, 115), (191, 156), (192, 53), (193, 8), (194, 153), (195, 21), (196, 2), (197, 34), (198, 167), (199, 145)]}
Checkpoint ...
[33mEpoch 40/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [39][ 0/45]	Total Loss -2.3210e+01 (-2.3210e+01)	Consistency Loss 2.8851e+00 (2.8851e+00)	Entropy 5.2190e+00 (5.2190e+00)
Epoch: [39][25/45]	Total Loss -2.3040e+01 (-2.3096e+01)	Consistency Loss 3.1962e+00 (3.0510e+00)	Entropy 5.2471e+00 (5.2294e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.280447959899902, 'consistency': 2.475947618484497, 'total_loss': -2.8045003414154053}], 'lowest_loss_head': 0, 'lowest_loss': -2.8045003414154053}
No new lowest loss on validation set: -2.8143 -> -2.8045
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.1463583016914049, 'ARI': 0.05457846144516536, 'NMI': 0.4757965577575014, 'ACC Top-5': 0.28184328615809456, 'hungarian_match': [(0, 51), (1, 112), (2, 3), (3, 182), (4, 13), (5, 131), (6, 192), (7, 26), (8, 56), (9, 6), (10, 31), (11, 139), (12, 103), (13, 65), (14, 124), (15, 150), (16, 166), (17, 73), (18, 81), (19, 193), (20, 175), (21, 35), (22, 21), (23, 114), (24, 177), (25, 12), (26, 55), (27, 123), (28, 137), (29, 20), (30, 157), (31, 122), (32, 186), (33, 54), (34, 84), (35, 27), (36, 45), (37, 92), (38, 126), (39, 42), (40, 121), (41, 176), (42, 49), (43, 79), (44, 28), (45, 90), (46, 24), (47, 134), (48, 63), (49, 22), (50, 7), (51, 196), (52, 178), (53, 172), (54, 109), (55, 181), (56, 67), (57, 127), (58, 74), (59, 44), (60, 138), (61, 69), (62, 59), (63, 39), (64, 102), (65, 113), (66, 156), (67, 68), (68, 86), (69, 125), (70, 132), (71, 101), (72, 135), (73, 5), (74, 98), (75, 64), (76, 87), (77, 15), (78, 155), (79, 85), (80, 99), (81, 179), (82, 80), (83, 43), (84, 133), (85, 159), (86, 0), (87, 142), (88, 116), (89, 185), (90, 171), (91, 57), (92, 97), (93, 83), (94, 151), (95, 52), (96, 161), (97, 144), (98, 34), (99, 36), (100, 120), (101, 38), (102, 33), (103, 78), (104, 190), (105, 71), (106, 129), (107, 50), (108, 76), (109, 130), (110, 95), (111, 140), (112, 199), (113, 195), (114, 37), (115, 146), (116, 136), (117, 168), (118, 165), (119, 184), (120, 173), (121, 11), (122, 30), (123, 197), (124, 147), (125, 108), (126, 106), (127, 149), (128, 118), (129, 94), (130, 117), (131, 115), (132, 88), (133, 163), (134, 19), (135, 107), (136, 164), (137, 110), (138, 158), (139, 188), (140, 183), (141, 93), (142, 194), (143, 70), (144, 187), (145, 154), (146, 198), (147, 180), (148, 111), (149, 53), (150, 153), (151, 169), (152, 14), (153, 105), (154, 152), (155, 62), (156, 100), (157, 143), (158, 167), (159, 191), (160, 160), (161, 60), (162, 162), (163, 77), (164, 17), (165, 91), (166, 189), (167, 10), (168, 9), (169, 1), (170, 148), (171, 48), (172, 170), (173, 46), (174, 40), (175, 4), (176, 32), (177, 2), (178, 89), (179, 58), (180, 128), (181, 82), (182, 23), (183, 16), (184, 25), (185, 61), (186, 18), (187, 29), (188, 174), (189, 96), (190, 47), (191, 75), (192, 72), (193, 8), (194, 41), (195, 104), (196, 141), (197, 66), (198, 119), (199, 145)]}
Checkpoint ...
[33mEpoch 41/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [40][ 0/45]	Total Loss -2.3135e+01 (-2.3135e+01)	Consistency Loss 3.0581e+00 (3.0581e+00)	Entropy 5.2387e+00 (5.2387e+00)
Epoch: [40][25/45]	Total Loss -2.3019e+01 (-2.3079e+01)	Consistency Loss 3.0551e+00 (3.0728e+00)	Entropy 5.2148e+00 (5.2304e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.278064727783203, 'consistency': 2.4413094520568848, 'total_loss': -2.8367552757263184}], 'lowest_loss_head': 0, 'lowest_loss': -2.8367552757263184}
New lowest loss on validation set: -2.8143 -> -2.8368
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.1472212633759061, 'ARI': 0.0575017358781745, 'NMI': 0.4786136496137099, 'ACC Top-5': 0.27131515360717984, 'hungarian_match': [(0, 50), (1, 112), (2, 13), (3, 148), (4, 113), (5, 131), (6, 192), (7, 9), (8, 74), (9, 186), (10, 156), (11, 139), (12, 116), (13, 65), (14, 125), (15, 96), (16, 166), (17, 2), (18, 150), (19, 106), (20, 102), (21, 188), (22, 193), (23, 114), (24, 20), (25, 137), (26, 55), (27, 124), (28, 75), (29, 19), (30, 174), (31, 122), (32, 23), (33, 54), (34, 84), (35, 27), (36, 45), (37, 6), (38, 126), (39, 42), (40, 121), (41, 72), (42, 49), (43, 79), (44, 11), (45, 93), (46, 10), (47, 81), (48, 3), (49, 8), (50, 59), (51, 196), (52, 178), (53, 155), (54, 109), (55, 36), (56, 67), (57, 127), (58, 90), (59, 44), (60, 138), (61, 187), (62, 51), (63, 39), (64, 40), (65, 69), (66, 153), (67, 68), (68, 86), (69, 119), (70, 33), (71, 101), (72, 135), (73, 5), (74, 182), (75, 145), (76, 87), (77, 15), (78, 14), (79, 85), (80, 99), (81, 164), (82, 80), (83, 43), (84, 133), (85, 159), (86, 0), (87, 142), (88, 157), (89, 185), (90, 152), (91, 57), (92, 97), (93, 83), (94, 181), (95, 52), (96, 161), (97, 70), (98, 34), (99, 46), (100, 12), (101, 38), (102, 104), (103, 111), (104, 136), (105, 71), (106, 197), (107, 7), (108, 76), (109, 171), (110, 95), (111, 140), (112, 165), (113, 195), (114, 118), (115, 146), (116, 190), (117, 175), (118, 37), (119, 184), (120, 172), (121, 162), (122, 30), (123, 115), (124, 147), (125, 108), (126, 22), (127, 120), (128, 41), (129, 94), (130, 117), (131, 64), (132, 88), (133, 163), (134, 31), (135, 107), (136, 129), (137, 110), (138, 158), (139, 17), (140, 183), (141, 199), (142, 177), (143, 141), (144, 173), (145, 134), (146, 198), (147, 180), (148, 78), (149, 103), (150, 176), (151, 169), (152, 151), (153, 105), (154, 154), (155, 58), (156, 100), (157, 92), (158, 167), (159, 191), (160, 160), (161, 60), (162, 168), (163, 77), (164, 194), (165, 91), (166, 189), (167, 56), (168, 35), (169, 1), (170, 149), (171, 48), (172, 170), (173, 98), (174, 82), (175, 4), (176, 32), (177, 73), (178, 89), (179, 61), (180, 128), (181, 29), (182, 24), (183, 16), (184, 25), (185, 63), (186, 26), (187, 62), (188, 18), (189, 123), (190, 47), (191, 179), (192, 53), (193, 28), (194, 66), (195, 21), (196, 143), (197, 130), (198, 132), (199, 144)]}
Checkpoint ...
[33mEpoch 42/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [41][ 0/45]	Total Loss -2.3125e+01 (-2.3125e+01)	Consistency Loss 3.0361e+00 (3.0361e+00)	Entropy 5.2322e+00 (5.2322e+00)
Epoch: [41][25/45]	Total Loss -2.3247e+01 (-2.3087e+01)	Consistency Loss 2.9256e+00 (3.0495e+00)	Entropy 5.2345e+00 (5.2273e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.277729034423828, 'consistency': 2.4557807445526123, 'total_loss': -2.821948289871216}], 'lowest_loss_head': 0, 'lowest_loss': -2.821948289871216}
No new lowest loss on validation set: -2.8368 -> -2.8219
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14445978598550224, 'ARI': 0.054708234313899436, 'NMI': 0.4759361652026909, 'ACC Top-5': 0.27752847773558853, 'hungarian_match': [(0, 51), (1, 112), (2, 3), (3, 124), (4, 113), (5, 131), (6, 16), (7, 40), (8, 56), (9, 6), (10, 31), (11, 139), (12, 182), (13, 65), (14, 123), (15, 95), (16, 166), (17, 2), (18, 11), (19, 35), (20, 175), (21, 188), (22, 21), (23, 114), (24, 165), (25, 96), (26, 55), (27, 130), (28, 102), (29, 20), (30, 156), (31, 122), (32, 23), (33, 54), (34, 84), (35, 27), (36, 45), (37, 92), (38, 33), (39, 154), (40, 121), (41, 72), (42, 49), (43, 46), (44, 107), (45, 90), (46, 5), (47, 81), (48, 173), (49, 8), (50, 7), (51, 196), (52, 178), (53, 155), (54, 109), (55, 172), (56, 67), (57, 127), (58, 18), (59, 44), (60, 13), (61, 187), (62, 194), (63, 39), (64, 115), (65, 79), (66, 153), (67, 68), (68, 86), (69, 125), (70, 129), (71, 101), (72, 135), (73, 63), (74, 119), (75, 74), (76, 87), (77, 15), (78, 14), (79, 85), (80, 99), (81, 164), (82, 80), (83, 43), (84, 133), (85, 159), (86, 0), (87, 142), (88, 193), (89, 185), (90, 157), (91, 1), (92, 97), (93, 83), (94, 50), (95, 52), (96, 160), (97, 144), (98, 75), (99, 36), (100, 120), (101, 170), (102, 9), (103, 78), (104, 93), (105, 70), (106, 197), (107, 88), (108, 76), (109, 167), (110, 138), (111, 140), (112, 199), (113, 195), (114, 181), (115, 62), (116, 136), (117, 168), (118, 171), (119, 184), (120, 150), (121, 73), (122, 30), (123, 77), (124, 147), (125, 108), (126, 22), (127, 128), (128, 41), (129, 94), (130, 42), (131, 174), (132, 57), (133, 161), (134, 19), (135, 28), (136, 118), (137, 110), (138, 158), (139, 69), (140, 183), (141, 59), (142, 177), (143, 141), (144, 190), (145, 37), (146, 198), (147, 163), (148, 134), (149, 12), (150, 38), (151, 169), (152, 151), (153, 105), (154, 192), (155, 58), (156, 100), (157, 146), (158, 180), (159, 191), (160, 176), (161, 60), (162, 162), (163, 137), (164, 17), (165, 91), (166, 189), (167, 10), (168, 148), (169, 186), (170, 103), (171, 48), (172, 149), (173, 98), (174, 82), (175, 4), (176, 32), (177, 116), (178, 89), (179, 64), (180, 126), (181, 29), (182, 24), (183, 152), (184, 25), (185, 61), (186, 26), (187, 71), (188, 117), (189, 111), (190, 47), (191, 179), (192, 53), (193, 106), (194, 66), (195, 104), (196, 143), (197, 34), (198, 132), (199, 145)]}
Checkpoint ...
[33mEpoch 43/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [42][ 0/45]	Total Loss -2.3215e+01 (-2.3215e+01)	Consistency Loss 2.9478e+00 (2.9478e+00)	Entropy 5.2325e+00 (5.2325e+00)
Epoch: [42][25/45]	Total Loss -2.3229e+01 (-2.3102e+01)	Consistency Loss 2.8631e+00 (3.0487e+00)	Entropy 5.2184e+00 (5.2301e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.279833793640137, 'consistency': 2.4460508823394775, 'total_loss': -2.833782911300659}], 'lowest_loss_head': 0, 'lowest_loss': -2.833782911300659}
No new lowest loss on validation set: -2.8368 -> -2.8338
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14825681739730756, 'ARI': 0.05607156044713088, 'NMI': 0.4775328633678418, 'ACC Top-5': 0.2839143942008975, 'hungarian_match': [(0, 50), (1, 112), (2, 3), (3, 124), (4, 13), (5, 33), (6, 192), (7, 10), (8, 138), (9, 133), (10, 93), (11, 139), (12, 116), (13, 65), (14, 173), (15, 150), (16, 36), (17, 20), (18, 111), (19, 35), (20, 147), (21, 188), (22, 193), (23, 114), (24, 194), (25, 12), (26, 55), (27, 123), (28, 172), (29, 19), (30, 174), (31, 122), (32, 23), (33, 54), (34, 84), (35, 27), (36, 45), (37, 6), (38, 66), (39, 42), (40, 121), (41, 176), (42, 49), (43, 79), (44, 29), (45, 90), (46, 5), (47, 40), (48, 53), (49, 8), (50, 7), (51, 196), (52, 171), (53, 155), (54, 109), (55, 181), (56, 67), (57, 127), (58, 74), (59, 44), (60, 47), (61, 187), (62, 135), (63, 39), (64, 102), (65, 81), (66, 166), (67, 68), (68, 88), (69, 125), (70, 132), (71, 101), (72, 137), (73, 51), (74, 182), (75, 186), (76, 87), (77, 15), (78, 14), (79, 85), (80, 99), (81, 164), (82, 80), (83, 43), (84, 92), (85, 159), (86, 0), (87, 142), (88, 11), (89, 185), (90, 156), (91, 1), (92, 97), (93, 83), (94, 75), (95, 52), (96, 161), (97, 144), (98, 34), (99, 46), (100, 120), (101, 38), (102, 9), (103, 78), (104, 136), (105, 70), (106, 197), (107, 86), (108, 76), (109, 170), (110, 95), (111, 140), (112, 165), (113, 198), (114, 157), (115, 59), (116, 191), (117, 168), (118, 37), (119, 184), (120, 118), (121, 96), (122, 30), (123, 195), (124, 73), (125, 108), (126, 22), (127, 126), (128, 162), (129, 94), (130, 160), (131, 130), (132, 57), (133, 163), (134, 31), (135, 28), (136, 129), (137, 110), (138, 158), (139, 69), (140, 183), (141, 199), (142, 177), (143, 141), (144, 117), (145, 154), (146, 21), (147, 180), (148, 134), (149, 103), (150, 153), (151, 178), (152, 151), (153, 105), (154, 152), (155, 58), (156, 100), (157, 146), (158, 167), (159, 190), (160, 169), (161, 60), (162, 175), (163, 77), (164, 17), (165, 91), (166, 189), (167, 56), (168, 106), (169, 145), (170, 148), (171, 48), (172, 149), (173, 98), (174, 82), (175, 4), (176, 32), (177, 2), (178, 89), (179, 61), (180, 128), (181, 64), (182, 24), (183, 16), (184, 25), (185, 62), (186, 107), (187, 71), (188, 18), (189, 113), (190, 115), (191, 179), (192, 72), (193, 26), (194, 41), (195, 104), (196, 143), (197, 131), (198, 119), (199, 63)]}
Checkpoint ...
[33mEpoch 44/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [43][ 0/45]	Total Loss -2.3252e+01 (-2.3252e+01)	Consistency Loss 2.8375e+00 (2.8375e+00)	Entropy 5.2179e+00 (5.2179e+00)
Epoch: [43][25/45]	Total Loss -2.3116e+01 (-2.3121e+01)	Consistency Loss 2.9688e+00 (3.0211e+00)	Entropy 5.2169e+00 (5.2285e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.279139041900635, 'consistency': 2.4441967010498047, 'total_loss': -2.83494234085083}], 'lowest_loss_head': 0, 'lowest_loss': -2.83494234085083}
No new lowest loss on validation set: -2.8368 -> -2.8349
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14497756299620296, 'ARI': 0.05719769043833644, 'NMI': 0.47805982247073064, 'ACC Top-5': 0.27632033137728684, 'hungarian_match': [(0, 51), (1, 112), (2, 3), (3, 124), (4, 148), (5, 131), (6, 16), (7, 62), (8, 56), (9, 6), (10, 93), (11, 139), (12, 116), (13, 65), (14, 114), (15, 95), (16, 36), (17, 2), (18, 11), (19, 197), (20, 175), (21, 35), (22, 188), (23, 129), (24, 17), (25, 96), (26, 55), (27, 123), (28, 102), (29, 182), (30, 174), (31, 122), (32, 23), (33, 54), (34, 84), (35, 27), (36, 45), (37, 5), (38, 126), (39, 154), (40, 121), (41, 94), (42, 49), (43, 46), (44, 133), (45, 117), (46, 63), (47, 81), (48, 186), (49, 8), (50, 59), (51, 196), (52, 171), (53, 172), (54, 109), (55, 181), (56, 67), (57, 127), (58, 90), (59, 44), (60, 30), (61, 187), (62, 135), (63, 39), (64, 42), (65, 79), (66, 166), (67, 68), (68, 86), (69, 125), (70, 53), (71, 101), (72, 137), (73, 119), (74, 98), (75, 74), (76, 87), (77, 15), (78, 14), (79, 85), (80, 99), (81, 179), (82, 80), (83, 43), (84, 92), (85, 159), (86, 0), (87, 142), (88, 111), (89, 185), (90, 156), (91, 57), (92, 97), (93, 83), (94, 50), (95, 52), (96, 161), (97, 144), (98, 34), (99, 40), (100, 120), (101, 170), (102, 9), (103, 78), (104, 190), (105, 70), (106, 33), (107, 7), (108, 76), (109, 167), (110, 152), (111, 140), (112, 199), (113, 195), (114, 153), (115, 198), (116, 136), (117, 164), (118, 37), (119, 184), (120, 173), (121, 162), (122, 157), (123, 115), (124, 147), (125, 108), (126, 22), (127, 128), (128, 41), (129, 160), (130, 75), (131, 20), (132, 88), (133, 163), (134, 19), (135, 107), (136, 165), (137, 110), (138, 158), (139, 69), (140, 183), (141, 176), (142, 177), (143, 141), (144, 31), (145, 155), (146, 21), (147, 180), (148, 134), (149, 12), (150, 38), (151, 178), (152, 151), (153, 105), (154, 192), (155, 58), (156, 100), (157, 146), (158, 13), (159, 191), (160, 169), (161, 60), (162, 168), (163, 77), (164, 194), (165, 91), (166, 189), (167, 10), (168, 106), (169, 1), (170, 103), (171, 48), (172, 149), (173, 150), (174, 82), (175, 4), (176, 32), (177, 73), (178, 89), (179, 64), (180, 130), (181, 29), (182, 24), (183, 118), (184, 25), (185, 61), (186, 26), (187, 71), (188, 18), (189, 113), (190, 47), (191, 138), (192, 72), (193, 28), (194, 66), (195, 104), (196, 143), (197, 193), (198, 132), (199, 145)]}
Checkpoint ...
[33mEpoch 45/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [44][ 0/45]	Total Loss -2.3242e+01 (-2.3242e+01)	Consistency Loss 2.8773e+00 (2.8773e+00)	Entropy 5.2238e+00 (5.2238e+00)
Epoch: [44][25/45]	Total Loss -2.2919e+01 (-2.3104e+01)	Consistency Loss 3.2200e+00 (3.0233e+00)	Entropy 5.2277e+00 (5.2255e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.281530380249023, 'consistency': 2.4424290657043457, 'total_loss': -2.8391013145446777}], 'lowest_loss_head': 0, 'lowest_loss': -2.8391013145446777}
New lowest loss on validation set: -2.8368 -> -2.8391
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14532274767000344, 'ARI': 0.053872758184250594, 'NMI': 0.47498577420168125, 'ACC Top-5': 0.2777010700724888, 'hungarian_match': [(0, 50), (1, 112), (2, 3), (3, 124), (4, 10), (5, 33), (6, 131), (7, 9), (8, 56), (9, 92), (10, 169), (11, 139), (12, 182), (13, 65), (14, 116), (15, 30), (16, 17), (17, 186), (18, 40), (19, 197), (20, 175), (21, 35), (22, 188), (23, 114), (24, 129), (25, 93), (26, 55), (27, 123), (28, 102), (29, 125), (30, 174), (31, 122), (32, 23), (33, 54), (34, 84), (35, 27), (36, 45), (37, 6), (38, 126), (39, 73), (40, 121), (41, 94), (42, 49), (43, 46), (44, 106), (45, 90), (46, 63), (47, 81), (48, 173), (49, 8), (50, 7), (51, 196), (52, 178), (53, 172), (54, 149), (55, 11), (56, 67), (57, 127), (58, 74), (59, 44), (60, 138), (61, 187), (62, 193), (63, 39), (64, 37), (65, 79), (66, 166), (67, 68), (68, 86), (69, 119), (70, 132), (71, 101), (72, 137), (73, 5), (74, 98), (75, 51), (76, 117), (77, 15), (78, 157), (79, 85), (80, 99), (81, 164), (82, 80), (83, 43), (84, 133), (85, 159), (86, 0), (87, 142), (88, 111), (89, 135), (90, 155), (91, 57), (92, 97), (93, 83), (94, 181), (95, 52), (96, 19), (97, 144), (98, 75), (99, 36), (100, 120), (101, 38), (102, 12), (103, 78), (104, 190), (105, 70), (106, 58), (107, 59), (108, 76), (109, 41), (110, 95), (111, 140), (112, 165), (113, 195), (114, 153), (115, 143), (116, 20), (117, 104), (118, 96), (119, 184), (120, 118), (121, 162), (122, 185), (123, 115), (124, 18), (125, 108), (126, 22), (127, 128), (128, 171), (129, 160), (130, 42), (131, 13), (132, 88), (133, 161), (134, 31), (135, 107), (136, 150), (137, 110), (138, 158), (139, 69), (140, 183), (141, 199), (142, 177), (143, 136), (144, 113), (145, 154), (146, 198), (147, 163), (148, 134), (149, 103), (150, 72), (151, 180), (152, 151), (153, 105), (154, 156), (155, 62), (156, 100), (157, 146), (158, 147), (159, 191), (160, 176), (161, 60), (162, 168), (163, 77), (164, 194), (165, 91), (166, 189), (167, 14), (168, 148), (169, 1), (170, 109), (171, 48), (172, 170), (173, 152), (174, 82), (175, 4), (176, 32), (177, 2), (178, 89), (179, 64), (180, 130), (181, 29), (182, 24), (183, 16), (184, 25), (185, 61), (186, 26), (187, 71), (188, 34), (189, 192), (190, 47), (191, 179), (192, 53), (193, 28), (194, 66), (195, 21), (196, 141), (197, 87), (198, 167), (199, 145)]}
Checkpoint ...
[33mEpoch 46/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [45][ 0/45]	Total Loss -2.3037e+01 (-2.3037e+01)	Consistency Loss 3.0499e+00 (3.0499e+00)	Entropy 5.2174e+00 (5.2174e+00)
Epoch: [45][25/45]	Total Loss -2.3239e+01 (-2.3149e+01)	Consistency Loss 2.9391e+00 (2.9780e+00)	Entropy 5.2357e+00 (5.2255e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.28231954574585, 'consistency': 2.435765504837036, 'total_loss': -2.8465540409088135}], 'lowest_loss_head': 0, 'lowest_loss': -2.8465540409088135}
New lowest loss on validation set: -2.8391 -> -2.8466
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14773904038660685, 'ARI': 0.05579240716036835, 'NMI': 0.4771290787399343, 'ACC Top-5': 0.27355885398688295, 'hungarian_match': [(0, 51), (1, 112), (2, 3), (3, 116), (4, 13), (5, 147), (6, 16), (7, 26), (8, 53), (9, 22), (10, 31), (11, 139), (12, 182), (13, 65), (14, 124), (15, 96), (16, 166), (17, 73), (18, 11), (19, 193), (20, 175), (21, 35), (22, 188), (23, 114), (24, 14), (25, 36), (26, 84), (27, 123), (28, 102), (29, 125), (30, 174), (31, 122), (32, 23), (33, 54), (34, 136), (35, 27), (36, 45), (37, 6), (38, 126), (39, 154), (40, 121), (41, 157), (42, 49), (43, 46), (44, 106), (45, 90), (46, 10), (47, 81), (48, 173), (49, 8), (50, 7), (51, 196), (52, 178), (53, 151), (54, 109), (55, 34), (56, 67), (57, 127), (58, 56), (59, 44), (60, 97), (61, 187), (62, 62), (63, 39), (64, 37), (65, 79), (66, 164), (67, 68), (68, 88), (69, 119), (70, 129), (71, 111), (72, 137), (73, 5), (74, 98), (75, 74), (76, 197), (77, 15), (78, 170), (79, 85), (80, 99), (81, 179), (82, 80), (83, 71), (84, 133), (85, 159), (86, 0), (87, 142), (88, 184), (89, 135), (90, 171), (91, 57), (92, 167), (93, 83), (94, 75), (95, 52), (96, 160), (97, 144), (98, 55), (99, 40), (100, 120), (101, 38), (102, 29), (103, 78), (104, 93), (105, 43), (106, 33), (107, 50), (108, 76), (109, 130), (110, 138), (111, 143), (112, 199), (113, 195), (114, 181), (115, 145), (116, 191), (117, 104), (118, 165), (119, 41), (120, 172), (121, 186), (122, 30), (123, 115), (124, 18), (125, 108), (126, 92), (127, 87), (128, 101), (129, 94), (130, 117), (131, 20), (132, 86), (133, 161), (134, 19), (135, 28), (136, 152), (137, 110), (138, 158), (139, 69), (140, 183), (141, 59), (142, 177), (143, 141), (144, 12), (145, 185), (146, 198), (147, 163), (148, 134), (149, 103), (150, 72), (151, 153), (152, 118), (153, 105), (154, 192), (155, 58), (156, 100), (157, 146), (158, 180), (159, 190), (160, 169), (161, 60), (162, 168), (163, 77), (164, 17), (165, 91), (166, 189), (167, 95), (168, 148), (169, 140), (170, 149), (171, 48), (172, 162), (173, 194), (174, 82), (175, 4), (176, 32), (177, 2), (178, 89), (179, 64), (180, 128), (181, 42), (182, 24), (183, 155), (184, 25), (185, 61), (186, 107), (187, 70), (188, 176), (189, 113), (190, 47), (191, 156), (192, 150), (193, 9), (194, 66), (195, 21), (196, 1), (197, 131), (198, 132), (199, 63)]}
Checkpoint ...
[33mEpoch 47/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [46][ 0/45]	Total Loss -2.3117e+01 (-2.3117e+01)	Consistency Loss 3.0423e+00 (3.0423e+00)	Entropy 5.2319e+00 (5.2319e+00)
Epoch: [46][25/45]	Total Loss -2.3117e+01 (-2.3141e+01)	Consistency Loss 2.9902e+00 (3.0030e+00)	Entropy 5.2215e+00 (5.2289e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.280722141265869, 'consistency': 2.4218742847442627, 'total_loss': -2.8588478565216064}], 'lowest_loss_head': 0, 'lowest_loss': -2.8588478565216064}
New lowest loss on validation set: -2.8466 -> -2.8588
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14497756299620296, 'ARI': 0.053788868695609476, 'NMI': 0.4759662321136725, 'ACC Top-5': 0.2740766309975837, 'hungarian_match': [(0, 50), (1, 112), (2, 3), (3, 124), (4, 107), (5, 131), (6, 192), (7, 193), (8, 30), (9, 197), (10, 31), (11, 139), (12, 147), (13, 65), (14, 5), (15, 96), (16, 36), (17, 73), (18, 11), (19, 33), (20, 175), (21, 35), (22, 136), (23, 114), (24, 198), (25, 102), (26, 55), (27, 123), (28, 12), (29, 199), (30, 174), (31, 122), (32, 23), (33, 54), (34, 84), (35, 27), (36, 45), (37, 6), (38, 126), (39, 154), (40, 121), (41, 164), (42, 49), (43, 46), (44, 133), (45, 90), (46, 10), (47, 81), (48, 173), (49, 8), (50, 59), (51, 196), (52, 178), (53, 172), (54, 109), (55, 181), (56, 67), (57, 127), (58, 56), (59, 44), (60, 13), (61, 187), (62, 62), (63, 39), (64, 37), (65, 17), (66, 166), (67, 68), (68, 88), (69, 125), (70, 132), (71, 101), (72, 137), (73, 119), (74, 182), (75, 194), (76, 87), (77, 74), (78, 170), (79, 85), (80, 99), (81, 179), (82, 80), (83, 71), (84, 92), (85, 159), (86, 0), (87, 142), (88, 111), (89, 135), (90, 171), (91, 1), (92, 86), (93, 83), (94, 152), (95, 52), (96, 160), (97, 144), (98, 34), (99, 40), (100, 120), (101, 38), (102, 9), (103, 78), (104, 117), (105, 70), (106, 64), (107, 7), (108, 76), (109, 130), (110, 95), (111, 140), (112, 53), (113, 195), (114, 153), (115, 146), (116, 191), (117, 151), (118, 157), (119, 184), (120, 118), (121, 162), (122, 77), (123, 115), (124, 150), (125, 108), (126, 22), (127, 149), (128, 129), (129, 94), (130, 42), (131, 97), (132, 57), (133, 161), (134, 19), (135, 28), (136, 165), (137, 110), (138, 158), (139, 69), (140, 183), (141, 93), (142, 177), (143, 141), (144, 186), (145, 185), (146, 104), (147, 180), (148, 134), (149, 20), (150, 155), (151, 169), (152, 14), (153, 105), (154, 138), (155, 58), (156, 100), (157, 75), (158, 15), (159, 190), (160, 176), (161, 60), (162, 168), (163, 47), (164, 188), (165, 91), (166, 189), (167, 79), (168, 148), (169, 51), (170, 103), (171, 48), (172, 116), (173, 98), (174, 82), (175, 4), (176, 32), (177, 2), (178, 89), (179, 63), (180, 128), (181, 29), (182, 24), (183, 16), (184, 25), (185, 61), (186, 26), (187, 43), (188, 18), (189, 113), (190, 163), (191, 156), (192, 72), (193, 106), (194, 41), (195, 21), (196, 143), (197, 66), (198, 167), (199, 145)]}
Checkpoint ...
[33mEpoch 48/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [47][ 0/45]	Total Loss -2.3176e+01 (-2.3176e+01)	Consistency Loss 3.0238e+00 (3.0238e+00)	Entropy 5.2400e+00 (5.2400e+00)
Epoch: [47][25/45]	Total Loss -2.3056e+01 (-2.3122e+01)	Consistency Loss 3.0869e+00 (3.0156e+00)	Entropy 5.2285e+00 (5.2275e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.28316593170166, 'consistency': 2.4091455936431885, 'total_loss': -2.8740203380584717}], 'lowest_loss_head': 0, 'lowest_loss': -2.8740203380584717}
New lowest loss on validation set: -2.8588 -> -2.8740
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14497756299620296, 'ARI': 0.056196595615425296, 'NMI': 0.4772112033484931, 'ACC Top-5': 0.2740766309975837, 'hungarian_match': [(0, 51), (1, 116), (2, 3), (3, 182), (4, 10), (5, 74), (6, 16), (7, 79), (8, 32), (9, 197), (10, 93), (11, 139), (12, 147), (13, 65), (14, 112), (15, 95), (16, 36), (17, 73), (18, 11), (19, 193), (20, 33), (21, 35), (22, 188), (23, 114), (24, 20), (25, 12), (26, 55), (27, 124), (28, 102), (29, 19), (30, 174), (31, 122), (32, 23), (33, 54), (34, 84), (35, 27), (36, 45), (37, 6), (38, 149), (39, 154), (40, 121), (41, 185), (42, 49), (43, 46), (44, 133), (45, 167), (46, 5), (47, 81), (48, 173), (49, 29), (50, 59), (51, 196), (52, 53), (53, 178), (54, 109), (55, 181), (56, 67), (57, 127), (58, 90), (59, 44), (60, 13), (61, 187), (62, 136), (63, 39), (64, 42), (65, 17), (66, 166), (67, 68), (68, 88), (69, 125), (70, 129), (71, 101), (72, 137), (73, 63), (74, 119), (75, 2), (76, 87), (77, 15), (78, 170), (79, 85), (80, 99), (81, 179), (82, 80), (83, 71), (84, 8), (85, 164), (86, 0), (87, 142), (88, 160), (89, 135), (90, 171), (91, 1), (92, 97), (93, 83), (94, 151), (95, 52), (96, 161), (97, 144), (98, 34), (99, 40), (100, 120), (101, 38), (102, 9), (103, 78), (104, 96), (105, 70), (106, 186), (107, 50), (108, 76), (109, 130), (110, 56), (111, 140), (112, 165), (113, 195), (114, 155), (115, 146), (116, 191), (117, 153), (118, 157), (119, 111), (120, 172), (121, 162), (122, 30), (123, 115), (124, 150), (125, 108), (126, 22), (127, 126), (128, 41), (129, 94), (130, 138), (131, 192), (132, 57), (133, 47), (134, 31), (135, 107), (136, 118), (137, 110), (138, 158), (139, 69), (140, 183), (141, 199), (142, 7), (143, 141), (144, 113), (145, 159), (146, 198), (147, 180), (148, 37), (149, 103), (150, 175), (151, 169), (152, 14), (153, 105), (154, 86), (155, 58), (156, 100), (157, 75), (158, 177), (159, 190), (160, 176), (161, 60), (162, 168), (163, 134), (164, 194), (165, 91), (166, 189), (167, 104), (168, 106), (169, 61), (170, 148), (171, 48), (172, 131), (173, 98), (174, 82), (175, 4), (176, 184), (177, 92), (178, 89), (179, 64), (180, 128), (181, 77), (182, 24), (183, 152), (184, 25), (185, 62), (186, 26), (187, 43), (188, 18), (189, 123), (190, 163), (191, 156), (192, 72), (193, 28), (194, 66), (195, 21), (196, 143), (197, 117), (198, 132), (199, 145)]}
Checkpoint ...
[33mEpoch 49/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [48][ 0/45]	Total Loss -2.3171e+01 (-2.3171e+01)	Consistency Loss 3.0403e+00 (3.0403e+00)	Entropy 5.2422e+00 (5.2422e+00)
Epoch: [48][25/45]	Total Loss -2.3246e+01 (-2.3131e+01)	Consistency Loss 2.8470e+00 (3.0095e+00)	Entropy 5.2185e+00 (5.2281e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.284128189086914, 'consistency': 2.3876914978027344, 'total_loss': -2.8964366912841797}], 'lowest_loss_head': 0, 'lowest_loss': -2.8964366912841797}
New lowest loss on validation set: -2.8740 -> -2.8964
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14791163272350707, 'ARI': 0.05465373557048161, 'NMI': 0.4779694440571217, 'ACC Top-5': 0.2747670003451847, 'hungarian_match': [(0, 49), (1, 112), (2, 3), (3, 124), (4, 13), (5, 33), (6, 192), (7, 62), (8, 159), (9, 106), (10, 169), (11, 139), (12, 182), (13, 65), (14, 125), (15, 95), (16, 166), (17, 73), (18, 11), (19, 198), (20, 175), (21, 35), (22, 188), (23, 114), (24, 20), (25, 117), (26, 55), (27, 123), (28, 92), (29, 131), (30, 174), (31, 122), (32, 23), (33, 54), (34, 84), (35, 27), (36, 45), (37, 6), (38, 126), (39, 154), (40, 121), (41, 151), (42, 50), (43, 46), (44, 29), (45, 167), (46, 10), (47, 81), (48, 173), (49, 8), (50, 59), (51, 196), (52, 171), (53, 172), (54, 109), (55, 118), (56, 67), (57, 127), (58, 74), (59, 44), (60, 86), (61, 187), (62, 135), (63, 39), (64, 102), (65, 79), (66, 153), (67, 68), (68, 88), (69, 119), (70, 132), (71, 101), (72, 137), (73, 5), (74, 98), (75, 63), (76, 90), (77, 15), (78, 36), (79, 85), (80, 99), (81, 168), (82, 80), (83, 71), (84, 133), (85, 164), (86, 0), (87, 142), (88, 184), (89, 147), (90, 152), (91, 57), (92, 185), (93, 83), (94, 75), (95, 52), (96, 160), (97, 144), (98, 34), (99, 40), (100, 120), (101, 38), (102, 107), (103, 78), (104, 136), (105, 70), (106, 197), (107, 7), (108, 76), (109, 130), (110, 138), (111, 140), (112, 165), (113, 195), (114, 181), (115, 186), (116, 191), (117, 157), (118, 37), (119, 41), (120, 155), (121, 96), (122, 30), (123, 115), (124, 150), (125, 108), (126, 22), (127, 149), (128, 53), (129, 94), (130, 42), (131, 97), (132, 51), (133, 161), (134, 19), (135, 28), (136, 129), (137, 110), (138, 158), (139, 17), (140, 183), (141, 199), (142, 177), (143, 141), (144, 113), (145, 32), (146, 104), (147, 163), (148, 134), (149, 87), (150, 93), (151, 178), (152, 14), (153, 105), (154, 156), (155, 58), (156, 100), (157, 146), (158, 180), (159, 190), (160, 176), (161, 60), (162, 162), (163, 77), (164, 69), (165, 91), (166, 189), (167, 56), (168, 148), (169, 1), (170, 103), (171, 48), (172, 170), (173, 194), (174, 12), (175, 4), (176, 31), (177, 2), (178, 89), (179, 61), (180, 128), (181, 82), (182, 24), (183, 16), (184, 25), (185, 64), (186, 26), (187, 43), (188, 18), (189, 111), (190, 47), (191, 179), (192, 72), (193, 9), (194, 66), (195, 21), (196, 143), (197, 193), (198, 116), (199, 145)]}
Checkpoint ...
[33mEpoch 50/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [49][ 0/45]	Total Loss -2.3260e+01 (-2.3260e+01)	Consistency Loss 2.8848e+00 (2.8848e+00)	Entropy 5.2289e+00 (5.2289e+00)
Epoch: [49][25/45]	Total Loss -2.3310e+01 (-2.3171e+01)	Consistency Loss 2.8676e+00 (2.9582e+00)	Entropy 5.2354e+00 (5.2258e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.279825210571289, 'consistency': 2.382709503173828, 'total_loss': -2.897115707397461}], 'lowest_loss_head': 0, 'lowest_loss': -2.897115707397461}
New lowest loss on validation set: -2.8964 -> -2.8971
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.14376941663790127, 'ARI': 0.05202899856204558, 'NMI': 0.47464699979849173, 'ACC Top-5': 0.2820158784949948, 'hungarian_match': [(0, 51), (1, 112), (2, 3), (3, 124), (4, 10), (5, 131), (6, 192), (7, 26), (8, 32), (9, 106), (10, 169), (11, 139), (12, 147), (13, 65), (14, 114), (15, 150), (16, 36), (17, 74), (18, 12), (19, 33), (20, 175), (21, 35), (22, 188), (23, 116), (24, 56), (25, 96), (26, 55), (27, 126), (28, 102), (29, 20), (30, 174), (31, 122), (32, 23), (33, 54), (34, 84), (35, 27), (36, 45), (37, 6), (38, 193), (39, 154), (40, 121), (41, 72), (42, 49), (43, 46), (44, 133), (45, 163), (46, 7), (47, 81), (48, 173), (49, 8), (50, 59), (51, 196), (52, 31), (53, 165), (54, 109), (55, 118), (56, 67), (57, 127), (58, 90), (59, 44), (60, 30), (61, 187), (62, 136), (63, 39), (64, 37), (65, 69), (66, 166), (67, 68), (68, 88), (69, 119), (70, 53), (71, 111), (72, 137), (73, 198), (74, 148), (75, 140), (76, 197), (77, 15), (78, 42), (79, 85), (80, 99), (81, 164), (82, 80), (83, 71), (84, 92), (85, 159), (86, 0), (87, 142), (88, 160), (89, 97), (90, 171), (91, 57), (92, 185), (93, 83), (94, 117), (95, 52), (96, 161), (97, 144), (98, 34), (99, 40), (100, 120), (101, 170), (102, 63), (103, 78), (104, 190), (105, 43), (106, 129), (107, 50), (108, 76), (109, 168), (110, 138), (111, 143), (112, 125), (113, 195), (114, 181), (115, 62), (116, 95), (117, 157), (118, 79), (119, 135), (120, 172), (121, 11), (122, 38), (123, 77), (124, 115), (125, 108), (126, 22), (127, 130), (128, 41), (129, 167), (130, 155), (131, 13), (132, 186), (133, 47), (134, 19), (135, 28), (136, 199), (137, 110), (138, 158), (139, 17), (140, 183), (141, 93), (142, 177), (143, 141), (144, 113), (145, 152), (146, 104), (147, 180), (148, 134), (149, 87), (150, 153), (151, 178), (152, 14), (153, 105), (154, 86), (155, 58), (156, 100), (157, 75), (158, 182), (159, 191), (160, 176), (161, 60), (162, 162), (163, 101), (164, 194), (165, 91), (166, 189), (167, 151), (168, 9), (169, 146), (170, 103), (171, 48), (172, 149), (173, 98), (174, 82), (175, 4), (176, 184), (177, 1), (178, 89), (179, 64), (180, 128), (181, 29), (182, 24), (183, 16), (184, 25), (185, 61), (186, 107), (187, 70), (188, 18), (189, 123), (190, 94), (191, 179), (192, 73), (193, 156), (194, 66), (195, 21), (196, 2), (197, 5), (198, 132), (199, 145)]}
Checkpoint ...
[34mEvaluate best model based on SCAN metric at the end[0m
torch.Size([5794])
torch.Size([5794])
{'ACC': 0.14376941663790127, 'ARI': 0.05202899856204558, 'NMI': 0.47464699979849173, 'ACC Top-5': 0.2820158784949948, 'hungarian_match': [(0, 51), (1, 112), (2, 3), (3, 124), (4, 10), (5, 131), (6, 192), (7, 26), (8, 32), (9, 106), (10, 169), (11, 139), (12, 147), (13, 65), (14, 114), (15, 150), (16, 36), (17, 74), (18, 12), (19, 33), (20, 175), (21, 35), (22, 188), (23, 116), (24, 56), (25, 96), (26, 55), (27, 126), (28, 102), (29, 20), (30, 174), (31, 122), (32, 23), (33, 54), (34, 84), (35, 27), (36, 45), (37, 6), (38, 193), (39, 154), (40, 121), (41, 72), (42, 49), (43, 46), (44, 133), (45, 163), (46, 7), (47, 81), (48, 173), (49, 8), (50, 59), (51, 196), (52, 31), (53, 165), (54, 109), (55, 118), (56, 67), (57, 127), (58, 90), (59, 44), (60, 30), (61, 187), (62, 136), (63, 39), (64, 37), (65, 69), (66, 166), (67, 68), (68, 88), (69, 119), (70, 53), (71, 111), (72, 137), (73, 198), (74, 148), (75, 140), (76, 197), (77, 15), (78, 42), (79, 85), (80, 99), (81, 164), (82, 80), (83, 71), (84, 92), (85, 159), (86, 0), (87, 142), (88, 160), (89, 97), (90, 171), (91, 57), (92, 185), (93, 83), (94, 117), (95, 52), (96, 161), (97, 144), (98, 34), (99, 40), (100, 120), (101, 170), (102, 63), (103, 78), (104, 190), (105, 43), (106, 129), (107, 50), (108, 76), (109, 168), (110, 138), (111, 143), (112, 125), (113, 195), (114, 181), (115, 62), (116, 95), (117, 157), (118, 79), (119, 135), (120, 172), (121, 11), (122, 38), (123, 77), (124, 115), (125, 108), (126, 22), (127, 130), (128, 41), (129, 167), (130, 155), (131, 13), (132, 186), (133, 47), (134, 19), (135, 28), (136, 199), (137, 110), (138, 158), (139, 17), (140, 183), (141, 93), (142, 177), (143, 141), (144, 113), (145, 152), (146, 104), (147, 180), (148, 134), (149, 87), (150, 153), (151, 178), (152, 14), (153, 105), (154, 86), (155, 58), (156, 100), (157, 75), (158, 182), (159, 191), (160, 176), (161, 60), (162, 162), (163, 101), (164, 194), (165, 91), (166, 189), (167, 151), (168, 9), (169, 146), (170, 103), (171, 48), (172, 149), (173, 98), (174, 82), (175, 4), (176, 184), (177, 1), (178, 89), (179, 64), (180, 128), (181, 29), (182, 24), (183, 16), (184, 25), (185, 61), (186, 107), (187, 70), (188, 18), (189, 123), (190, 94), (191, 179), (192, 73), (193, 156), (194, 66), (195, 21), (196, 2), (197, 5), (198, 132), (199, 145)]}
Final Accuracy: 0.14376941663790127
