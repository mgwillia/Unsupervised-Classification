vulcan07.umiacs.umd.edu
[31m{'setup': 'scan', 'criterion': 'scan', 'criterion_kwargs': {'entropy_weight': 5.0}, 'update_cluster_head_only': False, 'num_heads': 1, 'backbone': 'resnet50', 'train_db_name': 'cub', 'val_db_name': 'cub', 'num_classes': 200, 'num_neighbors': 20, 'augmentation_strategy': 'cub', 'augmentation_kwargs': {'resize': 256, 'crop_size': 224, 'normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}, 'num_strong_augs': 4, 'cutout_kwargs': {'n_holes': 1, 'length': 16, 'random': True}}, 'transformation_kwargs': {'resize': 256, 'crop_size': 224, 'normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}, 'optimizer': 'adam', 'optimizer_kwargs': {'lr': 0.0001, 'weight_decay': 0.0001}, 'epochs': 50, 'batch_size': 128, 'num_workers': 8, 'scheduler': 'constant', 'pretext_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/pretext', 'pretext_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/pretext/checkpoint.pth.tar', 'pretext_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/pretext/model.pth.tar', 'topk_neighbors_train_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/pretext/topk-train-neighbors.npy', 'topk_neighbors_val_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/pretext/topk-val-neighbors.npy', 'topk_strangers_train_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/pretext/topk-train-strangers.npy', 'topk_strangers_val_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/pretext/topk-val-strangers.npy', 'centroid_indices_train_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/pretext/centroid-train-indices.npy', 'scan_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scan', 'scan_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scan/checkpoint.pth.tar', 'scan_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scan/model.pth.tar', 'scanf_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scanf', 'scanf_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scanf/checkpoint.pth.tar', 'scanf_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scanf/model.pth.tar', 'scanc_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scanc', 'scanc_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scanc/checkpoint.pth.tar', 'scanc_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scanc/model.pth.tar', 'selflabel_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/selflabel', 'selflabel_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/selflabel/checkpoint.pth.tar', 'selflabel_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/selflabel/model.pth.tar'}[0m
[34mGet dataset and dataloaders[0m
Train transforms: Compose(
    RandomHorizontalFlip(p=0.5)
    Resize(size=(256, 256), interpolation=bilinear)
    RandomCrop(size=(224, 224), padding=None)
    <data.augment.Augment object at 0x7f1380f86df0>
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
    <data.augment.Cutout object at 0x7f1380f86f10>
)
Validation transforms: Compose(
    Resize(size=(256, 256), interpolation=bilinear)
    CenterCrop(size=(224, 224))
    ToTensor()
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
)
Train samples 5794 - Val samples 5794
[34mGet model[0m
{'setup': 'scan', 'criterion': 'scan', 'criterion_kwargs': {'entropy_weight': 5.0}, 'update_cluster_head_only': False, 'num_heads': 1, 'backbone': 'resnet50', 'train_db_name': 'cub', 'val_db_name': 'cub', 'num_classes': 200, 'num_neighbors': 20, 'augmentation_strategy': 'cub', 'augmentation_kwargs': {'resize': 256, 'crop_size': 224, 'normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}, 'num_strong_augs': 4, 'cutout_kwargs': {'n_holes': 1, 'length': 16, 'random': True}}, 'transformation_kwargs': {'resize': 256, 'crop_size': 224, 'normalize': {'mean': [0.485, 0.456, 0.406], 'std': [0.229, 0.224, 0.225]}}, 'optimizer': 'adam', 'optimizer_kwargs': {'lr': 0.0001, 'weight_decay': 0.0001}, 'epochs': 50, 'batch_size': 128, 'num_workers': 8, 'scheduler': 'constant', 'pretext_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/pretext', 'pretext_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/pretext/checkpoint.pth.tar', 'pretext_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/pretext/model.pth.tar', 'topk_neighbors_train_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/pretext/topk-train-neighbors.npy', 'topk_neighbors_val_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/pretext/topk-val-neighbors.npy', 'topk_strangers_train_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/pretext/topk-train-strangers.npy', 'topk_strangers_val_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/pretext/topk-val-strangers.npy', 'centroid_indices_train_path': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/pretext/centroid-train-indices.npy', 'scan_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scan', 'scan_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scan/checkpoint.pth.tar', 'scan_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scan/model.pth.tar', 'scanf_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scanf', 'scanf_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scanf/checkpoint.pth.tar', 'scanf_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scanf/model.pth.tar', 'scanc_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scanc', 'scanc_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scanc/checkpoint.pth.tar', 'scanc_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scanc/model.pth.tar', 'selflabel_dir': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/selflabel', 'selflabel_checkpoint': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/selflabel/checkpoint.pth.tar', 'selflabel_model': '/cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/selflabel/model.pth.tar'}
loading pretrained
ClusteringModel(
  (backbone): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): Bottleneck(
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): Sequential(
      (0): Bottleneck(
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): Sequential(
      (0): Bottleneck(
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): Sequential(
      (0): Bottleneck(
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
    (fc): Linear(in_features=2048, out_features=1000, bias=True)
  )
  (cluster_head): ModuleList(
    (0): Linear(in_features=2048, out_features=200, bias=True)
  )
)
[34mGet optimizer[0m
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.0001
    weight_decay: 0.0001
)
[34mGet loss[0m
SCANLoss(
  (softmax): Softmax(dim=1)
  (bce): BCELoss()
)
[34mNo checkpoint file at /cfarhomes/mgwillia/scan-adaptation/Unsupervised-Classification/tutorial/cub/scan/checkpoint.pth.tar[0m
[34mStarting main loop[0m
[33mEpoch 1/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [0][ 0/45]	Total Loss -2.1183e+01 (-2.1183e+01)	Consistency Loss 5.2885e+00 (5.2885e+00)	Entropy 5.2943e+00 (5.2943e+00)
Epoch: [0][25/45]	Total Loss -2.1195e+01 (-2.1193e+01)	Consistency Loss 5.2956e+00 (5.2952e+00)	Entropy 5.2982e+00 (5.2977e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.297796249389648, 'consistency': 5.2776665687561035, 'total_loss': -0.020129680633544922}], 'lowest_loss_head': 0, 'lowest_loss': -0.020129680633544922}
New lowest loss on validation set: 10000.0000 -> -0.0201
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.08008284432171212, 'ARI': 0.01649294419911868, 'NMI': 0.3438663188521123, 'ACC Top-5': 0.14566793234380393, 'hungarian_match': [(0, 79), (1, 96), (2, 3), (3, 174), (4, 127), (5, 46), (6, 105), (7, 123), (8, 19), (9, 12), (10, 195), (11, 148), (12, 37), (13, 15), (14, 21), (15, 115), (16, 171), (17, 114), (18, 100), (19, 143), (20, 52), (21, 0), (22, 82), (23, 85), (24, 64), (25, 98), (26, 16), (27, 110), (28, 2), (29, 152), (30, 161), (31, 125), (32, 11), (33, 4), (34, 5), (35, 34), (36, 172), (37, 165), (38, 128), (39, 144), (40, 27), (41, 93), (42, 138), (43, 108), (44, 55), (45, 183), (46, 44), (47, 117), (48, 43), (49, 10), (50, 84), (51, 188), (52, 181), (53, 76), (54, 33), (55, 89), (56, 170), (57, 177), (58, 163), (59, 185), (60, 155), (61, 97), (62, 149), (63, 159), (64, 38), (65, 30), (66, 6), (67, 9), (68, 169), (69, 8), (70, 162), (71, 63), (72, 168), (73, 81), (74, 32), (75, 69), (76, 184), (77, 17), (78, 72), (79, 56), (80, 160), (81, 116), (82, 164), (83, 191), (84, 60), (85, 166), (86, 102), (87, 62), (88, 61), (89, 182), (90, 94), (91, 28), (92, 111), (93, 178), (94, 57), (95, 129), (96, 118), (97, 1), (98, 77), (99, 113), (100, 167), (101, 36), (102, 20), (103, 175), (104, 146), (105, 140), (106, 40), (107, 54), (108, 18), (109, 41), (110, 196), (111, 109), (112, 136), (113, 25), (114, 31), (115, 186), (116, 42), (117, 106), (118, 137), (119, 65), (120, 133), (121, 142), (122, 35), (123, 154), (124, 23), (125, 83), (126, 112), (127, 95), (128, 68), (129, 51), (130, 122), (131, 50), (132, 86), (133, 189), (134, 45), (135, 104), (136, 187), (137, 120), (138, 198), (139, 135), (140, 141), (141, 49), (142, 58), (143, 74), (144, 124), (145, 48), (146, 71), (147, 92), (148, 53), (149, 173), (150, 39), (151, 66), (152, 24), (153, 119), (154, 193), (155, 131), (156, 75), (157, 73), (158, 7), (159, 150), (160, 99), (161, 190), (162, 107), (163, 156), (164, 87), (165, 134), (166, 22), (167, 126), (168, 103), (169, 26), (170, 121), (171, 90), (172, 47), (173, 14), (174, 29), (175, 101), (176, 153), (177, 194), (178, 70), (179, 132), (180, 192), (181, 91), (182, 197), (183, 176), (184, 78), (185, 13), (186, 147), (187, 199), (188, 157), (189, 130), (190, 158), (191, 139), (192, 151), (193, 179), (194, 80), (195, 67), (196, 59), (197, 88), (198, 180), (199, 145)]}
Checkpoint ...
[33mEpoch 2/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [1][ 0/45]	Total Loss -2.1200e+01 (-2.1200e+01)	Consistency Loss 5.2913e+00 (5.2913e+00)	Entropy 5.2983e+00 (5.2983e+00)
Epoch: [1][25/45]	Total Loss -2.1270e+01 (-2.1218e+01)	Consistency Loss 5.2156e+00 (5.2723e+00)	Entropy 5.2970e+00 (5.2981e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.2612385749816895, 'consistency': 4.690430641174316, 'total_loss': -0.570807933807373}], 'lowest_loss_head': 0, 'lowest_loss': -0.570807933807373}
New lowest loss on validation set: -0.0201 -> -0.5708
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.06558508802209181, 'ARI': 0.01908832285910446, 'NMI': 0.3142158606473992, 'ACC Top-5': 0.12530203658957542, 'hungarian_match': [(0, 79), (1, 155), (2, 47), (3, 34), (4, 52), (5, 67), (6, 54), (7, 2), (8, 13), (9, 156), (10, 57), (11, 4), (12, 37), (13, 194), (14, 189), (15, 115), (16, 112), (17, 46), (18, 62), (19, 10), (20, 30), (21, 7), (22, 24), (23, 180), (24, 147), (25, 73), (26, 137), (27, 133), (28, 26), (29, 130), (30, 81), (31, 126), (32, 12), (33, 14), (34, 15), (35, 118), (36, 16), (37, 169), (38, 17), (39, 185), (40, 190), (41, 18), (42, 19), (43, 179), (44, 20), (45, 100), (46, 21), (47, 1), (48, 71), (49, 22), (50, 183), (51, 33), (52, 96), (53, 25), (54, 191), (55, 158), (56, 59), (57, 90), (58, 68), (59, 5), (60, 123), (61, 159), (62, 83), (63, 163), (64, 45), (65, 187), (66, 6), (67, 9), (68, 152), (69, 23), (70, 182), (71, 35), (72, 39), (73, 129), (74, 32), (75, 95), (76, 40), (77, 41), (78, 42), (79, 150), (80, 38), (81, 43), (82, 164), (83, 128), (84, 28), (85, 49), (86, 110), (87, 78), (88, 195), (89, 82), (90, 175), (91, 84), (92, 50), (93, 136), (94, 107), (95, 72), (96, 121), (97, 66), (98, 51), (99, 53), (100, 55), (101, 36), (102, 56), (103, 149), (104, 0), (105, 116), (106, 29), (107, 138), (108, 76), (109, 64), (110, 11), (111, 103), (112, 134), (113, 105), (114, 70), (115, 166), (116, 75), (117, 92), (118, 199), (119, 61), (120, 98), (121, 63), (122, 69), (123, 77), (124, 89), (125, 162), (126, 122), (127, 184), (128, 160), (129, 87), (130, 88), (131, 85), (132, 65), (133, 111), (134, 135), (135, 186), (136, 113), (137, 131), (138, 94), (139, 173), (140, 143), (141, 153), (142, 148), (143, 139), (144, 124), (145, 8), (146, 141), (147, 144), (148, 119), (149, 197), (150, 168), (151, 99), (152, 101), (153, 198), (154, 193), (155, 114), (156, 97), (157, 171), (158, 120), (159, 125), (160, 60), (161, 27), (162, 48), (163, 181), (164, 106), (165, 157), (166, 151), (167, 172), (168, 104), (169, 146), (170, 127), (171, 145), (172, 161), (173, 58), (174, 140), (175, 108), (176, 102), (177, 154), (178, 142), (179, 3), (180, 192), (181, 91), (182, 93), (183, 165), (184, 74), (185, 167), (186, 109), (187, 170), (188, 31), (189, 117), (190, 174), (191, 176), (192, 177), (193, 132), (194, 80), (195, 178), (196, 86), (197, 196), (198, 188), (199, 44)]}
Checkpoint ...
[33mEpoch 3/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [2][ 0/45]	Total Loss -2.1407e+01 (-2.1407e+01)	Consistency Loss 5.0660e+00 (5.0660e+00)	Entropy 5.2946e+00 (5.2946e+00)
Epoch: [2][25/45]	Total Loss -2.1761e+01 (-2.1562e+01)	Consistency Loss 4.6600e+00 (4.9009e+00)	Entropy 5.2842e+00 (5.2925e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.269717216491699, 'consistency': 4.123378753662109, 'total_loss': -1.1463384628295898}], 'lowest_loss_head': 0, 'lowest_loss': -1.1463384628295898}
New lowest loss on validation set: -0.5708 -> -1.1463
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.08923023817742493, 'ARI': 0.029018736780366938, 'NMI': 0.38453598187648225, 'ACC Top-5': 0.1679323438039351, 'hungarian_match': [(0, 27), (1, 35), (2, 121), (3, 117), (4, 21), (5, 170), (6, 24), (7, 34), (8, 105), (9, 140), (10, 99), (11, 96), (12, 195), (13, 162), (14, 95), (15, 160), (16, 8), (17, 93), (18, 62), (19, 70), (20, 63), (21, 157), (22, 75), (23, 116), (24, 26), (25, 98), (26, 110), (27, 40), (28, 48), (29, 36), (30, 164), (31, 184), (32, 7), (33, 193), (34, 33), (35, 54), (36, 127), (37, 32), (38, 169), (39, 46), (40, 131), (41, 14), (42, 4), (43, 134), (44, 5), (45, 2), (46, 38), (47, 66), (48, 0), (49, 167), (50, 149), (51, 188), (52, 138), (53, 114), (54, 189), (55, 49), (56, 112), (57, 18), (58, 137), (59, 94), (60, 199), (61, 77), (62, 144), (63, 154), (64, 171), (65, 37), (66, 183), (67, 83), (68, 152), (69, 20), (70, 19), (71, 88), (72, 47), (73, 12), (74, 151), (75, 3), (76, 174), (77, 181), (78, 78), (79, 191), (80, 163), (81, 73), (82, 168), (83, 130), (84, 60), (85, 15), (86, 101), (87, 190), (88, 135), (89, 119), (90, 196), (91, 84), (92, 16), (93, 182), (94, 57), (95, 106), (96, 74), (97, 90), (98, 192), (99, 45), (100, 72), (101, 17), (102, 39), (103, 173), (104, 22), (105, 97), (106, 136), (107, 139), (108, 31), (109, 177), (110, 123), (111, 103), (112, 107), (113, 120), (114, 79), (115, 11), (116, 128), (117, 92), (118, 142), (119, 65), (120, 166), (121, 50), (122, 51), (123, 52), (124, 44), (125, 56), (126, 122), (127, 194), (128, 102), (129, 150), (130, 82), (131, 86), (132, 58), (133, 148), (134, 113), (135, 91), (136, 186), (137, 129), (138, 64), (139, 118), (140, 9), (141, 76), (142, 197), (143, 69), (144, 153), (145, 29), (146, 141), (147, 59), (148, 68), (149, 133), (150, 42), (151, 23), (152, 67), (153, 81), (154, 198), (155, 132), (156, 185), (157, 147), (158, 85), (159, 80), (160, 61), (161, 111), (162, 28), (163, 87), (164, 25), (165, 115), (166, 6), (167, 172), (168, 124), (169, 145), (170, 125), (171, 71), (172, 161), (173, 30), (174, 10), (175, 41), (176, 156), (177, 175), (178, 43), (179, 187), (180, 53), (181, 180), (182, 178), (183, 13), (184, 155), (185, 176), (186, 1), (187, 159), (188, 158), (189, 109), (190, 165), (191, 55), (192, 143), (193, 179), (194, 126), (195, 108), (196, 100), (197, 89), (198, 104), (199, 146)]}
Checkpoint ...
[33mEpoch 4/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [3][ 0/45]	Total Loss -2.1933e+01 (-2.1933e+01)	Consistency Loss 4.5371e+00 (4.5371e+00)	Entropy 5.2940e+00 (5.2940e+00)
Epoch: [3][25/45]	Total Loss -2.2051e+01 (-2.1985e+01)	Consistency Loss 4.3775e+00 (4.4687e+00)	Entropy 5.2856e+00 (5.2907e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.27098274230957, 'consistency': 3.7769525051116943, 'total_loss': -1.494030237197876}], 'lowest_loss_head': 0, 'lowest_loss': -1.494030237197876}
New lowest loss on validation set: -1.1463 -> -1.4940
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.10182947877114257, 'ARI': 0.03045711122788189, 'NMI': 0.40926328654565686, 'ACC Top-5': 0.19382119433897135, 'hungarian_match': [(0, 115), (1, 35), (2, 159), (3, 102), (4, 196), (5, 129), (6, 56), (7, 165), (8, 190), (9, 170), (10, 57), (11, 151), (12, 81), (13, 173), (14, 30), (15, 78), (16, 12), (17, 72), (18, 143), (19, 70), (20, 105), (21, 67), (22, 24), (23, 136), (24, 119), (25, 98), (26, 76), (27, 26), (28, 13), (29, 36), (30, 179), (31, 96), (32, 54), (33, 154), (34, 33), (35, 84), (36, 148), (37, 31), (38, 188), (39, 137), (40, 197), (41, 185), (42, 90), (43, 117), (44, 74), (45, 2), (46, 164), (47, 4), (48, 44), (49, 3), (50, 174), (51, 112), (52, 53), (53, 20), (54, 187), (55, 49), (56, 145), (57, 73), (58, 110), (59, 21), (60, 168), (61, 111), (62, 142), (63, 38), (64, 171), (65, 32), (66, 7), (67, 133), (68, 16), (69, 113), (70, 19), (71, 88), (72, 47), (73, 149), (74, 95), (75, 161), (76, 166), (77, 15), (78, 140), (79, 158), (80, 163), (81, 17), (82, 157), (83, 120), (84, 60), (85, 191), (86, 138), (87, 27), (88, 29), (89, 79), (90, 150), (91, 8), (92, 194), (93, 182), (94, 85), (95, 28), (96, 189), (97, 160), (98, 34), (99, 100), (100, 152), (101, 101), (102, 69), (103, 14), (104, 0), (105, 135), (106, 23), (107, 139), (108, 94), (109, 175), (110, 37), (111, 103), (112, 107), (113, 93), (114, 106), (115, 42), (116, 66), (117, 92), (118, 64), (119, 62), (120, 1), (121, 99), (122, 46), (123, 52), (124, 65), (125, 114), (126, 122), (127, 11), (128, 167), (129, 128), (130, 82), (131, 51), (132, 58), (133, 126), (134, 63), (135, 91), (136, 186), (137, 183), (138, 156), (139, 55), (140, 184), (141, 195), (142, 75), (143, 116), (144, 155), (145, 39), (146, 87), (147, 59), (148, 199), (149, 83), (150, 127), (151, 50), (152, 77), (153, 18), (154, 131), (155, 48), (156, 176), (157, 153), (158, 45), (159, 177), (160, 61), (161, 169), (162, 10), (163, 9), (164, 25), (165, 68), (166, 6), (167, 172), (168, 123), (169, 198), (170, 125), (171, 71), (172, 118), (173, 192), (174, 5), (175, 41), (176, 40), (177, 22), (178, 43), (179, 162), (180, 180), (181, 193), (182, 121), (183, 181), (184, 147), (185, 178), (186, 146), (187, 124), (188, 97), (189, 109), (190, 130), (191, 134), (192, 141), (193, 132), (194, 80), (195, 108), (196, 86), (197, 89), (198, 104), (199, 144)]}
Checkpoint ...
[33mEpoch 5/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [4][ 0/45]	Total Loss -2.2211e+01 (-2.2211e+01)	Consistency Loss 4.2307e+00 (4.2307e+00)	Entropy 5.2883e+00 (5.2883e+00)
Epoch: [4][25/45]	Total Loss -2.2256e+01 (-2.2208e+01)	Consistency Loss 4.1629e+00 (4.2085e+00)	Entropy 5.2839e+00 (5.2834e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.278012275695801, 'consistency': 3.5782620906829834, 'total_loss': -1.6997501850128174}], 'lowest_loss_head': 0, 'lowest_loss': -1.6997501850128174}
New lowest loss on validation set: -1.4940 -> -1.6998
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.1111494649637556, 'ARI': 0.03713377074749921, 'NMI': 0.42783167506388936, 'ACC Top-5': 0.21988263721090784, 'hungarian_match': [(0, 193), (1, 35), (2, 159), (3, 102), (4, 162), (5, 84), (6, 53), (7, 94), (8, 6), (9, 33), (10, 86), (11, 46), (12, 196), (13, 168), (14, 79), (15, 78), (16, 12), (17, 72), (18, 62), (19, 132), (20, 105), (21, 67), (22, 24), (23, 2), (24, 147), (25, 73), (26, 76), (27, 29), (28, 175), (29, 154), (30, 180), (31, 96), (32, 54), (33, 123), (34, 124), (35, 48), (36, 119), (37, 32), (38, 163), (39, 111), (40, 141), (41, 77), (42, 114), (43, 13), (44, 97), (45, 116), (46, 150), (47, 4), (48, 0), (49, 164), (50, 183), (51, 122), (52, 173), (53, 20), (54, 40), (55, 50), (56, 5), (57, 165), (58, 110), (59, 121), (60, 127), (61, 176), (62, 142), (63, 155), (64, 30), (65, 37), (66, 7), (67, 70), (68, 16), (69, 113), (70, 11), (71, 100), (72, 145), (73, 82), (74, 151), (75, 177), (76, 153), (77, 38), (78, 81), (79, 129), (80, 115), (81, 17), (82, 157), (83, 128), (84, 107), (85, 104), (86, 137), (87, 189), (88, 190), (89, 187), (90, 174), (91, 25), (92, 192), (93, 23), (94, 85), (95, 28), (96, 178), (97, 93), (98, 131), (99, 88), (100, 166), (101, 36), (102, 69), (103, 10), (104, 57), (105, 135), (106, 136), (107, 139), (108, 15), (109, 14), (110, 101), (111, 103), (112, 146), (113, 188), (114, 186), (115, 198), (116, 66), (117, 92), (118, 1), (119, 63), (120, 197), (121, 89), (122, 182), (123, 95), (124, 65), (125, 9), (126, 170), (127, 87), (128, 171), (129, 27), (130, 133), (131, 51), (132, 60), (133, 126), (134, 194), (135, 91), (136, 19), (137, 149), (138, 156), (139, 118), (140, 64), (141, 90), (142, 74), (143, 98), (144, 18), (145, 26), (146, 120), (147, 58), (148, 199), (149, 44), (150, 191), (151, 75), (152, 39), (153, 55), (154, 117), (155, 106), (156, 185), (157, 167), (158, 49), (159, 158), (160, 61), (161, 34), (162, 8), (163, 42), (164, 3), (165, 68), (166, 22), (167, 172), (168, 112), (169, 99), (170, 125), (171, 71), (172, 152), (173, 56), (174, 52), (175, 41), (176, 31), (177, 80), (178, 43), (179, 47), (180, 138), (181, 169), (182, 148), (183, 181), (184, 195), (185, 161), (186, 83), (187, 143), (188, 160), (189, 109), (190, 184), (191, 134), (192, 140), (193, 179), (194, 130), (195, 108), (196, 59), (197, 45), (198, 21), (199, 144)]}
Checkpoint ...
[33mEpoch 6/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [5][ 0/45]	Total Loss -2.2327e+01 (-2.2327e+01)	Consistency Loss 4.0747e+00 (4.0747e+00)	Entropy 5.2804e+00 (5.2804e+00)
Epoch: [5][25/45]	Total Loss -2.2462e+01 (-2.2308e+01)	Consistency Loss 3.9177e+00 (4.0857e+00)	Entropy 5.2759e+00 (5.2788e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.273902893066406, 'consistency': 3.4056341648101807, 'total_loss': -1.8682687282562256}], 'lowest_loss_head': 0, 'lowest_loss': -1.8682687282562256}
New lowest loss on validation set: -1.6998 -> -1.8683
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.11632723507076285, 'ARI': 0.03878790226015511, 'NMI': 0.43834410418405106, 'ACC Top-5': 0.23041076976182256, 'hungarian_match': [(0, 187), (1, 80), (2, 31), (3, 13), (4, 163), (5, 194), (6, 53), (7, 185), (8, 6), (9, 148), (10, 86), (11, 46), (12, 77), (13, 162), (14, 95), (15, 199), (16, 12), (17, 93), (18, 143), (19, 145), (20, 44), (21, 9), (22, 24), (23, 23), (24, 132), (25, 183), (26, 76), (27, 26), (28, 173), (29, 42), (30, 171), (31, 96), (32, 170), (33, 123), (34, 33), (35, 48), (36, 150), (37, 32), (38, 195), (39, 137), (40, 197), (41, 55), (42, 128), (43, 108), (44, 102), (45, 2), (46, 178), (47, 4), (48, 0), (49, 34), (50, 109), (51, 122), (52, 138), (53, 20), (54, 78), (55, 50), (56, 30), (57, 14), (58, 110), (59, 121), (60, 168), (61, 176), (62, 142), (63, 166), (64, 179), (65, 37), (66, 75), (67, 97), (68, 16), (69, 113), (70, 116), (71, 52), (72, 133), (73, 112), (74, 151), (75, 177), (76, 118), (77, 159), (78, 98), (79, 180), (80, 115), (81, 17), (82, 38), (83, 130), (84, 29), (85, 104), (86, 73), (87, 189), (88, 99), (89, 3), (90, 174), (91, 25), (92, 193), (93, 7), (94, 85), (95, 18), (96, 51), (97, 165), (98, 131), (99, 1), (100, 74), (101, 36), (102, 69), (103, 129), (104, 57), (105, 135), (106, 136), (107, 41), (108, 54), (109, 124), (110, 101), (111, 103), (112, 10), (113, 190), (114, 186), (115, 11), (116, 61), (117, 92), (118, 43), (119, 62), (120, 198), (121, 88), (122, 184), (123, 79), (124, 65), (125, 114), (126, 158), (127, 87), (128, 169), (129, 182), (130, 8), (131, 49), (132, 63), (133, 126), (134, 82), (135, 91), (136, 127), (137, 149), (138, 172), (139, 35), (140, 64), (141, 90), (142, 146), (143, 188), (144, 155), (145, 70), (146, 147), (147, 58), (148, 160), (149, 67), (150, 196), (151, 66), (152, 39), (153, 81), (154, 68), (155, 107), (156, 139), (157, 167), (158, 45), (159, 175), (160, 60), (161, 94), (162, 106), (163, 154), (164, 28), (165, 192), (166, 22), (167, 15), (168, 117), (169, 100), (170, 125), (171, 71), (172, 152), (173, 56), (174, 105), (175, 19), (176, 40), (177, 164), (178, 141), (179, 47), (180, 157), (181, 5), (182, 27), (183, 181), (184, 72), (185, 161), (186, 144), (187, 119), (188, 191), (189, 84), (190, 134), (191, 111), (192, 140), (193, 156), (194, 120), (195, 153), (196, 59), (197, 89), (198, 21), (199, 83)]}
Checkpoint ...
[33mEpoch 7/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [6][ 0/45]	Total Loss -2.2334e+01 (-2.2334e+01)	Consistency Loss 4.0128e+00 (4.0128e+00)	Entropy 5.2693e+00 (5.2693e+00)
Epoch: [6][25/45]	Total Loss -2.2532e+01 (-2.2401e+01)	Consistency Loss 3.8679e+00 (3.9693e+00)	Entropy 5.2799e+00 (5.2740e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.270526885986328, 'consistency': 3.2922122478485107, 'total_loss': -1.9783146381378174}], 'lowest_loss_head': 0, 'lowest_loss': -1.9783146381378174}
New lowest loss on validation set: -1.8683 -> -1.9783
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.11822575077666551, 'ARI': 0.04362497387728871, 'NMI': 0.4465975209020009, 'ACC Top-5': 0.2312737314463238, 'hungarian_match': [(0, 193), (1, 80), (2, 32), (3, 170), (4, 164), (5, 117), (6, 33), (7, 185), (8, 20), (9, 158), (10, 88), (11, 102), (12, 77), (13, 162), (14, 95), (15, 181), (16, 12), (17, 47), (18, 140), (19, 186), (20, 44), (21, 184), (22, 24), (23, 23), (24, 51), (25, 183), (26, 76), (27, 48), (28, 175), (29, 173), (30, 171), (31, 96), (32, 22), (33, 123), (34, 128), (35, 9), (36, 153), (37, 150), (38, 194), (39, 137), (40, 197), (41, 195), (42, 87), (43, 108), (44, 134), (45, 2), (46, 169), (47, 6), (48, 71), (49, 72), (50, 116), (51, 122), (52, 30), (53, 148), (54, 78), (55, 50), (56, 1), (57, 69), (58, 110), (59, 121), (60, 168), (61, 176), (62, 142), (63, 155), (64, 31), (65, 199), (66, 86), (67, 97), (68, 16), (69, 113), (70, 14), (71, 100), (72, 79), (73, 112), (74, 53), (75, 166), (76, 192), (77, 174), (78, 13), (79, 115), (80, 34), (81, 17), (82, 157), (83, 147), (84, 133), (85, 104), (86, 38), (87, 189), (88, 8), (89, 3), (90, 94), (91, 109), (92, 188), (93, 75), (94, 85), (95, 25), (96, 105), (97, 93), (98, 131), (99, 49), (100, 74), (101, 36), (102, 190), (103, 10), (104, 57), (105, 135), (106, 136), (107, 139), (108, 54), (109, 46), (110, 37), (111, 103), (112, 145), (113, 191), (114, 187), (115, 198), (116, 27), (117, 92), (118, 43), (119, 62), (120, 132), (121, 63), (122, 11), (123, 196), (124, 65), (125, 114), (126, 129), (127, 161), (128, 167), (129, 182), (130, 26), (131, 52), (132, 60), (133, 126), (134, 82), (135, 91), (136, 73), (137, 149), (138, 156), (139, 35), (140, 152), (141, 120), (142, 146), (143, 98), (144, 18), (145, 29), (146, 144), (147, 58), (148, 68), (149, 67), (150, 127), (151, 141), (152, 39), (153, 81), (154, 178), (155, 107), (156, 90), (157, 180), (158, 45), (159, 163), (160, 61), (161, 55), (162, 28), (163, 64), (164, 106), (165, 66), (166, 4), (167, 165), (168, 124), (169, 99), (170, 125), (171, 0), (172, 159), (173, 56), (174, 7), (175, 19), (176, 111), (177, 5), (178, 143), (179, 151), (180, 138), (181, 42), (182, 119), (183, 172), (184, 177), (185, 15), (186, 70), (187, 118), (188, 160), (189, 84), (190, 40), (191, 101), (192, 41), (193, 179), (194, 130), (195, 154), (196, 59), (197, 89), (198, 21), (199, 83)]}
Checkpoint ...
[33mEpoch 8/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [7][ 0/45]	Total Loss -2.2440e+01 (-2.2440e+01)	Consistency Loss 3.8915e+00 (3.8915e+00)	Entropy 5.2662e+00 (5.2662e+00)
Epoch: [7][25/45]	Total Loss -2.2593e+01 (-2.2491e+01)	Consistency Loss 3.7523e+00 (3.8733e+00)	Entropy 5.2691e+00 (5.2729e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.276186466217041, 'consistency': 3.2329070568084717, 'total_loss': -2.0432794094085693}], 'lowest_loss_head': 0, 'lowest_loss': -2.0432794094085693}
New lowest loss on validation set: -1.9783 -> -2.0433
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.118570935450466, 'ARI': 0.04228585188125209, 'NMI': 0.4499232090207768, 'ACC Top-5': 0.2416292716603383, 'hungarian_match': [(0, 27), (1, 80), (2, 32), (3, 13), (4, 196), (5, 117), (6, 197), (7, 94), (8, 105), (9, 158), (10, 88), (11, 102), (12, 77), (13, 168), (14, 53), (15, 82), (16, 12), (17, 93), (18, 140), (19, 144), (20, 44), (21, 9), (22, 24), (23, 23), (24, 63), (25, 183), (26, 76), (27, 29), (28, 162), (29, 175), (30, 171), (31, 47), (32, 22), (33, 123), (34, 17), (35, 132), (36, 159), (37, 56), (38, 148), (39, 137), (40, 131), (41, 134), (42, 128), (43, 154), (44, 74), (45, 2), (46, 172), (47, 4), (48, 0), (49, 165), (50, 121), (51, 122), (52, 124), (53, 116), (54, 78), (55, 50), (56, 33), (57, 38), (58, 110), (59, 21), (60, 90), (61, 176), (62, 142), (63, 166), (64, 156), (65, 199), (66, 92), (67, 46), (68, 16), (69, 113), (70, 14), (71, 100), (72, 177), (73, 112), (74, 81), (75, 173), (76, 54), (77, 69), (78, 20), (79, 180), (80, 115), (81, 30), (82, 174), (83, 170), (84, 107), (85, 104), (86, 34), (87, 189), (88, 48), (89, 3), (90, 155), (91, 25), (92, 31), (93, 182), (94, 52), (95, 18), (96, 120), (97, 167), (98, 136), (99, 85), (100, 151), (101, 36), (102, 67), (103, 152), (104, 57), (105, 135), (106, 147), (107, 139), (108, 97), (109, 184), (110, 37), (111, 103), (112, 145), (113, 188), (114, 187), (115, 79), (116, 7), (117, 28), (118, 43), (119, 62), (120, 73), (121, 86), (122, 64), (123, 150), (124, 59), (125, 114), (126, 118), (127, 157), (128, 178), (129, 98), (130, 26), (131, 51), (132, 60), (133, 126), (134, 190), (135, 91), (136, 11), (137, 149), (138, 164), (139, 35), (140, 198), (141, 129), (142, 146), (143, 194), (144, 153), (145, 71), (146, 109), (147, 58), (148, 68), (149, 181), (150, 127), (151, 1), (152, 39), (153, 185), (154, 42), (155, 106), (156, 75), (157, 192), (158, 45), (159, 163), (160, 61), (161, 55), (162, 8), (163, 49), (164, 133), (165, 66), (166, 6), (167, 15), (168, 193), (169, 99), (170, 125), (171, 70), (172, 41), (173, 160), (174, 10), (175, 19), (176, 40), (177, 5), (178, 141), (179, 96), (180, 138), (181, 195), (182, 130), (183, 95), (184, 72), (185, 161), (186, 143), (187, 119), (188, 191), (189, 84), (190, 111), (191, 101), (192, 169), (193, 179), (194, 87), (195, 108), (196, 65), (197, 89), (198, 186), (199, 83)]}
Checkpoint ...
[33mEpoch 9/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [8][ 0/45]	Total Loss -2.2618e+01 (-2.2618e+01)	Consistency Loss 3.7341e+00 (3.7341e+00)	Entropy 5.2705e+00 (5.2705e+00)
Epoch: [8][25/45]	Total Loss -2.2386e+01 (-2.2528e+01)	Consistency Loss 3.9464e+00 (3.8201e+00)	Entropy 5.2665e+00 (5.2697e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.279246807098389, 'consistency': 3.1641345024108887, 'total_loss': -2.1151123046875}], 'lowest_loss_head': 0, 'lowest_loss': -2.1151123046875}
New lowest loss on validation set: -2.0433 -> -2.1151
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.12081463583016915, 'ARI': 0.0438769110633076, 'NMI': 0.4541259929956569, 'ACC Top-5': 0.2509492578529513, 'hungarian_match': [(0, 35), (1, 80), (2, 31), (3, 15), (4, 196), (5, 33), (6, 105), (7, 94), (8, 190), (9, 158), (10, 88), (11, 151), (12, 77), (13, 162), (14, 37), (15, 181), (16, 12), (17, 93), (18, 140), (19, 62), (20, 44), (21, 9), (22, 24), (23, 23), (24, 124), (25, 183), (26, 76), (27, 29), (28, 175), (29, 36), (30, 171), (31, 47), (32, 22), (33, 123), (34, 17), (35, 128), (36, 168), (37, 32), (38, 157), (39, 137), (40, 134), (41, 145), (42, 120), (43, 108), (44, 34), (45, 84), (46, 164), (47, 66), (48, 0), (49, 46), (50, 130), (51, 122), (52, 53), (53, 20), (54, 78), (55, 50), (56, 127), (57, 38), (58, 110), (59, 121), (60, 160), (61, 176), (62, 142), (63, 166), (64, 156), (65, 199), (66, 131), (67, 174), (68, 16), (69, 103), (70, 90), (71, 100), (72, 159), (73, 112), (74, 74), (75, 180), (76, 14), (77, 195), (78, 81), (79, 115), (80, 170), (81, 98), (82, 165), (83, 147), (84, 106), (85, 104), (86, 73), (87, 189), (88, 107), (89, 3), (90, 172), (91, 25), (92, 26), (93, 4), (94, 85), (95, 28), (96, 63), (97, 167), (98, 75), (99, 7), (100, 150), (101, 42), (102, 69), (103, 154), (104, 57), (105, 135), (106, 136), (107, 139), (108, 97), (109, 188), (110, 113), (111, 119), (112, 10), (113, 27), (114, 187), (115, 117), (116, 83), (117, 92), (118, 43), (119, 59), (120, 197), (121, 86), (122, 155), (123, 184), (124, 64), (125, 96), (126, 118), (127, 161), (128, 169), (129, 182), (130, 13), (131, 51), (132, 60), (133, 126), (134, 82), (135, 5), (136, 11), (137, 149), (138, 19), (139, 194), (140, 2), (141, 129), (142, 146), (143, 132), (144, 18), (145, 141), (146, 109), (147, 58), (148, 68), (149, 67), (150, 192), (151, 1), (152, 39), (153, 179), (154, 55), (155, 48), (156, 177), (157, 198), (158, 89), (159, 163), (160, 61), (161, 173), (162, 8), (163, 49), (164, 133), (165, 152), (166, 91), (167, 102), (168, 116), (169, 99), (170, 125), (171, 71), (172, 41), (173, 56), (174, 52), (175, 185), (176, 40), (177, 6), (178, 70), (179, 95), (180, 138), (181, 193), (182, 148), (183, 54), (184, 72), (185, 30), (186, 143), (187, 114), (188, 191), (189, 186), (190, 111), (191, 101), (192, 79), (193, 153), (194, 87), (195, 178), (196, 65), (197, 45), (198, 21), (199, 144)]}
Checkpoint ...
[33mEpoch 10/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [9][ 0/45]	Total Loss -2.2596e+01 (-2.2596e+01)	Consistency Loss 3.7257e+00 (3.7257e+00)	Entropy 5.2643e+00 (5.2643e+00)
Epoch: [9][25/45]	Total Loss -2.2608e+01 (-2.2554e+01)	Consistency Loss 3.7432e+00 (3.7737e+00)	Entropy 5.2702e+00 (5.2655e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.278355121612549, 'consistency': 3.085887908935547, 'total_loss': -2.192467212677002}], 'lowest_loss_head': 0, 'lowest_loss': -2.192467212677002}
New lowest loss on validation set: -2.1151 -> -2.1925
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.12720055229547808, 'ARI': 0.04534265587643857, 'NMI': 0.45411272419071935, 'ACC Top-5': 0.2542285122540559, 'hungarian_match': [(0, 27), (1, 80), (2, 121), (3, 13), (4, 168), (5, 170), (6, 136), (7, 94), (8, 190), (9, 158), (10, 88), (11, 40), (12, 77), (13, 162), (14, 167), (15, 181), (16, 12), (17, 72), (18, 140), (19, 62), (20, 44), (21, 107), (22, 24), (23, 105), (24, 114), (25, 183), (26, 76), (27, 29), (28, 175), (29, 42), (30, 171), (31, 47), (32, 22), (33, 123), (34, 17), (35, 9), (36, 150), (37, 32), (38, 194), (39, 137), (40, 6), (41, 164), (42, 128), (43, 97), (44, 135), (45, 2), (46, 152), (47, 4), (48, 0), (49, 172), (50, 120), (51, 122), (52, 34), (53, 20), (54, 11), (55, 49), (56, 127), (57, 38), (58, 110), (59, 33), (60, 165), (61, 176), (62, 142), (63, 166), (64, 156), (65, 199), (66, 7), (67, 174), (68, 16), (69, 103), (70, 78), (71, 52), (72, 108), (73, 112), (74, 169), (75, 180), (76, 14), (77, 197), (78, 81), (79, 115), (80, 117), (81, 193), (82, 155), (83, 116), (84, 133), (85, 104), (86, 102), (87, 189), (88, 26), (89, 3), (90, 93), (91, 10), (92, 31), (93, 75), (94, 85), (95, 28), (96, 151), (97, 161), (98, 131), (99, 50), (100, 74), (101, 36), (102, 69), (103, 138), (104, 57), (105, 46), (106, 147), (107, 54), (108, 159), (109, 64), (110, 37), (111, 119), (112, 145), (113, 191), (114, 187), (115, 79), (116, 186), (117, 92), (118, 43), (119, 100), (120, 98), (121, 86), (122, 53), (123, 134), (124, 65), (125, 188), (126, 129), (127, 173), (128, 179), (129, 182), (130, 48), (131, 51), (132, 60), (133, 126), (134, 82), (135, 91), (136, 73), (137, 149), (138, 19), (139, 35), (140, 63), (141, 157), (142, 146), (143, 195), (144, 18), (145, 71), (146, 109), (147, 58), (148, 68), (149, 67), (150, 196), (151, 1), (152, 39), (153, 153), (154, 55), (155, 106), (156, 139), (157, 192), (158, 89), (159, 163), (160, 61), (161, 90), (162, 8), (163, 144), (164, 25), (165, 66), (166, 23), (167, 15), (168, 124), (169, 99), (170, 125), (171, 141), (172, 41), (173, 56), (174, 5), (175, 185), (176, 178), (177, 198), (178, 143), (179, 96), (180, 184), (181, 130), (182, 148), (183, 95), (184, 177), (185, 30), (186, 70), (187, 118), (188, 160), (189, 84), (190, 111), (191, 101), (192, 113), (193, 132), (194, 87), (195, 154), (196, 59), (197, 45), (198, 21), (199, 83)]}
Checkpoint ...
[33mEpoch 11/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [10][ 0/45]	Total Loss -2.2517e+01 (-2.2517e+01)	Consistency Loss 3.8271e+00 (3.8271e+00)	Entropy 5.2688e+00 (5.2688e+00)
Epoch: [10][25/45]	Total Loss -2.2557e+01 (-2.2607e+01)	Consistency Loss 3.7915e+00 (3.7214e+00)	Entropy 5.2698e+00 (5.2656e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.274903297424316, 'consistency': 3.0409159660339355, 'total_loss': -2.233987331390381}], 'lowest_loss_head': 0, 'lowest_loss': -2.233987331390381}
New lowest loss on validation set: -2.1925 -> -2.2340
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.12668277528477737, 'ARI': 0.04536315653489819, 'NMI': 0.45788208761043414, 'ACC Top-5': 0.25181221953745253, 'hungarian_match': [(0, 193), (1, 80), (2, 121), (3, 117), (4, 179), (5, 90), (6, 53), (7, 94), (8, 136), (9, 124), (10, 88), (11, 151), (12, 102), (13, 168), (14, 192), (15, 181), (16, 12), (17, 72), (18, 140), (19, 62), (20, 44), (21, 26), (22, 24), (23, 23), (24, 131), (25, 183), (26, 76), (27, 29), (28, 175), (29, 36), (30, 155), (31, 47), (32, 22), (33, 163), (34, 17), (35, 132), (36, 190), (37, 32), (38, 195), (39, 111), (40, 149), (41, 145), (42, 128), (43, 97), (44, 135), (45, 2), (46, 161), (47, 66), (48, 0), (49, 14), (50, 147), (51, 122), (52, 79), (53, 20), (54, 40), (55, 50), (56, 127), (57, 95), (58, 110), (59, 21), (60, 157), (61, 176), (62, 142), (63, 38), (64, 171), (65, 199), (66, 75), (67, 174), (68, 16), (69, 103), (70, 116), (71, 49), (72, 166), (73, 112), (74, 56), (75, 169), (76, 153), (77, 78), (78, 81), (79, 180), (80, 115), (81, 194), (82, 165), (83, 170), (84, 133), (85, 104), (86, 13), (87, 189), (88, 9), (89, 3), (90, 93), (91, 87), (92, 31), (93, 33), (94, 85), (95, 107), (96, 91), (97, 167), (98, 160), (99, 7), (100, 30), (101, 42), (102, 123), (103, 138), (104, 57), (105, 137), (106, 82), (107, 54), (108, 159), (109, 46), (110, 37), (111, 119), (112, 10), (113, 188), (114, 186), (115, 70), (116, 173), (117, 92), (118, 43), (119, 100), (120, 197), (121, 86), (122, 152), (123, 48), (124, 65), (125, 114), (126, 129), (127, 162), (128, 164), (129, 182), (130, 28), (131, 51), (132, 60), (133, 126), (134, 64), (135, 5), (136, 11), (137, 130), (138, 19), (139, 35), (140, 63), (141, 172), (142, 146), (143, 98), (144, 73), (145, 71), (146, 109), (147, 59), (148, 191), (149, 67), (150, 196), (151, 105), (152, 39), (153, 18), (154, 55), (155, 106), (156, 41), (157, 198), (158, 89), (159, 158), (160, 61), (161, 34), (162, 8), (163, 108), (164, 25), (165, 68), (166, 4), (167, 15), (168, 148), (169, 99), (170, 125), (171, 1), (172, 139), (173, 74), (174, 52), (175, 185), (176, 77), (177, 6), (178, 143), (179, 187), (180, 184), (181, 69), (182, 144), (183, 96), (184, 177), (185, 178), (186, 141), (187, 118), (188, 150), (189, 84), (190, 134), (191, 101), (192, 113), (193, 156), (194, 120), (195, 154), (196, 58), (197, 45), (198, 27), (199, 83)]}
Checkpoint ...
[33mEpoch 12/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [11][ 0/45]	Total Loss -2.2543e+01 (-2.2543e+01)	Consistency Loss 3.7745e+00 (3.7745e+00)	Entropy 5.2636e+00 (5.2636e+00)
Epoch: [11][25/45]	Total Loss -2.2467e+01 (-2.2628e+01)	Consistency Loss 3.8228e+00 (3.6693e+00)	Entropy 5.2580e+00 (5.2594e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.277233600616455, 'consistency': 2.9882044792175293, 'total_loss': -2.289029121398926}], 'lowest_loss_head': 0, 'lowest_loss': -2.289029121398926}
New lowest loss on validation set: -2.2340 -> -2.2890
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.12305833620987228, 'ARI': 0.04563717657406684, 'NMI': 0.4597234262955047, 'ACC Top-5': 0.25060407317915084, 'hungarian_match': [(0, 35), (1, 80), (2, 32), (3, 117), (4, 160), (5, 90), (6, 197), (7, 139), (8, 136), (9, 158), (10, 88), (11, 40), (12, 77), (13, 162), (14, 95), (15, 199), (16, 12), (17, 72), (18, 140), (19, 62), (20, 44), (21, 26), (22, 24), (23, 105), (24, 163), (25, 183), (26, 76), (27, 29), (28, 175), (29, 173), (30, 152), (31, 47), (32, 9), (33, 170), (34, 17), (35, 53), (36, 41), (37, 56), (38, 168), (39, 137), (40, 96), (41, 67), (42, 128), (43, 138), (44, 16), (45, 2), (46, 151), (47, 131), (48, 0), (49, 14), (50, 121), (51, 122), (52, 79), (53, 116), (54, 78), (55, 51), (56, 127), (57, 38), (58, 110), (59, 33), (60, 37), (61, 176), (62, 142), (63, 166), (64, 171), (65, 13), (66, 84), (67, 174), (68, 153), (69, 103), (70, 19), (71, 99), (72, 167), (73, 112), (74, 30), (75, 73), (76, 187), (77, 155), (78, 97), (79, 180), (80, 115), (81, 194), (82, 165), (83, 134), (84, 133), (85, 104), (86, 102), (87, 189), (88, 4), (89, 3), (90, 114), (91, 10), (92, 55), (93, 7), (94, 85), (95, 25), (96, 149), (97, 93), (98, 75), (99, 50), (100, 74), (101, 36), (102, 172), (103, 154), (104, 57), (105, 190), (106, 23), (107, 54), (108, 159), (109, 46), (110, 123), (111, 119), (112, 107), (113, 27), (114, 186), (115, 31), (116, 141), (117, 92), (118, 43), (119, 63), (120, 132), (121, 86), (122, 108), (123, 11), (124, 65), (125, 188), (126, 129), (127, 87), (128, 169), (129, 182), (130, 48), (131, 49), (132, 60), (133, 126), (134, 22), (135, 91), (136, 193), (137, 130), (138, 164), (139, 66), (140, 70), (141, 157), (142, 146), (143, 5), (144, 18), (145, 71), (146, 109), (147, 59), (148, 191), (149, 68), (150, 196), (151, 1), (152, 39), (153, 179), (154, 195), (155, 106), (156, 147), (157, 34), (158, 89), (159, 98), (160, 61), (161, 42), (162, 28), (163, 144), (164, 8), (165, 192), (166, 198), (167, 15), (168, 124), (169, 100), (170, 125), (171, 64), (172, 118), (173, 82), (174, 52), (175, 185), (176, 81), (177, 6), (178, 145), (179, 161), (180, 184), (181, 69), (182, 148), (183, 94), (184, 177), (185, 178), (186, 143), (187, 181), (188, 150), (189, 113), (190, 111), (191, 101), (192, 135), (193, 156), (194, 120), (195, 20), (196, 58), (197, 45), (198, 21), (199, 83)]}
Checkpoint ...
[33mEpoch 13/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [12][ 0/45]	Total Loss -2.2420e+01 (-2.2420e+01)	Consistency Loss 3.8580e+00 (3.8580e+00)	Entropy 5.2556e+00 (5.2556e+00)
Epoch: [12][25/45]	Total Loss -2.2663e+01 (-2.2683e+01)	Consistency Loss 3.6508e+00 (3.6182e+00)	Entropy 5.2627e+00 (5.2603e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.280034065246582, 'consistency': 2.956385850906372, 'total_loss': -2.32364821434021}], 'lowest_loss_head': 0, 'lowest_loss': -2.32364821434021}
New lowest loss on validation set: -2.2890 -> -2.3236
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.1268553676216776, 'ARI': 0.0433808312935343, 'NMI': 0.4594409519290206, 'ACC Top-5': 0.25353814290645493, 'hungarian_match': [(0, 27), (1, 35), (2, 121), (3, 117), (4, 164), (5, 128), (6, 136), (7, 156), (8, 190), (9, 158), (10, 88), (11, 102), (12, 77), (13, 157), (14, 9), (15, 181), (16, 133), (17, 15), (18, 140), (19, 62), (20, 105), (21, 26), (22, 24), (23, 74), (24, 55), (25, 183), (26, 12), (27, 29), (28, 123), (29, 42), (30, 138), (31, 47), (32, 22), (33, 170), (34, 124), (35, 129), (36, 168), (37, 32), (38, 194), (39, 37), (40, 141), (41, 67), (42, 80), (43, 96), (44, 135), (45, 167), (46, 159), (47, 131), (48, 2), (49, 14), (50, 198), (51, 122), (52, 53), (53, 20), (54, 78), (55, 50), (56, 127), (57, 16), (58, 110), (59, 21), (60, 151), (61, 111), (62, 142), (63, 38), (64, 171), (65, 199), (66, 132), (67, 174), (68, 153), (69, 103), (70, 19), (71, 99), (72, 166), (73, 112), (74, 30), (75, 177), (76, 52), (77, 197), (78, 81), (79, 180), (80, 115), (81, 144), (82, 155), (83, 147), (84, 13), (85, 104), (86, 76), (87, 189), (88, 107), (89, 3), (90, 93), (91, 33), (92, 113), (93, 7), (94, 85), (95, 28), (96, 17), (97, 161), (98, 75), (99, 45), (100, 150), (101, 36), (102, 173), (103, 154), (104, 0), (105, 137), (106, 57), (107, 54), (108, 97), (109, 46), (110, 101), (111, 98), (112, 10), (113, 191), (114, 187), (115, 79), (116, 186), (117, 92), (118, 43), (119, 63), (120, 73), (121, 86), (122, 152), (123, 193), (124, 65), (125, 114), (126, 118), (127, 87), (128, 172), (129, 182), (130, 25), (131, 49), (132, 60), (133, 126), (134, 82), (135, 91), (136, 162), (137, 149), (138, 31), (139, 66), (140, 70), (141, 120), (142, 146), (143, 175), (144, 18), (145, 71), (146, 109), (147, 58), (148, 23), (149, 68), (150, 196), (151, 1), (152, 39), (153, 176), (154, 195), (155, 106), (156, 139), (157, 192), (158, 89), (159, 163), (160, 61), (161, 34), (162, 48), (163, 108), (164, 8), (165, 160), (166, 4), (167, 165), (168, 116), (169, 100), (170, 125), (171, 64), (172, 169), (173, 56), (174, 5), (175, 185), (176, 40), (177, 6), (178, 145), (179, 94), (180, 184), (181, 69), (182, 148), (183, 11), (184, 72), (185, 95), (186, 143), (187, 119), (188, 90), (189, 84), (190, 134), (191, 41), (192, 44), (193, 179), (194, 130), (195, 178), (196, 59), (197, 51), (198, 188), (199, 83)]}
Checkpoint ...
[33mEpoch 14/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [13][ 0/45]	Total Loss -2.2758e+01 (-2.2758e+01)	Consistency Loss 3.5553e+00 (3.5553e+00)	Entropy 5.2626e+00 (5.2626e+00)
Epoch: [13][25/45]	Total Loss -2.2665e+01 (-2.2656e+01)	Consistency Loss 3.6411e+00 (3.6313e+00)	Entropy 5.2612e+00 (5.2575e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.2790021896362305, 'consistency': 2.925053358078003, 'total_loss': -2.3539488315582275}], 'lowest_loss_head': 0, 'lowest_loss': -2.3539488315582275}
New lowest loss on validation set: -2.3236 -> -2.3539
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.12754573696927857, 'ARI': 0.04296621525637926, 'NMI': 0.4606870248882513, 'ACC Top-5': 0.25595443562305836, 'hungarian_match': [(0, 27), (1, 80), (2, 31), (3, 13), (4, 164), (5, 128), (6, 136), (7, 156), (8, 190), (9, 158), (10, 88), (11, 37), (12, 77), (13, 162), (14, 165), (15, 181), (16, 133), (17, 90), (18, 140), (19, 116), (20, 105), (21, 64), (22, 24), (23, 121), (24, 55), (25, 98), (26, 76), (27, 29), (28, 123), (29, 150), (30, 53), (31, 97), (32, 22), (33, 170), (34, 130), (35, 5), (36, 108), (37, 169), (38, 194), (39, 137), (40, 197), (41, 67), (42, 126), (43, 93), (44, 16), (45, 167), (46, 151), (47, 131), (48, 2), (49, 14), (50, 193), (51, 122), (52, 79), (53, 20), (54, 12), (55, 50), (56, 127), (57, 38), (58, 110), (59, 21), (60, 199), (61, 36), (62, 142), (63, 152), (64, 171), (65, 19), (66, 84), (67, 168), (68, 154), (69, 113), (70, 11), (71, 99), (72, 166), (73, 148), (74, 30), (75, 177), (76, 56), (77, 195), (78, 141), (79, 180), (80, 175), (81, 17), (82, 155), (83, 147), (84, 28), (85, 104), (86, 102), (87, 189), (88, 107), (89, 3), (90, 159), (91, 10), (92, 174), (93, 7), (94, 85), (95, 25), (96, 183), (97, 161), (98, 75), (99, 45), (100, 160), (101, 114), (102, 117), (103, 138), (104, 0), (105, 135), (106, 23), (107, 54), (108, 95), (109, 46), (110, 101), (111, 119), (112, 145), (113, 191), (114, 187), (115, 69), (116, 70), (117, 92), (118, 43), (119, 62), (120, 73), (121, 86), (122, 9), (123, 81), (124, 65), (125, 78), (126, 118), (127, 52), (128, 178), (129, 182), (130, 26), (131, 49), (132, 60), (133, 87), (134, 82), (135, 91), (136, 172), (137, 149), (138, 34), (139, 35), (140, 63), (141, 157), (142, 146), (143, 115), (144, 153), (145, 71), (146, 109), (147, 59), (148, 176), (149, 66), (150, 196), (151, 1), (152, 39), (153, 18), (154, 33), (155, 106), (156, 139), (157, 198), (158, 89), (159, 163), (160, 61), (161, 42), (162, 48), (163, 192), (164, 8), (165, 68), (166, 186), (167, 15), (168, 124), (169, 100), (170, 125), (171, 173), (172, 41), (173, 74), (174, 57), (175, 185), (176, 40), (177, 6), (178, 143), (179, 47), (180, 184), (181, 4), (182, 112), (183, 94), (184, 72), (185, 96), (186, 144), (187, 132), (188, 129), (189, 103), (190, 134), (191, 111), (192, 44), (193, 179), (194, 120), (195, 32), (196, 58), (197, 51), (198, 188), (199, 83)]}
Checkpoint ...
[33mEpoch 15/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [14][ 0/45]	Total Loss -2.2815e+01 (-2.2815e+01)	Consistency Loss 3.5602e+00 (3.5602e+00)	Entropy 5.2750e+00 (5.2750e+00)
Epoch: [14][25/45]	Total Loss -2.2666e+01 (-2.2694e+01)	Consistency Loss 3.5407e+00 (3.5770e+00)	Entropy 5.2413e+00 (5.2541e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.277279853820801, 'consistency': 2.9104363918304443, 'total_loss': -2.3668434619903564}], 'lowest_loss_head': 0, 'lowest_loss': -2.3668434619903564}
New lowest loss on validation set: -2.3539 -> -2.3668
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.1268553676216776, 'ARI': 0.04470683791017306, 'NMI': 0.46145956942626937, 'ACC Top-5': 0.26389368312046946, 'hungarian_match': [(0, 27), (1, 80), (2, 31), (3, 13), (4, 164), (5, 34), (6, 136), (7, 94), (8, 190), (9, 158), (10, 88), (11, 102), (12, 194), (13, 174), (14, 53), (15, 181), (16, 12), (17, 165), (18, 140), (19, 146), (20, 105), (21, 26), (22, 24), (23, 57), (24, 162), (25, 183), (26, 76), (27, 29), (28, 73), (29, 36), (30, 138), (31, 47), (32, 22), (33, 170), (34, 17), (35, 5), (36, 108), (37, 150), (38, 159), (39, 137), (40, 197), (41, 67), (42, 128), (43, 96), (44, 75), (45, 167), (46, 175), (47, 131), (48, 2), (49, 173), (50, 33), (51, 122), (52, 16), (53, 116), (54, 78), (55, 50), (56, 127), (57, 38), (58, 110), (59, 21), (60, 151), (61, 176), (62, 142), (63, 166), (64, 171), (65, 37), (66, 84), (67, 168), (68, 152), (69, 20), (70, 3), (71, 99), (72, 56), (73, 148), (74, 30), (75, 177), (76, 32), (77, 79), (78, 141), (79, 180), (80, 130), (81, 81), (82, 155), (83, 147), (84, 144), (85, 104), (86, 117), (87, 189), (88, 107), (89, 90), (90, 93), (91, 103), (92, 113), (93, 44), (94, 85), (95, 28), (96, 97), (97, 199), (98, 160), (99, 49), (100, 161), (101, 114), (102, 77), (103, 154), (104, 0), (105, 135), (106, 23), (107, 54), (108, 172), (109, 46), (110, 123), (111, 98), (112, 10), (113, 191), (114, 187), (115, 15), (116, 61), (117, 92), (118, 43), (119, 62), (120, 132), (121, 86), (122, 156), (123, 9), (124, 65), (125, 188), (126, 118), (127, 87), (128, 169), (129, 182), (130, 48), (131, 51), (132, 60), (133, 126), (134, 82), (135, 35), (136, 14), (137, 149), (138, 19), (139, 69), (140, 63), (141, 157), (142, 133), (143, 195), (144, 153), (145, 70), (146, 109), (147, 58), (148, 66), (149, 101), (150, 196), (151, 1), (152, 39), (153, 18), (154, 198), (155, 106), (156, 139), (157, 192), (158, 89), (159, 163), (160, 64), (161, 42), (162, 8), (163, 52), (164, 25), (165, 68), (166, 193), (167, 40), (168, 124), (169, 100), (170, 125), (171, 71), (172, 115), (173, 74), (174, 7), (175, 185), (176, 121), (177, 6), (178, 145), (179, 55), (180, 184), (181, 4), (182, 112), (183, 11), (184, 72), (185, 95), (186, 143), (187, 119), (188, 129), (189, 186), (190, 134), (191, 111), (192, 41), (193, 179), (194, 120), (195, 178), (196, 59), (197, 45), (198, 91), (199, 83)]}
Checkpoint ...
[33mEpoch 16/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [15][ 0/45]	Total Loss -2.2736e+01 (-2.2736e+01)	Consistency Loss 3.5539e+00 (3.5539e+00)	Entropy 5.2580e+00 (5.2580e+00)
Epoch: [15][25/45]	Total Loss -2.2700e+01 (-2.2720e+01)	Consistency Loss 3.5391e+00 (3.5473e+00)	Entropy 5.2477e+00 (5.2535e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.282237529754639, 'consistency': 2.871887683868408, 'total_loss': -2.4103498458862305}], 'lowest_loss_head': 0, 'lowest_loss': -2.4103498458862305}
New lowest loss on validation set: -2.3668 -> -2.4103
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.1251294442526752, 'ARI': 0.04591550384335329, 'NMI': 0.4626137621752859, 'ACC Top-5': 0.2581981360027615, 'hungarian_match': [(0, 27), (1, 80), (2, 32), (3, 13), (4, 182), (5, 90), (6, 23), (7, 94), (8, 190), (9, 158), (10, 88), (11, 102), (12, 77), (13, 157), (14, 37), (15, 181), (16, 25), (17, 72), (18, 140), (19, 62), (20, 44), (21, 26), (22, 24), (23, 105), (24, 163), (25, 98), (26, 12), (27, 29), (28, 175), (29, 150), (30, 138), (31, 47), (32, 22), (33, 170), (34, 17), (35, 4), (36, 108), (37, 31), (38, 168), (39, 137), (40, 116), (41, 145), (42, 128), (43, 96), (44, 117), (45, 167), (46, 165), (47, 131), (48, 2), (49, 46), (50, 198), (51, 122), (52, 16), (53, 20), (54, 78), (55, 50), (56, 127), (57, 133), (58, 110), (59, 21), (60, 151), (61, 111), (62, 142), (63, 159), (64, 171), (65, 172), (66, 84), (67, 174), (68, 152), (69, 103), (70, 19), (71, 99), (72, 166), (73, 148), (74, 56), (75, 177), (76, 153), (77, 197), (78, 97), (79, 180), (80, 38), (81, 194), (82, 155), (83, 147), (84, 9), (85, 104), (86, 76), (87, 189), (88, 107), (89, 3), (90, 93), (91, 87), (92, 14), (93, 33), (94, 85), (95, 28), (96, 120), (97, 199), (98, 160), (99, 141), (100, 161), (101, 36), (102, 55), (103, 154), (104, 0), (105, 135), (106, 57), (107, 54), (108, 95), (109, 169), (110, 123), (111, 119), (112, 10), (113, 191), (114, 187), (115, 79), (116, 136), (117, 92), (118, 43), (119, 58), (120, 132), (121, 86), (122, 156), (123, 81), (124, 65), (125, 114), (126, 129), (127, 64), (128, 164), (129, 52), (130, 49), (131, 51), (132, 60), (133, 126), (134, 82), (135, 35), (136, 73), (137, 149), (138, 179), (139, 69), (140, 63), (141, 173), (142, 146), (143, 5), (144, 18), (145, 71), (146, 109), (147, 59), (148, 67), (149, 101), (150, 196), (151, 66), (152, 39), (153, 34), (154, 195), (155, 106), (156, 139), (157, 192), (158, 89), (159, 183), (160, 144), (161, 115), (162, 48), (163, 184), (164, 8), (165, 68), (166, 91), (167, 15), (168, 124), (169, 100), (170, 125), (171, 1), (172, 30), (173, 74), (174, 7), (175, 185), (176, 121), (177, 6), (178, 70), (179, 186), (180, 53), (181, 193), (182, 112), (183, 11), (184, 42), (185, 75), (186, 143), (187, 118), (188, 176), (189, 113), (190, 134), (191, 41), (192, 40), (193, 162), (194, 130), (195, 178), (196, 61), (197, 45), (198, 188), (199, 83)]}
Checkpoint ...
[33mEpoch 17/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [16][ 0/45]	Total Loss -2.2836e+01 (-2.2836e+01)	Consistency Loss 3.4641e+00 (3.4641e+00)	Entropy 5.2600e+00 (5.2600e+00)
Epoch: [16][25/45]	Total Loss -2.2670e+01 (-2.2731e+01)	Consistency Loss 3.5663e+00 (3.5498e+00)	Entropy 5.2472e+00 (5.2562e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.282279014587402, 'consistency': 2.8536088466644287, 'total_loss': -2.4286701679229736}], 'lowest_loss_head': 0, 'lowest_loss': -2.4286701679229736}
New lowest loss on validation set: -2.4103 -> -2.4287
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.12789092164307905, 'ARI': 0.04678108503124206, 'NMI': 0.46450086015852954, 'ACC Top-5': 0.25854332067656194, 'hungarian_match': [(0, 27), (1, 91), (2, 32), (3, 33), (4, 182), (5, 117), (6, 23), (7, 185), (8, 190), (9, 87), (10, 88), (11, 37), (12, 77), (13, 162), (14, 151), (15, 181), (16, 25), (17, 14), (18, 140), (19, 144), (20, 105), (21, 26), (22, 24), (23, 74), (24, 132), (25, 183), (26, 76), (27, 29), (28, 123), (29, 42), (30, 138), (31, 47), (32, 22), (33, 121), (34, 17), (35, 194), (36, 168), (37, 56), (38, 163), (39, 137), (40, 197), (41, 67), (42, 128), (43, 96), (44, 135), (45, 84), (46, 178), (47, 4), (48, 2), (49, 72), (50, 198), (51, 122), (52, 157), (53, 115), (54, 184), (55, 50), (56, 127), (57, 38), (58, 110), (59, 21), (60, 118), (61, 46), (62, 142), (63, 156), (64, 176), (65, 15), (66, 92), (67, 174), (68, 16), (69, 103), (70, 11), (71, 52), (72, 166), (73, 130), (74, 30), (75, 18), (76, 13), (77, 148), (78, 97), (79, 150), (80, 116), (81, 9), (82, 165), (83, 147), (84, 133), (85, 104), (86, 134), (87, 189), (88, 107), (89, 3), (90, 93), (91, 63), (92, 160), (93, 58), (94, 85), (95, 106), (96, 169), (97, 199), (98, 131), (99, 7), (100, 161), (101, 114), (102, 34), (103, 154), (104, 0), (105, 145), (106, 136), (107, 94), (108, 159), (109, 108), (110, 175), (111, 119), (112, 10), (113, 191), (114, 187), (115, 158), (116, 141), (117, 113), (118, 43), (119, 62), (120, 73), (121, 86), (122, 55), (123, 81), (124, 65), (125, 78), (126, 170), (127, 36), (128, 152), (129, 51), (130, 28), (131, 49), (132, 60), (133, 126), (134, 82), (135, 35), (136, 193), (137, 149), (138, 31), (139, 66), (140, 59), (141, 98), (142, 146), (143, 5), (144, 153), (145, 71), (146, 109), (147, 44), (148, 68), (149, 101), (150, 196), (151, 90), (152, 39), (153, 75), (154, 195), (155, 48), (156, 139), (157, 192), (158, 89), (159, 180), (160, 64), (161, 129), (162, 12), (163, 167), (164, 8), (165, 79), (166, 99), (167, 102), (168, 124), (169, 100), (170, 125), (171, 1), (172, 164), (173, 53), (174, 57), (175, 19), (176, 40), (177, 6), (178, 70), (179, 186), (180, 171), (181, 69), (182, 112), (183, 54), (184, 177), (185, 95), (186, 143), (187, 172), (188, 20), (189, 173), (190, 111), (191, 41), (192, 80), (193, 179), (194, 120), (195, 155), (196, 61), (197, 45), (198, 188), (199, 83)]}
Checkpoint ...
[33mEpoch 18/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [17][ 0/45]	Total Loss -2.2815e+01 (-2.2815e+01)	Consistency Loss 3.4677e+00 (3.4677e+00)	Entropy 5.2566e+00 (5.2566e+00)
Epoch: [17][25/45]	Total Loss -2.2823e+01 (-2.2769e+01)	Consistency Loss 3.4298e+00 (3.4916e+00)	Entropy 5.2505e+00 (5.2521e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.27796745300293, 'consistency': 2.8467471599578857, 'total_loss': -2.431220293045044}], 'lowest_loss_head': 0, 'lowest_loss': -2.431220293045044}
New lowest loss on validation set: -2.4287 -> -2.4312
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.1273731446323783, 'ARI': 0.0458703972338776, 'NMI': 0.4628274691597986, 'ACC Top-5': 0.25733517431826025, 'hungarian_match': [(0, 27), (1, 35), (2, 32), (3, 117), (4, 164), (5, 90), (6, 136), (7, 185), (8, 191), (9, 121), (10, 88), (11, 37), (12, 77), (13, 174), (14, 95), (15, 15), (16, 10), (17, 93), (18, 140), (19, 61), (20, 105), (21, 26), (22, 24), (23, 20), (24, 132), (25, 98), (26, 76), (27, 29), (28, 114), (29, 42), (30, 72), (31, 97), (32, 9), (33, 123), (34, 17), (35, 194), (36, 175), (37, 150), (38, 195), (39, 137), (40, 197), (41, 56), (42, 130), (43, 135), (44, 75), (45, 167), (46, 181), (47, 131), (48, 2), (49, 172), (50, 128), (51, 122), (52, 79), (53, 116), (54, 12), (55, 50), (56, 127), (57, 13), (58, 110), (59, 21), (60, 118), (61, 46), (62, 142), (63, 152), (64, 171), (65, 190), (66, 92), (67, 156), (68, 16), (69, 103), (70, 19), (71, 49), (72, 166), (73, 112), (74, 30), (75, 162), (76, 165), (77, 99), (78, 141), (79, 180), (80, 87), (81, 81), (82, 168), (83, 147), (84, 133), (85, 104), (86, 102), (87, 189), (88, 106), (89, 3), (90, 38), (91, 25), (92, 14), (93, 4), (94, 85), (95, 107), (96, 120), (97, 199), (98, 160), (99, 57), (100, 161), (101, 101), (102, 173), (103, 154), (104, 0), (105, 163), (106, 23), (107, 54), (108, 159), (109, 153), (110, 113), (111, 182), (112, 7), (113, 188), (114, 187), (115, 158), (116, 186), (117, 11), (118, 43), (119, 62), (120, 73), (121, 86), (122, 108), (123, 111), (124, 65), (125, 78), (126, 170), (127, 36), (128, 169), (129, 129), (130, 64), (131, 51), (132, 60), (133, 126), (134, 22), (135, 91), (136, 74), (137, 149), (138, 31), (139, 198), (140, 59), (141, 157), (142, 146), (143, 5), (144, 18), (145, 71), (146, 109), (147, 44), (148, 67), (149, 66), (150, 196), (151, 1), (152, 39), (153, 176), (154, 55), (155, 48), (156, 139), (157, 192), (158, 89), (159, 183), (160, 145), (161, 34), (162, 8), (163, 184), (164, 28), (165, 68), (166, 33), (167, 47), (168, 124), (169, 100), (170, 125), (171, 144), (172, 115), (173, 82), (174, 52), (175, 53), (176, 40), (177, 6), (178, 70), (179, 96), (180, 138), (181, 69), (182, 148), (183, 94), (184, 177), (185, 178), (186, 143), (187, 119), (188, 151), (189, 84), (190, 134), (191, 41), (192, 63), (193, 179), (194, 80), (195, 155), (196, 58), (197, 45), (198, 193), (199, 83)]}
Checkpoint ...
[33mEpoch 19/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [18][ 0/45]	Total Loss -2.2786e+01 (-2.2786e+01)	Consistency Loss 3.5509e+00 (3.5509e+00)	Entropy 5.2674e+00 (5.2674e+00)
Epoch: [18][25/45]	Total Loss -2.2702e+01 (-2.2724e+01)	Consistency Loss 3.5827e+00 (3.5235e+00)	Entropy 5.2569e+00 (5.2496e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.281286239624023, 'consistency': 2.799656867980957, 'total_loss': -2.4816293716430664}], 'lowest_loss_head': 0, 'lowest_loss': -2.4816293716430664}
New lowest loss on validation set: -2.4312 -> -2.4816
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.12996202968588194, 'ARI': 0.043856072060080666, 'NMI': 0.46392820080210384, 'ACC Top-5': 0.25854332067656194, 'hungarian_match': [(0, 27), (1, 35), (2, 32), (3, 13), (4, 164), (5, 90), (6, 23), (7, 185), (8, 190), (9, 148), (10, 86), (11, 42), (12, 41), (13, 98), (14, 165), (15, 181), (16, 133), (17, 72), (18, 140), (19, 62), (20, 105), (21, 29), (22, 24), (23, 57), (24, 132), (25, 183), (26, 101), (27, 9), (28, 123), (29, 36), (30, 167), (31, 97), (32, 22), (33, 121), (34, 130), (35, 173), (36, 79), (37, 95), (38, 195), (39, 137), (40, 117), (41, 56), (42, 80), (43, 93), (44, 135), (45, 84), (46, 152), (47, 131), (48, 2), (49, 118), (50, 33), (51, 126), (52, 14), (53, 20), (54, 111), (55, 50), (56, 127), (57, 38), (58, 110), (59, 21), (60, 151), (61, 46), (62, 142), (63, 156), (64, 171), (65, 96), (66, 92), (67, 174), (68, 16), (69, 103), (70, 162), (71, 147), (72, 150), (73, 112), (74, 30), (75, 166), (76, 34), (77, 197), (78, 141), (79, 180), (80, 175), (81, 17), (82, 155), (83, 128), (84, 106), (85, 104), (86, 76), (87, 189), (88, 107), (89, 3), (90, 47), (91, 25), (92, 31), (93, 49), (94, 85), (95, 28), (96, 144), (97, 199), (98, 75), (99, 7), (100, 161), (101, 114), (102, 136), (103, 154), (104, 0), (105, 184), (106, 186), (107, 94), (108, 159), (109, 169), (110, 37), (111, 119), (112, 10), (113, 188), (114, 187), (115, 158), (116, 70), (117, 113), (118, 43), (119, 100), (120, 73), (121, 88), (122, 191), (123, 81), (124, 65), (125, 78), (126, 170), (127, 87), (128, 168), (129, 4), (130, 26), (131, 51), (132, 60), (133, 120), (134, 82), (135, 91), (136, 11), (137, 149), (138, 19), (139, 69), (140, 63), (141, 129), (142, 146), (143, 5), (144, 18), (145, 71), (146, 109), (147, 59), (148, 68), (149, 172), (150, 196), (151, 1), (152, 39), (153, 176), (154, 194), (155, 48), (156, 102), (157, 192), (158, 89), (159, 157), (160, 64), (161, 115), (162, 8), (163, 153), (164, 182), (165, 67), (166, 61), (167, 15), (168, 124), (169, 99), (170, 125), (171, 116), (172, 108), (173, 74), (174, 52), (175, 160), (176, 40), (177, 6), (178, 145), (179, 55), (180, 138), (181, 66), (182, 193), (183, 54), (184, 177), (185, 178), (186, 143), (187, 122), (188, 163), (189, 53), (190, 134), (191, 77), (192, 44), (193, 179), (194, 12), (195, 139), (196, 58), (197, 45), (198, 198), (199, 83)]}
Checkpoint ...
[33mEpoch 20/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [19][ 0/45]	Total Loss -2.2750e+01 (-2.2750e+01)	Consistency Loss 3.5301e+00 (3.5301e+00)	Entropy 5.2561e+00 (5.2561e+00)
Epoch: [19][25/45]	Total Loss -2.2931e+01 (-2.2779e+01)	Consistency Loss 3.3753e+00 (3.4773e+00)	Entropy 5.2613e+00 (5.2512e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.2793049812316895, 'consistency': 2.7709715366363525, 'total_loss': -2.508333444595337}], 'lowest_loss_head': 0, 'lowest_loss': -2.508333444595337}
New lowest loss on validation set: -2.4816 -> -2.5083
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.12944425267518123, 'ARI': 0.04725296724613177, 'NMI': 0.46631824202695643, 'ACC Top-5': 0.2590610976872627, 'hungarian_match': [(0, 27), (1, 91), (2, 32), (3, 13), (4, 168), (5, 170), (6, 136), (7, 41), (8, 105), (9, 158), (10, 88), (11, 37), (12, 77), (13, 174), (14, 165), (15, 95), (16, 3), (17, 72), (18, 140), (19, 60), (20, 64), (21, 26), (22, 24), (23, 74), (24, 163), (25, 98), (26, 76), (27, 29), (28, 114), (29, 42), (30, 164), (31, 79), (32, 22), (33, 123), (34, 130), (35, 8), (36, 108), (37, 169), (38, 195), (39, 137), (40, 197), (41, 56), (42, 128), (43, 96), (44, 75), (45, 15), (46, 192), (47, 12), (48, 2), (49, 73), (50, 119), (51, 122), (52, 53), (53, 20), (54, 184), (55, 49), (56, 127), (57, 9), (58, 110), (59, 21), (60, 151), (61, 46), (62, 142), (63, 38), (64, 171), (65, 190), (66, 84), (67, 34), (68, 152), (69, 103), (70, 162), (71, 99), (72, 166), (73, 112), (74, 30), (75, 161), (76, 14), (77, 186), (78, 25), (79, 180), (80, 120), (81, 194), (82, 155), (83, 147), (84, 10), (85, 104), (86, 102), (87, 189), (88, 107), (89, 116), (90, 93), (91, 87), (92, 31), (93, 7), (94, 52), (95, 28), (96, 144), (97, 199), (98, 131), (99, 57), (100, 150), (101, 36), (102, 173), (103, 154), (104, 0), (105, 135), (106, 23), (107, 94), (108, 97), (109, 160), (110, 175), (111, 129), (112, 145), (113, 188), (114, 187), (115, 191), (116, 70), (117, 92), (118, 43), (119, 62), (120, 132), (121, 86), (122, 148), (123, 81), (124, 65), (125, 78), (126, 118), (127, 11), (128, 153), (129, 182), (130, 133), (131, 51), (132, 58), (133, 126), (134, 113), (135, 35), (136, 172), (137, 149), (138, 19), (139, 69), (140, 63), (141, 157), (142, 146), (143, 5), (144, 18), (145, 71), (146, 109), (147, 44), (148, 68), (149, 101), (150, 196), (151, 1), (152, 39), (153, 134), (154, 16), (155, 48), (156, 167), (157, 198), (158, 89), (159, 183), (160, 61), (161, 117), (162, 90), (163, 159), (164, 106), (165, 67), (166, 4), (167, 47), (168, 124), (169, 100), (170, 125), (171, 141), (172, 115), (173, 82), (174, 85), (175, 185), (176, 121), (177, 6), (178, 40), (179, 55), (180, 138), (181, 66), (182, 193), (183, 54), (184, 177), (185, 178), (186, 143), (187, 181), (188, 176), (189, 33), (190, 111), (191, 156), (192, 50), (193, 179), (194, 80), (195, 139), (196, 59), (197, 45), (198, 17), (199, 83)]}
Checkpoint ...
[33mEpoch 21/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [20][ 0/45]	Total Loss -2.2895e+01 (-2.2895e+01)	Consistency Loss 3.4153e+00 (3.4153e+00)	Entropy 5.2620e+00 (5.2620e+00)
Epoch: [20][25/45]	Total Loss -2.2753e+01 (-2.2798e+01)	Consistency Loss 3.4526e+00 (3.4476e+00)	Entropy 5.2412e+00 (5.2491e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.278524875640869, 'consistency': 2.7598555088043213, 'total_loss': -2.518669366836548}], 'lowest_loss_head': 0, 'lowest_loss': -2.518669366836548}
New lowest loss on validation set: -2.5083 -> -2.5187
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.12927166033828097, 'ARI': 0.047297611737095256, 'NMI': 0.466369755183667, 'ACC Top-5': 0.26786330686917503, 'hungarian_match': [(0, 189), (1, 80), (2, 32), (3, 13), (4, 160), (5, 34), (6, 23), (7, 185), (8, 190), (9, 158), (10, 88), (11, 77), (12, 102), (13, 174), (14, 165), (15, 181), (16, 12), (17, 93), (18, 140), (19, 144), (20, 105), (21, 26), (22, 24), (23, 7), (24, 17), (25, 103), (26, 76), (27, 29), (28, 114), (29, 42), (30, 94), (31, 97), (32, 22), (33, 124), (34, 130), (35, 132), (36, 175), (37, 150), (38, 195), (39, 37), (40, 197), (41, 19), (42, 128), (43, 96), (44, 135), (45, 47), (46, 178), (47, 9), (48, 0), (49, 14), (50, 193), (51, 123), (52, 56), (53, 116), (54, 40), (55, 50), (56, 127), (57, 90), (58, 110), (59, 21), (60, 199), (61, 46), (62, 142), (63, 159), (64, 176), (65, 182), (66, 84), (67, 168), (68, 151), (69, 25), (70, 3), (71, 99), (72, 166), (73, 112), (74, 30), (75, 198), (76, 35), (77, 194), (78, 141), (79, 180), (80, 118), (81, 55), (82, 155), (83, 129), (84, 10), (85, 91), (86, 117), (87, 27), (88, 107), (89, 33), (90, 38), (91, 87), (92, 184), (93, 4), (94, 52), (95, 106), (96, 183), (97, 161), (98, 167), (99, 57), (100, 177), (101, 36), (102, 173), (103, 154), (104, 1), (105, 137), (106, 136), (107, 138), (108, 41), (109, 169), (110, 111), (111, 147), (112, 145), (113, 186), (114, 187), (115, 79), (116, 44), (117, 92), (118, 43), (119, 62), (120, 73), (121, 86), (122, 156), (123, 81), (124, 65), (125, 78), (126, 170), (127, 11), (128, 164), (129, 98), (130, 133), (131, 51), (132, 60), (133, 126), (134, 82), (135, 188), (136, 172), (137, 149), (138, 31), (139, 69), (140, 146), (141, 157), (142, 131), (143, 5), (144, 18), (145, 71), (146, 109), (147, 59), (148, 67), (149, 66), (150, 192), (151, 49), (152, 39), (153, 75), (154, 16), (155, 28), (156, 139), (157, 196), (158, 89), (159, 163), (160, 64), (161, 115), (162, 48), (163, 153), (164, 8), (165, 68), (166, 61), (167, 15), (168, 148), (169, 100), (170, 125), (171, 2), (172, 108), (173, 74), (174, 85), (175, 171), (176, 121), (177, 6), (178, 70), (179, 162), (180, 53), (181, 191), (182, 119), (183, 54), (184, 72), (185, 95), (186, 143), (187, 122), (188, 20), (189, 113), (190, 134), (191, 101), (192, 63), (193, 179), (194, 120), (195, 152), (196, 58), (197, 45), (198, 104), (199, 83)]}
Checkpoint ...
[33mEpoch 22/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [21][ 0/45]	Total Loss -2.2862e+01 (-2.2862e+01)	Consistency Loss 3.3430e+00 (3.3430e+00)	Entropy 5.2409e+00 (5.2409e+00)
Epoch: [21][25/45]	Total Loss -2.2894e+01 (-2.2795e+01)	Consistency Loss 3.3805e+00 (3.4389e+00)	Entropy 5.2550e+00 (5.2468e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.281033992767334, 'consistency': 2.740987777709961, 'total_loss': -2.540046215057373}], 'lowest_loss_head': 0, 'lowest_loss': -2.540046215057373}
New lowest loss on validation set: -2.5187 -> -2.5400
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13255091473938557, 'ARI': 0.04787280095137474, 'NMI': 0.4667236164879339, 'ACC Top-5': 0.2709699689333794, 'hungarian_match': [(0, 27), (1, 80), (2, 32), (3, 13), (4, 164), (5, 170), (6, 136), (7, 185), (8, 190), (9, 158), (10, 88), (11, 37), (12, 194), (13, 157), (14, 165), (15, 181), (16, 10), (17, 72), (18, 140), (19, 146), (20, 105), (21, 26), (22, 24), (23, 33), (24, 131), (25, 98), (26, 76), (27, 29), (28, 114), (29, 150), (30, 94), (31, 47), (32, 22), (33, 121), (34, 17), (35, 119), (36, 176), (37, 108), (38, 195), (39, 137), (40, 197), (41, 90), (42, 128), (43, 96), (44, 135), (45, 167), (46, 36), (47, 4), (48, 0), (49, 46), (50, 193), (51, 122), (52, 56), (53, 116), (54, 12), (55, 49), (56, 127), (57, 101), (58, 110), (59, 21), (60, 53), (61, 111), (62, 142), (63, 159), (64, 171), (65, 19), (66, 92), (67, 174), (68, 151), (69, 113), (70, 3), (71, 52), (72, 180), (73, 112), (74, 30), (75, 166), (76, 14), (77, 78), (78, 117), (79, 115), (80, 120), (81, 79), (82, 168), (83, 147), (84, 103), (85, 104), (86, 102), (87, 189), (88, 9), (89, 172), (90, 93), (91, 25), (92, 184), (93, 35), (94, 85), (95, 28), (96, 152), (97, 199), (98, 75), (99, 50), (100, 161), (101, 163), (102, 173), (103, 154), (104, 57), (105, 77), (106, 23), (107, 95), (108, 97), (109, 169), (110, 123), (111, 149), (112, 145), (113, 191), (114, 187), (115, 175), (116, 44), (117, 133), (118, 43), (119, 62), (120, 73), (121, 86), (122, 156), (123, 81), (124, 65), (125, 42), (126, 118), (127, 100), (128, 153), (129, 182), (130, 107), (131, 51), (132, 60), (133, 126), (134, 82), (135, 91), (136, 11), (137, 130), (138, 31), (139, 198), (140, 61), (141, 129), (142, 144), (143, 5), (144, 18), (145, 71), (146, 109), (147, 59), (148, 68), (149, 66), (150, 196), (151, 1), (152, 39), (153, 55), (154, 16), (155, 106), (156, 139), (157, 192), (158, 89), (159, 183), (160, 64), (161, 34), (162, 48), (163, 20), (164, 8), (165, 67), (166, 63), (167, 15), (168, 124), (169, 99), (170, 125), (171, 2), (172, 38), (173, 74), (174, 7), (175, 177), (176, 40), (177, 6), (178, 70), (179, 186), (180, 138), (181, 69), (182, 148), (183, 54), (184, 162), (185, 178), (186, 143), (187, 132), (188, 160), (189, 84), (190, 134), (191, 41), (192, 141), (193, 179), (194, 87), (195, 155), (196, 58), (197, 45), (198, 188), (199, 83)]}
Checkpoint ...
[33mEpoch 23/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [22][ 0/45]	Total Loss -2.2843e+01 (-2.2843e+01)	Consistency Loss 3.3165e+00 (3.3165e+00)	Entropy 5.2319e+00 (5.2319e+00)
Epoch: [22][25/45]	Total Loss -2.2955e+01 (-2.2873e+01)	Consistency Loss 3.3167e+00 (3.3667e+00)	Entropy 5.2543e+00 (5.2480e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.286253452301025, 'consistency': 2.727773904800415, 'total_loss': -2.5584795475006104}], 'lowest_loss_head': 0, 'lowest_loss': -2.5584795475006104}
New lowest loss on validation set: -2.5400 -> -2.5585
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.1351397997928892, 'ARI': 0.05025956450310641, 'NMI': 0.46983244424701853, 'ACC Top-5': 0.2709699689333794, 'hungarian_match': [(0, 27), (1, 35), (2, 32), (3, 13), (4, 168), (5, 170), (6, 136), (7, 185), (8, 190), (9, 158), (10, 88), (11, 37), (12, 41), (13, 162), (14, 165), (15, 181), (16, 18), (17, 72), (18, 140), (19, 62), (20, 105), (21, 29), (22, 24), (23, 7), (24, 42), (25, 183), (26, 76), (27, 10), (28, 123), (29, 163), (30, 53), (31, 47), (32, 22), (33, 124), (34, 130), (35, 173), (36, 176), (37, 31), (38, 195), (39, 115), (40, 129), (41, 144), (42, 128), (43, 96), (44, 135), (45, 167), (46, 36), (47, 133), (48, 2), (49, 164), (50, 119), (51, 122), (52, 56), (53, 116), (54, 40), (55, 50), (56, 127), (57, 90), (58, 110), (59, 21), (60, 151), (61, 46), (62, 142), (63, 95), (64, 171), (65, 172), (66, 84), (67, 174), (68, 152), (69, 113), (70, 139), (71, 99), (72, 166), (73, 112), (74, 30), (75, 198), (76, 14), (77, 197), (78, 194), (79, 150), (80, 120), (81, 17), (82, 155), (83, 147), (84, 106), (85, 104), (86, 102), (87, 189), (88, 26), (89, 114), (90, 93), (91, 87), (92, 12), (93, 191), (94, 52), (95, 28), (96, 182), (97, 161), (98, 131), (99, 57), (100, 19), (101, 16), (102, 134), (103, 154), (104, 0), (105, 137), (106, 23), (107, 94), (108, 97), (109, 159), (110, 175), (111, 98), (112, 63), (113, 186), (114, 187), (115, 79), (116, 70), (117, 92), (118, 43), (119, 59), (120, 73), (121, 86), (122, 156), (123, 81), (124, 65), (125, 78), (126, 118), (127, 11), (128, 199), (129, 4), (130, 107), (131, 51), (132, 60), (133, 126), (134, 82), (135, 91), (136, 3), (137, 149), (138, 25), (139, 69), (140, 61), (141, 157), (142, 146), (143, 5), (144, 153), (145, 71), (146, 109), (147, 44), (148, 67), (149, 66), (150, 196), (151, 1), (152, 39), (153, 75), (154, 117), (155, 9), (156, 108), (157, 192), (158, 89), (159, 180), (160, 145), (161, 34), (162, 48), (163, 184), (164, 8), (165, 68), (166, 33), (167, 15), (168, 121), (169, 100), (170, 125), (171, 64), (172, 38), (173, 74), (174, 85), (175, 177), (176, 77), (177, 6), (178, 49), (179, 55), (180, 138), (181, 148), (182, 193), (183, 54), (184, 169), (185, 178), (186, 143), (187, 132), (188, 160), (189, 103), (190, 111), (191, 101), (192, 141), (193, 179), (194, 80), (195, 20), (196, 58), (197, 45), (198, 188), (199, 83)]}
Checkpoint ...
[33mEpoch 24/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [23][ 0/45]	Total Loss -2.2856e+01 (-2.2856e+01)	Consistency Loss 3.4363e+00 (3.4363e+00)	Entropy 5.2585e+00 (5.2585e+00)
Epoch: [23][25/45]	Total Loss -2.2894e+01 (-2.2841e+01)	Consistency Loss 3.2512e+00 (3.3903e+00)	Entropy 5.2291e+00 (5.2463e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.272765636444092, 'consistency': 2.6994431018829346, 'total_loss': -2.5733225345611572}], 'lowest_loss_head': 0, 'lowest_loss': -2.5733225345611572}
New lowest loss on validation set: -2.5585 -> -2.5733
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.1330686917500863, 'ARI': 0.04799776154185849, 'NMI': 0.4670601733587872, 'ACC Top-5': 0.2652744218156714, 'hungarian_match': [(0, 27), (1, 91), (2, 32), (3, 13), (4, 164), (5, 170), (6, 61), (7, 185), (8, 136), (9, 193), (10, 88), (11, 37), (12, 172), (13, 174), (14, 165), (15, 40), (16, 10), (17, 72), (18, 140), (19, 146), (20, 105), (21, 29), (22, 24), (23, 57), (24, 162), (25, 98), (26, 76), (27, 149), (28, 147), (29, 36), (30, 138), (31, 97), (32, 22), (33, 124), (34, 114), (35, 33), (36, 108), (37, 169), (38, 195), (39, 111), (40, 197), (41, 144), (42, 120), (43, 96), (44, 135), (45, 167), (46, 178), (47, 9), (48, 2), (49, 14), (50, 119), (51, 122), (52, 56), (53, 20), (54, 184), (55, 50), (56, 127), (57, 101), (58, 110), (59, 21), (60, 34), (61, 46), (62, 142), (63, 166), (64, 176), (65, 53), (66, 84), (67, 93), (68, 151), (69, 113), (70, 3), (71, 49), (72, 150), (73, 112), (74, 30), (75, 181), (76, 156), (77, 194), (78, 131), (79, 115), (80, 94), (81, 17), (82, 168), (83, 128), (84, 103), (85, 104), (86, 102), (87, 189), (88, 26), (89, 117), (90, 47), (91, 25), (92, 12), (93, 4), (94, 52), (95, 28), (96, 183), (97, 161), (98, 75), (99, 7), (100, 19), (101, 163), (102, 77), (103, 154), (104, 0), (105, 137), (106, 23), (107, 95), (108, 41), (109, 152), (110, 123), (111, 182), (112, 145), (113, 191), (114, 187), (115, 158), (116, 186), (117, 92), (118, 43), (119, 62), (120, 73), (121, 86), (122, 190), (123, 81), (124, 65), (125, 78), (126, 118), (127, 59), (128, 199), (129, 129), (130, 107), (131, 51), (132, 60), (133, 126), (134, 82), (135, 35), (136, 11), (137, 130), (138, 31), (139, 69), (140, 63), (141, 157), (142, 133), (143, 5), (144, 18), (145, 71), (146, 109), (147, 44), (148, 67), (149, 68), (150, 196), (151, 1), (152, 39), (153, 55), (154, 16), (155, 106), (156, 139), (157, 198), (158, 89), (159, 180), (160, 64), (161, 175), (162, 48), (163, 153), (164, 8), (165, 79), (166, 80), (167, 15), (168, 116), (169, 100), (170, 125), (171, 70), (172, 38), (173, 74), (174, 85), (175, 177), (176, 121), (177, 6), (178, 99), (179, 192), (180, 159), (181, 66), (182, 148), (183, 54), (184, 42), (185, 171), (186, 143), (187, 132), (188, 160), (189, 173), (190, 134), (191, 90), (192, 141), (193, 179), (194, 87), (195, 155), (196, 58), (197, 45), (198, 188), (199, 83)]}
Checkpoint ...
[33mEpoch 25/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [24][ 0/45]	Total Loss -2.2869e+01 (-2.2869e+01)	Consistency Loss 3.2688e+00 (3.2688e+00)	Entropy 5.2276e+00 (5.2276e+00)
Epoch: [24][25/45]	Total Loss -2.2718e+01 (-2.2836e+01)	Consistency Loss 3.5341e+00 (3.3826e+00)	Entropy 5.2504e+00 (5.2437e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.281979560852051, 'consistency': 2.682452917098999, 'total_loss': -2.5995266437530518}], 'lowest_loss_head': 0, 'lowest_loss': -2.5995266437530518}
New lowest loss on validation set: -2.5733 -> -2.5995
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13341387642388677, 'ARI': 0.04943578120517578, 'NMI': 0.4688784173832597, 'ACC Top-5': 0.2704521919226786, 'hungarian_match': [(0, 189), (1, 80), (2, 32), (3, 13), (4, 168), (5, 90), (6, 95), (7, 185), (8, 136), (9, 173), (10, 86), (11, 37), (12, 77), (13, 157), (14, 165), (15, 199), (16, 26), (17, 72), (18, 140), (19, 62), (20, 105), (21, 29), (22, 24), (23, 121), (24, 42), (25, 183), (26, 76), (27, 8), (28, 73), (29, 150), (30, 138), (31, 47), (32, 22), (33, 124), (34, 130), (35, 84), (36, 108), (37, 31), (38, 195), (39, 137), (40, 197), (41, 143), (42, 120), (43, 96), (44, 135), (45, 167), (46, 36), (47, 4), (48, 2), (49, 147), (50, 104), (51, 122), (52, 181), (53, 116), (54, 111), (55, 49), (56, 127), (57, 102), (58, 110), (59, 21), (60, 151), (61, 46), (62, 142), (63, 156), (64, 171), (65, 53), (66, 34), (67, 174), (68, 152), (69, 103), (70, 78), (71, 52), (72, 166), (73, 112), (74, 30), (75, 198), (76, 14), (77, 119), (78, 75), (79, 115), (80, 163), (81, 17), (82, 155), (83, 128), (84, 10), (85, 91), (86, 117), (87, 186), (88, 9), (89, 3), (90, 93), (91, 25), (92, 12), (93, 129), (94, 85), (95, 106), (96, 131), (97, 161), (98, 92), (99, 57), (100, 160), (101, 16), (102, 101), (103, 154), (104, 44), (105, 56), (106, 23), (107, 18), (108, 97), (109, 169), (110, 123), (111, 182), (112, 145), (113, 27), (114, 187), (115, 79), (116, 144), (117, 114), (118, 43), (119, 63), (120, 180), (121, 88), (122, 190), (123, 81), (124, 65), (125, 40), (126, 170), (127, 11), (128, 164), (129, 51), (130, 107), (131, 50), (132, 60), (133, 126), (134, 82), (135, 35), (136, 172), (137, 149), (138, 19), (139, 69), (140, 61), (141, 118), (142, 146), (143, 5), (144, 153), (145, 71), (146, 109), (147, 59), (148, 67), (149, 66), (150, 196), (151, 1), (152, 39), (153, 55), (154, 194), (155, 48), (156, 179), (157, 192), (158, 89), (159, 158), (160, 64), (161, 175), (162, 28), (163, 159), (164, 133), (165, 68), (166, 193), (167, 15), (168, 98), (169, 100), (170, 125), (171, 0), (172, 38), (173, 74), (174, 7), (175, 184), (176, 94), (177, 6), (178, 99), (179, 33), (180, 139), (181, 191), (182, 148), (183, 54), (184, 177), (185, 178), (186, 70), (187, 132), (188, 176), (189, 113), (190, 134), (191, 41), (192, 141), (193, 162), (194, 87), (195, 20), (196, 58), (197, 45), (198, 188), (199, 83)]}
Checkpoint ...
[33mEpoch 26/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [25][ 0/45]	Total Loss -2.2688e+01 (-2.2688e+01)	Consistency Loss 3.6306e+00 (3.6306e+00)	Entropy 5.2638e+00 (5.2638e+00)
Epoch: [25][25/45]	Total Loss -2.3048e+01 (-2.2850e+01)	Consistency Loss 3.1954e+00 (3.3731e+00)	Entropy 5.2487e+00 (5.2445e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.277462005615234, 'consistency': 2.651998996734619, 'total_loss': -2.6254630088806152}], 'lowest_loss_head': 0, 'lowest_loss': -2.6254630088806152}
New lowest loss on validation set: -2.5995 -> -2.6255
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13358646876078703, 'ARI': 0.049910013625620045, 'NMI': 0.46893259498263606, 'ACC Top-5': 0.26510182947877114, 'hungarian_match': [(0, 189), (1, 35), (2, 32), (3, 132), (4, 164), (5, 170), (6, 24), (7, 94), (8, 136), (9, 158), (10, 86), (11, 42), (12, 102), (13, 168), (14, 165), (15, 15), (16, 26), (17, 72), (18, 140), (19, 100), (20, 105), (21, 29), (22, 22), (23, 121), (24, 17), (25, 183), (26, 76), (27, 9), (28, 114), (29, 36), (30, 14), (31, 97), (32, 13), (33, 124), (34, 130), (35, 119), (36, 108), (37, 181), (38, 195), (39, 137), (40, 129), (41, 144), (42, 120), (43, 96), (44, 135), (45, 167), (46, 93), (47, 4), (48, 0), (49, 173), (50, 193), (51, 126), (52, 56), (53, 20), (54, 111), (55, 50), (56, 127), (57, 98), (58, 110), (59, 21), (60, 75), (61, 46), (62, 142), (63, 166), (64, 171), (65, 90), (66, 84), (67, 174), (68, 152), (69, 103), (70, 19), (71, 49), (72, 150), (73, 148), (74, 30), (75, 177), (76, 34), (77, 197), (78, 16), (79, 115), (80, 131), (81, 55), (82, 153), (83, 128), (84, 28), (85, 104), (86, 38), (87, 186), (88, 107), (89, 3), (90, 172), (91, 33), (92, 12), (93, 58), (94, 85), (95, 106), (96, 182), (97, 161), (98, 162), (99, 57), (100, 160), (101, 163), (102, 101), (103, 184), (104, 1), (105, 199), (106, 23), (107, 185), (108, 41), (109, 178), (110, 123), (111, 147), (112, 145), (113, 27), (114, 187), (115, 79), (116, 141), (117, 92), (118, 43), (119, 62), (120, 73), (121, 88), (122, 190), (123, 81), (124, 83), (125, 78), (126, 118), (127, 11), (128, 151), (129, 52), (130, 48), (131, 51), (132, 60), (133, 87), (134, 82), (135, 91), (136, 59), (137, 149), (138, 31), (139, 69), (140, 63), (141, 157), (142, 133), (143, 5), (144, 18), (145, 71), (146, 109), (147, 44), (148, 67), (149, 66), (150, 196), (151, 65), (152, 39), (153, 53), (154, 117), (155, 25), (156, 179), (157, 192), (158, 89), (159, 180), (160, 64), (161, 175), (162, 10), (163, 159), (164, 8), (165, 68), (166, 198), (167, 47), (168, 116), (169, 99), (170, 125), (171, 2), (172, 139), (173, 74), (174, 7), (175, 138), (176, 77), (177, 6), (178, 70), (179, 37), (180, 155), (181, 191), (182, 112), (183, 54), (184, 169), (185, 95), (186, 143), (187, 122), (188, 176), (189, 113), (190, 134), (191, 156), (192, 40), (193, 194), (194, 80), (195, 154), (196, 61), (197, 45), (198, 188), (199, 146)]}
Checkpoint ...
[33mEpoch 27/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [26][ 0/45]	Total Loss -2.2838e+01 (-2.2838e+01)	Consistency Loss 3.4102e+00 (3.4102e+00)	Entropy 5.2497e+00 (5.2497e+00)
Epoch: [26][25/45]	Total Loss -2.2767e+01 (-2.2802e+01)	Consistency Loss 3.3766e+00 (3.4080e+00)	Entropy 5.2287e+00 (5.2420e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.276533603668213, 'consistency': 2.6635777950286865, 'total_loss': -2.6129558086395264}], 'lowest_loss_head': 0, 'lowest_loss': -2.6129558086395264}
No new lowest loss on validation set: -2.6255 -> -2.6130
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13203313772868486, 'ARI': 0.04774615164572309, 'NMI': 0.4668595082266027, 'ACC Top-5': 0.27183293061788055, 'hungarian_match': [(0, 191), (1, 193), (2, 32), (3, 13), (4, 164), (5, 90), (6, 95), (7, 47), (8, 136), (9, 148), (10, 88), (11, 42), (12, 102), (13, 162), (14, 20), (15, 78), (16, 12), (17, 14), (18, 140), (19, 58), (20, 105), (21, 29), (22, 24), (23, 121), (24, 17), (25, 98), (26, 76), (27, 9), (28, 123), (29, 36), (30, 171), (31, 97), (32, 22), (33, 163), (34, 130), (35, 182), (36, 108), (37, 31), (38, 168), (39, 137), (40, 197), (41, 146), (42, 87), (43, 96), (44, 135), (45, 167), (46, 199), (47, 35), (48, 0), (49, 118), (50, 119), (51, 122), (52, 56), (53, 116), (54, 40), (55, 51), (56, 127), (57, 129), (58, 111), (59, 21), (60, 151), (61, 46), (62, 142), (63, 72), (64, 150), (65, 53), (66, 117), (67, 174), (68, 152), (69, 103), (70, 3), (71, 49), (72, 166), (73, 112), (74, 30), (75, 177), (76, 153), (77, 195), (78, 16), (79, 180), (80, 120), (81, 190), (82, 165), (83, 128), (84, 10), (85, 104), (86, 114), (87, 189), (88, 26), (89, 74), (90, 93), (91, 25), (92, 184), (93, 33), (94, 85), (95, 28), (96, 52), (97, 161), (98, 75), (99, 57), (100, 160), (101, 34), (102, 173), (103, 138), (104, 1), (105, 37), (106, 23), (107, 18), (108, 41), (109, 159), (110, 77), (111, 147), (112, 145), (113, 188), (114, 187), (115, 79), (116, 141), (117, 92), (118, 43), (119, 62), (120, 132), (121, 86), (122, 156), (123, 81), (124, 65), (125, 44), (126, 170), (127, 186), (128, 179), (129, 4), (130, 107), (131, 50), (132, 60), (133, 126), (134, 82), (135, 91), (136, 11), (137, 149), (138, 19), (139, 69), (140, 63), (141, 157), (142, 133), (143, 5), (144, 73), (145, 71), (146, 109), (147, 59), (148, 67), (149, 66), (150, 196), (151, 64), (152, 39), (153, 55), (154, 131), (155, 48), (156, 139), (157, 192), (158, 89), (159, 183), (160, 144), (161, 115), (162, 8), (163, 154), (164, 106), (165, 68), (166, 99), (167, 15), (168, 124), (169, 100), (170, 125), (171, 2), (172, 38), (173, 175), (174, 7), (175, 185), (176, 110), (177, 6), (178, 70), (179, 94), (180, 155), (181, 27), (182, 158), (183, 54), (184, 169), (185, 178), (186, 143), (187, 181), (188, 176), (189, 84), (190, 134), (191, 101), (192, 113), (193, 194), (194, 80), (195, 172), (196, 61), (197, 45), (198, 198), (199, 83)]}
Checkpoint ...
[33mEpoch 28/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [27][ 0/45]	Total Loss -2.2814e+01 (-2.2814e+01)	Consistency Loss 3.4398e+00 (3.4398e+00)	Entropy 5.2507e+00 (5.2507e+00)
Epoch: [27][25/45]	Total Loss -2.2841e+01 (-2.2859e+01)	Consistency Loss 3.3973e+00 (3.3586e+00)	Entropy 5.2478e+00 (5.2436e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.281113624572754, 'consistency': 2.671191930770874, 'total_loss': -2.60992169380188}], 'lowest_loss_head': 0, 'lowest_loss': -2.60992169380188}
No new lowest loss on validation set: -2.6255 -> -2.6099
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13410424577148775, 'ARI': 0.05046596457544095, 'NMI': 0.4691334181646091, 'ACC Top-5': 0.2707973765964791, 'hungarian_match': [(0, 27), (1, 35), (2, 32), (3, 12), (4, 168), (5, 34), (6, 136), (7, 47), (8, 191), (9, 158), (10, 88), (11, 37), (12, 102), (13, 162), (14, 165), (15, 181), (16, 25), (17, 163), (18, 140), (19, 92), (20, 105), (21, 26), (22, 24), (23, 70), (24, 173), (25, 183), (26, 76), (27, 29), (28, 114), (29, 150), (30, 171), (31, 79), (32, 9), (33, 124), (34, 130), (35, 55), (36, 108), (37, 155), (38, 195), (39, 111), (40, 4), (41, 115), (42, 80), (43, 164), (44, 135), (45, 167), (46, 36), (47, 100), (48, 0), (49, 14), (50, 119), (51, 122), (52, 129), (53, 148), (54, 40), (55, 50), (56, 127), (57, 38), (58, 110), (59, 33), (60, 118), (61, 46), (62, 142), (63, 72), (64, 56), (65, 13), (66, 84), (67, 174), (68, 152), (69, 113), (70, 19), (71, 49), (72, 166), (73, 112), (74, 154), (75, 177), (76, 30), (77, 197), (78, 96), (79, 180), (80, 116), (81, 17), (82, 153), (83, 128), (84, 104), (85, 91), (86, 117), (87, 189), (88, 106), (89, 90), (90, 93), (91, 103), (92, 184), (93, 182), (94, 85), (95, 28), (96, 18), (97, 161), (98, 75), (99, 57), (100, 160), (101, 16), (102, 134), (103, 172), (104, 1), (105, 137), (106, 23), (107, 94), (108, 41), (109, 22), (110, 123), (111, 147), (112, 145), (113, 188), (114, 187), (115, 169), (116, 141), (117, 6), (118, 43), (119, 62), (120, 98), (121, 86), (122, 156), (123, 81), (124, 83), (125, 78), (126, 170), (127, 11), (128, 199), (129, 52), (130, 107), (131, 51), (132, 60), (133, 126), (134, 82), (135, 193), (136, 3), (137, 149), (138, 31), (139, 69), (140, 61), (141, 151), (142, 133), (143, 5), (144, 73), (145, 71), (146, 109), (147, 59), (148, 67), (149, 101), (150, 196), (151, 65), (152, 39), (153, 144), (154, 194), (155, 48), (156, 54), (157, 192), (158, 89), (159, 157), (160, 64), (161, 175), (162, 10), (163, 159), (164, 8), (165, 68), (166, 198), (167, 15), (168, 121), (169, 99), (170, 125), (171, 2), (172, 139), (173, 74), (174, 7), (175, 185), (176, 97), (177, 66), (178, 44), (179, 186), (180, 138), (181, 190), (182, 87), (183, 95), (184, 42), (185, 178), (186, 143), (187, 132), (188, 176), (189, 53), (190, 131), (191, 77), (192, 63), (193, 179), (194, 120), (195, 20), (196, 58), (197, 45), (198, 21), (199, 146)]}
Checkpoint ...
[33mEpoch 29/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [28][ 0/45]	Total Loss -2.2924e+01 (-2.2924e+01)	Consistency Loss 3.3302e+00 (3.3302e+00)	Entropy 5.2508e+00 (5.2508e+00)
Epoch: [28][25/45]	Total Loss -2.3082e+01 (-2.2862e+01)	Consistency Loss 3.1112e+00 (3.3428e+00)	Entropy 5.2386e+00 (5.2409e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.2806220054626465, 'consistency': 2.6444413661956787, 'total_loss': -2.6361806392669678}], 'lowest_loss_head': 0, 'lowest_loss': -2.6361806392669678}
New lowest loss on validation set: -2.6255 -> -2.6362
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.1363479461511909, 'ARI': 0.049340510451447356, 'NMI': 0.4707937623230607, 'ACC Top-5': 0.27632033137728684, 'hungarian_match': [(0, 27), (1, 35), (2, 31), (3, 13), (4, 164), (5, 129), (6, 104), (7, 185), (8, 191), (9, 158), (10, 86), (11, 42), (12, 102), (13, 168), (14, 165), (15, 78), (16, 12), (17, 72), (18, 140), (19, 92), (20, 105), (21, 9), (22, 24), (23, 186), (24, 173), (25, 98), (26, 76), (27, 29), (28, 114), (29, 159), (30, 94), (31, 97), (32, 15), (33, 124), (34, 17), (35, 182), (36, 108), (37, 169), (38, 195), (39, 137), (40, 4), (41, 146), (42, 130), (43, 93), (44, 135), (45, 167), (46, 36), (47, 136), (48, 0), (49, 14), (50, 119), (51, 122), (52, 95), (53, 116), (54, 40), (55, 52), (56, 127), (57, 90), (58, 110), (59, 33), (60, 151), (61, 46), (62, 142), (63, 156), (64, 56), (65, 96), (66, 84), (67, 174), (68, 152), (69, 103), (70, 148), (71, 49), (72, 166), (73, 112), (74, 30), (75, 177), (76, 190), (77, 197), (78, 131), (79, 115), (80, 120), (81, 100), (82, 153), (83, 128), (84, 28), (85, 91), (86, 117), (87, 189), (88, 26), (89, 3), (90, 157), (91, 25), (92, 111), (93, 53), (94, 85), (95, 107), (96, 183), (97, 161), (98, 75), (99, 57), (100, 160), (101, 163), (102, 87), (103, 138), (104, 1), (105, 34), (106, 23), (107, 18), (108, 41), (109, 20), (110, 123), (111, 147), (112, 145), (113, 188), (114, 187), (115, 79), (116, 144), (117, 6), (118, 43), (119, 59), (120, 132), (121, 88), (122, 155), (123, 81), (124, 65), (125, 62), (126, 170), (127, 11), (128, 199), (129, 192), (130, 48), (131, 50), (132, 60), (133, 126), (134, 82), (135, 198), (136, 32), (137, 149), (138, 19), (139, 69), (140, 61), (141, 118), (142, 133), (143, 5), (144, 73), (145, 71), (146, 109), (147, 44), (148, 67), (149, 172), (150, 196), (151, 141), (152, 39), (153, 55), (154, 194), (155, 106), (156, 139), (157, 16), (158, 89), (159, 180), (160, 64), (161, 175), (162, 10), (163, 184), (164, 8), (165, 68), (166, 51), (167, 47), (168, 121), (169, 99), (170, 125), (171, 2), (172, 38), (173, 74), (174, 7), (175, 37), (176, 77), (177, 66), (178, 70), (179, 150), (180, 171), (181, 22), (182, 193), (183, 54), (184, 162), (185, 178), (186, 143), (187, 181), (188, 176), (189, 113), (190, 134), (191, 101), (192, 63), (193, 179), (194, 80), (195, 154), (196, 58), (197, 45), (198, 21), (199, 83)]}
Checkpoint ...
[33mEpoch 30/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [29][ 0/45]	Total Loss -2.2956e+01 (-2.2956e+01)	Consistency Loss 3.2918e+00 (3.2918e+00)	Entropy 5.2495e+00 (5.2495e+00)
Epoch: [29][25/45]	Total Loss -2.2996e+01 (-2.2896e+01)	Consistency Loss 3.2260e+00 (3.3154e+00)	Entropy 5.2445e+00 (5.2423e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.278996467590332, 'consistency': 2.603816270828247, 'total_loss': -2.675180196762085}], 'lowest_loss_head': 0, 'lowest_loss': -2.675180196762085}
New lowest loss on validation set: -2.6362 -> -2.6752
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13289609941318606, 'ARI': 0.04721150437799707, 'NMI': 0.46781692504424255, 'ACC Top-5': 0.2702795995857784, 'hungarian_match': [(0, 191), (1, 35), (2, 32), (3, 12), (4, 155), (5, 90), (6, 197), (7, 41), (8, 136), (9, 173), (10, 86), (11, 37), (12, 102), (13, 158), (14, 165), (15, 78), (16, 26), (17, 14), (18, 140), (19, 92), (20, 105), (21, 28), (22, 24), (23, 20), (24, 162), (25, 183), (26, 76), (27, 149), (28, 123), (29, 150), (30, 53), (31, 47), (32, 13), (33, 124), (34, 114), (35, 182), (36, 108), (37, 31), (38, 195), (39, 111), (40, 4), (41, 146), (42, 130), (43, 96), (44, 75), (45, 167), (46, 36), (47, 186), (48, 0), (49, 118), (50, 198), (51, 122), (52, 95), (53, 116), (54, 40), (55, 49), (56, 127), (57, 175), (58, 110), (59, 33), (60, 171), (61, 46), (62, 142), (63, 166), (64, 56), (65, 119), (66, 121), (67, 174), (68, 151), (69, 25), (70, 3), (71, 50), (72, 180), (73, 112), (74, 30), (75, 177), (76, 144), (77, 148), (78, 18), (79, 178), (80, 120), (81, 55), (82, 168), (83, 128), (84, 103), (85, 104), (86, 192), (87, 189), (88, 29), (89, 72), (90, 159), (91, 87), (92, 184), (93, 129), (94, 85), (95, 106), (96, 152), (97, 164), (98, 131), (99, 57), (100, 161), (101, 42), (102, 101), (103, 77), (104, 1), (105, 137), (106, 23), (107, 97), (108, 135), (109, 9), (110, 113), (111, 147), (112, 63), (113, 188), (114, 187), (115, 79), (116, 70), (117, 6), (118, 43), (119, 62), (120, 132), (121, 88), (122, 190), (123, 81), (124, 65), (125, 44), (126, 170), (127, 11), (128, 199), (129, 52), (130, 107), (131, 51), (132, 60), (133, 126), (134, 82), (135, 91), (136, 172), (137, 115), (138, 19), (139, 69), (140, 61), (141, 157), (142, 133), (143, 5), (144, 73), (145, 71), (146, 109), (147, 59), (148, 93), (149, 66), (150, 196), (151, 194), (152, 39), (153, 176), (154, 117), (155, 48), (156, 139), (157, 16), (158, 89), (159, 163), (160, 64), (161, 34), (162, 10), (163, 153), (164, 8), (165, 68), (166, 99), (167, 15), (168, 98), (169, 100), (170, 125), (171, 2), (172, 38), (173, 74), (174, 7), (175, 185), (176, 94), (177, 67), (178, 145), (179, 17), (180, 138), (181, 27), (182, 193), (183, 54), (184, 169), (185, 160), (186, 143), (187, 181), (188, 22), (189, 84), (190, 134), (191, 156), (192, 141), (193, 179), (194, 80), (195, 154), (196, 58), (197, 45), (198, 21), (199, 83)]}
Checkpoint ...
[33mEpoch 31/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [30][ 0/45]	Total Loss -2.2853e+01 (-2.2853e+01)	Consistency Loss 3.3399e+00 (3.3399e+00)	Entropy 5.2386e+00 (5.2386e+00)
Epoch: [30][25/45]	Total Loss -2.2927e+01 (-2.2876e+01)	Consistency Loss 3.3224e+00 (3.3169e+00)	Entropy 5.2498e+00 (5.2386e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.277599811553955, 'consistency': 2.606142997741699, 'total_loss': -2.671456813812256}], 'lowest_loss_head': 0, 'lowest_loss': -2.671456813812256}
No new lowest loss on validation set: -2.6752 -> -2.6715
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.1318605453917846, 'ARI': 0.048678091994428456, 'NMI': 0.4679558989098079, 'ACC Top-5': 0.2547462892647566, 'hungarian_match': [(0, 189), (1, 193), (2, 32), (3, 12), (4, 196), (5, 90), (6, 24), (7, 185), (8, 136), (9, 158), (10, 88), (11, 37), (12, 197), (13, 168), (14, 165), (15, 78), (16, 26), (17, 14), (18, 140), (19, 65), (20, 105), (21, 29), (22, 22), (23, 92), (24, 173), (25, 183), (26, 76), (27, 8), (28, 114), (29, 150), (30, 138), (31, 74), (32, 13), (33, 124), (34, 130), (35, 55), (36, 108), (37, 181), (38, 195), (39, 113), (40, 4), (41, 144), (42, 80), (43, 96), (44, 135), (45, 116), (46, 155), (47, 133), (48, 0), (49, 172), (50, 198), (51, 122), (52, 19), (53, 20), (54, 11), (55, 52), (56, 127), (57, 101), (58, 110), (59, 121), (60, 171), (61, 46), (62, 142), (63, 156), (64, 56), (65, 15), (66, 75), (67, 174), (68, 151), (69, 103), (70, 3), (71, 186), (72, 97), (73, 112), (74, 30), (75, 192), (76, 191), (77, 148), (78, 16), (79, 115), (80, 118), (81, 10), (82, 166), (83, 128), (84, 33), (85, 104), (86, 102), (87, 27), (88, 9), (89, 72), (90, 157), (91, 70), (92, 184), (93, 129), (94, 85), (95, 28), (96, 182), (97, 161), (98, 131), (99, 57), (100, 177), (101, 163), (102, 134), (103, 154), (104, 1), (105, 137), (106, 23), (107, 95), (108, 159), (109, 190), (110, 123), (111, 147), (112, 145), (113, 188), (114, 187), (115, 79), (116, 141), (117, 6), (118, 43), (119, 44), (120, 73), (121, 86), (122, 42), (123, 81), (124, 62), (125, 41), (126, 170), (127, 49), (128, 164), (129, 167), (130, 107), (131, 51), (132, 60), (133, 120), (134, 40), (135, 35), (136, 162), (137, 149), (138, 31), (139, 69), (140, 61), (141, 36), (142, 146), (143, 5), (144, 18), (145, 71), (146, 109), (147, 59), (148, 93), (149, 87), (150, 199), (151, 63), (152, 39), (153, 153), (154, 194), (155, 25), (156, 54), (157, 34), (158, 89), (159, 180), (160, 64), (161, 175), (162, 48), (163, 178), (164, 106), (165, 68), (166, 99), (167, 47), (168, 98), (169, 100), (170, 125), (171, 2), (172, 38), (173, 82), (174, 7), (175, 53), (176, 77), (177, 67), (178, 143), (179, 17), (180, 152), (181, 66), (182, 119), (183, 94), (184, 169), (185, 160), (186, 91), (187, 132), (188, 176), (189, 84), (190, 111), (191, 117), (192, 50), (193, 179), (194, 126), (195, 139), (196, 58), (197, 45), (198, 21), (199, 83)]}
Checkpoint ...
[33mEpoch 32/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [31][ 0/45]	Total Loss -2.2927e+01 (-2.2927e+01)	Consistency Loss 3.3128e+00 (3.3128e+00)	Entropy 5.2481e+00 (5.2481e+00)
Epoch: [31][25/45]	Total Loss -2.2795e+01 (-2.2916e+01)	Consistency Loss 3.4112e+00 (3.2967e+00)	Entropy 5.2412e+00 (5.2426e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.2806715965271, 'consistency': 2.582188367843628, 'total_loss': -2.6984832286834717}], 'lowest_loss_head': 0, 'lowest_loss': -2.6984832286834717}
New lowest loss on validation set: -2.6752 -> -2.6985
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13203313772868486, 'ARI': 0.048737700782768636, 'NMI': 0.4674944852551407, 'ACC Top-5': 0.26717293752157406, 'hungarian_match': [(0, 27), (1, 35), (2, 31), (3, 12), (4, 168), (5, 103), (6, 24), (7, 185), (8, 136), (9, 173), (10, 86), (11, 37), (12, 172), (13, 157), (14, 165), (15, 199), (16, 186), (17, 163), (18, 140), (19, 92), (20, 105), (21, 29), (22, 22), (23, 121), (24, 158), (25, 183), (26, 76), (27, 8), (28, 114), (29, 36), (30, 94), (31, 47), (32, 53), (33, 124), (34, 17), (35, 84), (36, 108), (37, 155), (38, 195), (39, 137), (40, 4), (41, 146), (42, 130), (43, 96), (44, 135), (45, 147), (46, 152), (47, 100), (48, 0), (49, 164), (50, 198), (51, 122), (52, 181), (53, 116), (54, 111), (55, 49), (56, 127), (57, 90), (58, 110), (59, 21), (60, 79), (61, 46), (62, 142), (63, 156), (64, 56), (65, 15), (66, 75), (67, 174), (68, 151), (69, 10), (70, 3), (71, 51), (72, 166), (73, 112), (74, 30), (75, 177), (76, 14), (77, 197), (78, 18), (79, 115), (80, 120), (81, 81), (82, 176), (83, 128), (84, 71), (85, 104), (86, 102), (87, 189), (88, 107), (89, 72), (90, 38), (91, 25), (92, 184), (93, 129), (94, 85), (95, 28), (96, 33), (97, 167), (98, 131), (99, 57), (100, 161), (101, 42), (102, 101), (103, 77), (104, 1), (105, 16), (106, 23), (107, 95), (108, 191), (109, 159), (110, 123), (111, 182), (112, 145), (113, 188), (114, 187), (115, 169), (116, 144), (117, 6), (118, 43), (119, 65), (120, 180), (121, 88), (122, 66), (123, 40), (124, 62), (125, 78), (126, 170), (127, 11), (128, 179), (129, 98), (130, 26), (131, 50), (132, 60), (133, 126), (134, 82), (135, 91), (136, 32), (137, 149), (138, 19), (139, 69), (140, 61), (141, 118), (142, 133), (143, 5), (144, 73), (145, 70), (146, 109), (147, 59), (148, 93), (149, 87), (150, 196), (151, 141), (152, 134), (153, 153), (154, 117), (155, 9), (156, 139), (157, 192), (158, 89), (159, 150), (160, 64), (161, 175), (162, 48), (163, 20), (164, 106), (165, 68), (166, 193), (167, 34), (168, 148), (169, 99), (170, 125), (171, 2), (172, 13), (173, 74), (174, 7), (175, 171), (176, 97), (177, 67), (178, 44), (179, 55), (180, 138), (181, 190), (182, 119), (183, 54), (184, 194), (185, 178), (186, 143), (187, 132), (188, 160), (189, 113), (190, 39), (191, 41), (192, 63), (193, 162), (194, 80), (195, 154), (196, 58), (197, 45), (198, 52), (199, 83)]}
Checkpoint ...
[33mEpoch 33/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [32][ 0/45]	Total Loss -2.2854e+01 (-2.2854e+01)	Consistency Loss 3.2869e+00 (3.2869e+00)	Entropy 5.2283e+00 (5.2283e+00)
Epoch: [32][25/45]	Total Loss -2.2947e+01 (-2.2889e+01)	Consistency Loss 3.2696e+00 (3.3008e+00)	Entropy 5.2434e+00 (5.2380e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.283054351806641, 'consistency': 2.577650308609009, 'total_loss': -2.705404043197632}], 'lowest_loss_head': 0, 'lowest_loss': -2.705404043197632}
New lowest loss on validation set: -2.6985 -> -2.7054
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13375906109768726, 'ARI': 0.04651688865256669, 'NMI': 0.468298475318766, 'ACC Top-5': 0.2726958923023818, 'hungarian_match': [(0, 27), (1, 193), (2, 31), (3, 13), (4, 175), (5, 90), (6, 57), (7, 102), (8, 136), (9, 158), (10, 86), (11, 42), (12, 197), (13, 168), (14, 165), (15, 181), (16, 26), (17, 72), (18, 140), (19, 92), (20, 83), (21, 29), (22, 24), (23, 121), (24, 162), (25, 183), (26, 76), (27, 10), (28, 73), (29, 150), (30, 53), (31, 47), (32, 78), (33, 124), (34, 130), (35, 182), (36, 108), (37, 149), (38, 195), (39, 111), (40, 4), (41, 146), (42, 126), (43, 96), (44, 135), (45, 147), (46, 199), (47, 123), (48, 2), (49, 14), (50, 198), (51, 122), (52, 15), (53, 20), (54, 40), (55, 52), (56, 127), (57, 98), (58, 110), (59, 33), (60, 118), (61, 46), (62, 142), (63, 166), (64, 56), (65, 119), (66, 84), (67, 174), (68, 151), (69, 103), (70, 3), (71, 49), (72, 171), (73, 75), (74, 30), (75, 177), (76, 191), (77, 194), (78, 18), (79, 159), (80, 116), (81, 81), (82, 153), (83, 128), (84, 28), (85, 91), (86, 114), (87, 189), (88, 9), (89, 74), (90, 179), (91, 87), (92, 12), (93, 44), (94, 85), (95, 106), (96, 186), (97, 167), (98, 131), (99, 105), (100, 161), (101, 101), (102, 173), (103, 172), (104, 1), (105, 137), (106, 23), (107, 94), (108, 41), (109, 152), (110, 37), (111, 148), (112, 141), (113, 188), (114, 187), (115, 79), (116, 70), (117, 6), (118, 43), (119, 62), (120, 180), (121, 88), (122, 156), (123, 134), (124, 65), (125, 104), (126, 170), (127, 11), (128, 164), (129, 129), (130, 107), (131, 51), (132, 60), (133, 120), (134, 190), (135, 35), (136, 32), (137, 115), (138, 19), (139, 69), (140, 61), (141, 36), (142, 133), (143, 5), (144, 178), (145, 71), (146, 109), (147, 58), (148, 93), (149, 66), (150, 196), (151, 63), (152, 77), (153, 55), (154, 16), (155, 48), (156, 139), (157, 192), (158, 89), (159, 163), (160, 64), (161, 117), (162, 8), (163, 184), (164, 25), (165, 68), (166, 99), (167, 34), (168, 157), (169, 100), (170, 125), (171, 0), (172, 38), (173, 82), (174, 7), (175, 185), (176, 97), (177, 67), (178, 145), (179, 95), (180, 138), (181, 22), (182, 112), (183, 54), (184, 169), (185, 160), (186, 143), (187, 132), (188, 176), (189, 113), (190, 39), (191, 155), (192, 50), (193, 17), (194, 80), (195, 154), (196, 59), (197, 45), (198, 21), (199, 144)]}
Checkpoint ...
[33mEpoch 34/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [33][ 0/45]	Total Loss -2.2798e+01 (-2.2798e+01)	Consistency Loss 3.4878e+00 (3.4878e+00)	Entropy 5.2571e+00 (5.2571e+00)
Epoch: [33][25/45]	Total Loss -2.3043e+01 (-2.2880e+01)	Consistency Loss 3.1673e+00 (3.3191e+00)	Entropy 5.2421e+00 (5.2399e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.284119129180908, 'consistency': 2.575680732727051, 'total_loss': -2.7084383964538574}], 'lowest_loss_head': 0, 'lowest_loss': -2.7084383964538574}
New lowest loss on validation set: -2.7054 -> -2.7084
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13324128408698654, 'ARI': 0.04882752310643815, 'NMI': 0.46882537203226066, 'ACC Top-5': 0.26682775284777355, 'hungarian_match': [(0, 27), (1, 35), (2, 32), (3, 12), (4, 196), (5, 117), (6, 24), (7, 190), (8, 136), (9, 158), (10, 88), (11, 37), (12, 90), (13, 168), (14, 165), (15, 46), (16, 26), (17, 14), (18, 140), (19, 65), (20, 105), (21, 9), (22, 23), (23, 92), (24, 173), (25, 182), (26, 76), (27, 149), (28, 73), (29, 150), (30, 53), (31, 97), (32, 13), (33, 124), (34, 130), (35, 55), (36, 108), (37, 169), (38, 195), (39, 111), (40, 4), (41, 146), (42, 80), (43, 96), (44, 135), (45, 167), (46, 36), (47, 52), (48, 2), (49, 72), (50, 198), (51, 122), (52, 95), (53, 20), (54, 11), (55, 49), (56, 127), (57, 17), (58, 47), (59, 113), (60, 171), (61, 77), (62, 142), (63, 156), (64, 56), (65, 172), (66, 34), (67, 174), (68, 152), (69, 103), (70, 148), (71, 104), (72, 166), (73, 112), (74, 30), (75, 177), (76, 191), (77, 197), (78, 18), (79, 159), (80, 129), (81, 10), (82, 164), (83, 128), (84, 28), (85, 91), (86, 102), (87, 189), (88, 29), (89, 3), (90, 151), (91, 87), (92, 31), (93, 194), (94, 85), (95, 25), (96, 183), (97, 199), (98, 131), (99, 57), (100, 161), (101, 163), (102, 101), (103, 154), (104, 1), (105, 137), (106, 116), (107, 94), (108, 41), (109, 176), (110, 123), (111, 147), (112, 63), (113, 188), (114, 187), (115, 79), (116, 70), (117, 6), (118, 43), (119, 62), (120, 132), (121, 86), (122, 69), (123, 81), (124, 83), (125, 44), (126, 170), (127, 78), (128, 179), (129, 98), (130, 107), (131, 51), (132, 60), (133, 126), (134, 40), (135, 193), (136, 74), (137, 115), (138, 19), (139, 66), (140, 61), (141, 118), (142, 133), (143, 5), (144, 153), (145, 71), (146, 109), (147, 59), (148, 93), (149, 100), (150, 114), (151, 64), (152, 39), (153, 75), (154, 16), (155, 48), (156, 139), (157, 192), (158, 89), (159, 180), (160, 145), (161, 175), (162, 8), (163, 184), (164, 106), (165, 68), (166, 33), (167, 15), (168, 157), (169, 99), (170, 125), (171, 0), (172, 38), (173, 82), (174, 7), (175, 185), (176, 121), (177, 67), (178, 141), (179, 186), (180, 138), (181, 22), (182, 119), (183, 54), (184, 42), (185, 178), (186, 143), (187, 181), (188, 160), (189, 84), (190, 134), (191, 110), (192, 50), (193, 162), (194, 120), (195, 155), (196, 58), (197, 45), (198, 21), (199, 144)]}
Checkpoint ...
[33mEpoch 35/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [34][ 0/45]	Total Loss -2.3029e+01 (-2.3029e+01)	Consistency Loss 3.2341e+00 (3.2341e+00)	Entropy 5.2526e+00 (5.2526e+00)
Epoch: [34][25/45]	Total Loss -2.2926e+01 (-2.2934e+01)	Consistency Loss 3.2199e+00 (3.2705e+00)	Entropy 5.2291e+00 (5.2409e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.278970718383789, 'consistency': 2.577908515930176, 'total_loss': -2.7010622024536133}], 'lowest_loss_head': 0, 'lowest_loss': -2.7010622024536133}
No new lowest loss on validation set: -2.7084 -> -2.7011
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13479461511908872, 'ARI': 0.05059034756656779, 'NMI': 0.47140676415625793, 'ACC Top-5': 0.2711425612702796, 'hungarian_match': [(0, 27), (1, 193), (2, 32), (3, 13), (4, 164), (5, 90), (6, 24), (7, 185), (8, 105), (9, 129), (10, 88), (11, 37), (12, 196), (13, 168), (14, 165), (15, 139), (16, 26), (17, 163), (18, 140), (19, 92), (20, 83), (21, 9), (22, 23), (23, 7), (24, 158), (25, 131), (26, 76), (27, 148), (28, 73), (29, 150), (30, 138), (31, 47), (32, 97), (33, 124), (34, 130), (35, 182), (36, 108), (37, 31), (38, 195), (39, 194), (40, 4), (41, 146), (42, 126), (43, 96), (44, 135), (45, 167), (46, 155), (47, 141), (48, 0), (49, 14), (50, 183), (51, 122), (52, 82), (53, 116), (54, 111), (55, 49), (56, 127), (57, 12), (58, 110), (59, 33), (60, 79), (61, 46), (62, 142), (63, 156), (64, 56), (65, 15), (66, 179), (67, 174), (68, 152), (69, 103), (70, 3), (71, 186), (72, 166), (73, 112), (74, 30), (75, 177), (76, 114), (77, 197), (78, 18), (79, 159), (80, 34), (81, 190), (82, 173), (83, 128), (84, 28), (85, 104), (86, 102), (87, 189), (88, 29), (89, 72), (90, 157), (91, 87), (92, 184), (93, 75), (94, 52), (95, 25), (96, 100), (97, 36), (98, 198), (99, 57), (100, 161), (101, 42), (102, 134), (103, 154), (104, 1), (105, 137), (106, 59), (107, 94), (108, 41), (109, 176), (110, 123), (111, 147), (112, 10), (113, 188), (114, 187), (115, 169), (116, 70), (117, 6), (118, 43), (119, 62), (120, 132), (121, 86), (122, 113), (123, 81), (124, 65), (125, 136), (126, 170), (127, 11), (128, 153), (129, 98), (130, 107), (131, 50), (132, 60), (133, 120), (134, 40), (135, 35), (136, 172), (137, 149), (138, 19), (139, 69), (140, 61), (141, 118), (142, 133), (143, 5), (144, 78), (145, 71), (146, 109), (147, 44), (148, 93), (149, 66), (150, 199), (151, 64), (152, 77), (153, 55), (154, 16), (155, 48), (156, 54), (157, 192), (158, 89), (159, 180), (160, 145), (161, 115), (162, 8), (163, 20), (164, 106), (165, 68), (166, 51), (167, 151), (168, 117), (169, 99), (170, 125), (171, 2), (172, 38), (173, 74), (174, 85), (175, 53), (176, 121), (177, 67), (178, 143), (179, 17), (180, 171), (181, 22), (182, 119), (183, 95), (184, 191), (185, 175), (186, 91), (187, 181), (188, 160), (189, 84), (190, 39), (191, 101), (192, 63), (193, 162), (194, 80), (195, 178), (196, 58), (197, 45), (198, 21), (199, 144)]}
Checkpoint ...
[33mEpoch 36/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [35][ 0/45]	Total Loss -2.3031e+01 (-2.3031e+01)	Consistency Loss 3.2015e+00 (3.2015e+00)	Entropy 5.2464e+00 (5.2464e+00)
Epoch: [35][25/45]	Total Loss -2.3108e+01 (-2.2942e+01)	Consistency Loss 3.1243e+00 (3.2467e+00)	Entropy 5.2464e+00 (5.2378e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.2787981033325195, 'consistency': 2.557610511779785, 'total_loss': -2.7211875915527344}], 'lowest_loss_head': 0, 'lowest_loss': -2.7211875915527344}
New lowest loss on validation set: -2.7084 -> -2.7212
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13324128408698654, 'ARI': 0.04768408953521249, 'NMI': 0.46660096444571486, 'ACC Top-5': 0.26717293752157406, 'hungarian_match': [(0, 27), (1, 193), (2, 32), (3, 12), (4, 196), (5, 173), (6, 23), (7, 185), (8, 105), (9, 129), (10, 88), (11, 102), (12, 77), (13, 168), (14, 153), (15, 181), (16, 26), (17, 72), (18, 140), (19, 143), (20, 83), (21, 106), (22, 24), (23, 20), (24, 162), (25, 182), (26, 76), (27, 29), (28, 73), (29, 150), (30, 56), (31, 47), (32, 13), (33, 124), (34, 126), (35, 194), (36, 176), (37, 172), (38, 195), (39, 137), (40, 6), (41, 146), (42, 80), (43, 96), (44, 131), (45, 15), (46, 155), (47, 4), (48, 0), (49, 14), (50, 119), (51, 149), (52, 79), (53, 116), (54, 40), (55, 49), (56, 127), (57, 101), (58, 110), (59, 113), (60, 118), (61, 46), (62, 142), (63, 152), (64, 171), (65, 37), (66, 121), (67, 174), (68, 75), (69, 103), (70, 3), (71, 52), (72, 166), (73, 112), (74, 30), (75, 177), (76, 190), (77, 197), (78, 16), (79, 159), (80, 36), (81, 55), (82, 165), (83, 128), (84, 28), (85, 91), (86, 117), (87, 189), (88, 9), (89, 90), (90, 151), (91, 70), (92, 31), (93, 175), (94, 85), (95, 25), (96, 100), (97, 167), (98, 35), (99, 57), (100, 161), (101, 163), (102, 69), (103, 154), (104, 1), (105, 135), (106, 186), (107, 95), (108, 139), (109, 180), (110, 123), (111, 147), (112, 145), (113, 188), (114, 187), (115, 169), (116, 136), (117, 10), (118, 43), (119, 61), (120, 132), (121, 86), (122, 156), (123, 134), (124, 65), (125, 78), (126, 170), (127, 11), (128, 164), (129, 183), (130, 107), (131, 50), (132, 58), (133, 120), (134, 82), (135, 198), (136, 74), (137, 130), (138, 19), (139, 191), (140, 60), (141, 158), (142, 92), (143, 5), (144, 18), (145, 71), (146, 109), (147, 62), (148, 93), (149, 66), (150, 114), (151, 104), (152, 39), (153, 53), (154, 51), (155, 48), (156, 54), (157, 192), (158, 89), (159, 157), (160, 64), (161, 115), (162, 8), (163, 108), (164, 133), (165, 68), (166, 33), (167, 34), (168, 98), (169, 99), (170, 125), (171, 2), (172, 38), (173, 81), (174, 7), (175, 199), (176, 94), (177, 67), (178, 141), (179, 17), (180, 138), (181, 22), (182, 148), (183, 97), (184, 42), (185, 178), (186, 44), (187, 122), (188, 160), (189, 84), (190, 111), (191, 41), (192, 63), (193, 179), (194, 87), (195, 184), (196, 59), (197, 45), (198, 21), (199, 144)]}
Checkpoint ...
[33mEpoch 37/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [36][ 0/45]	Total Loss -2.2878e+01 (-2.2878e+01)	Consistency Loss 3.2914e+00 (3.2914e+00)	Entropy 5.2339e+00 (5.2339e+00)
Epoch: [36][25/45]	Total Loss -2.3014e+01 (-2.2925e+01)	Consistency Loss 3.1861e+00 (3.2621e+00)	Entropy 5.2400e+00 (5.2374e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.278453350067139, 'consistency': 2.570427417755127, 'total_loss': -2.7080259323120117}], 'lowest_loss_head': 0, 'lowest_loss': -2.7080259323120117}
No new lowest loss on validation set: -2.7212 -> -2.7080
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13255091473938557, 'ARI': 0.04724096945606407, 'NMI': 0.4679456636704591, 'ACC Top-5': 0.27562996202968587, 'hungarian_match': [(0, 189), (1, 193), (2, 31), (3, 12), (4, 160), (5, 90), (6, 24), (7, 94), (8, 105), (9, 173), (10, 88), (11, 37), (12, 113), (13, 158), (14, 165), (15, 181), (16, 57), (17, 72), (18, 140), (19, 58), (20, 83), (21, 29), (22, 107), (23, 136), (24, 162), (25, 182), (26, 76), (27, 26), (28, 73), (29, 150), (30, 138), (31, 47), (32, 13), (33, 124), (34, 114), (35, 194), (36, 108), (37, 169), (38, 195), (39, 11), (40, 6), (41, 146), (42, 80), (43, 96), (44, 135), (45, 167), (46, 155), (47, 133), (48, 0), (49, 14), (50, 198), (51, 112), (52, 53), (53, 116), (54, 40), (55, 49), (56, 127), (57, 129), (58, 110), (59, 21), (60, 171), (61, 46), (62, 144), (63, 156), (64, 56), (65, 125), (66, 34), (67, 174), (68, 152), (69, 25), (70, 190), (71, 85), (72, 166), (73, 87), (74, 30), (75, 177), (76, 151), (77, 197), (78, 117), (79, 159), (80, 175), (81, 55), (82, 164), (83, 128), (84, 4), (85, 104), (86, 102), (87, 27), (88, 9), (89, 3), (90, 75), (91, 103), (92, 184), (93, 44), (94, 52), (95, 28), (96, 183), (97, 36), (98, 35), (99, 50), (100, 161), (101, 42), (102, 134), (103, 154), (104, 1), (105, 137), (106, 23), (107, 95), (108, 41), (109, 20), (110, 123), (111, 147), (112, 100), (113, 188), (114, 187), (115, 79), (116, 70), (117, 92), (118, 43), (119, 62), (120, 132), (121, 86), (122, 77), (123, 81), (124, 65), (125, 196), (126, 170), (127, 78), (128, 179), (129, 98), (130, 106), (131, 51), (132, 60), (133, 126), (134, 82), (135, 91), (136, 172), (137, 130), (138, 19), (139, 69), (140, 61), (141, 118), (142, 131), (143, 5), (144, 18), (145, 71), (146, 109), (147, 59), (148, 93), (149, 66), (150, 199), (151, 141), (152, 39), (153, 153), (154, 16), (155, 48), (156, 139), (157, 168), (158, 89), (159, 163), (160, 145), (161, 115), (162, 8), (163, 180), (164, 10), (165, 68), (166, 33), (167, 15), (168, 157), (169, 99), (170, 149), (171, 2), (172, 38), (173, 74), (174, 7), (175, 185), (176, 121), (177, 67), (178, 142), (179, 148), (180, 32), (181, 22), (182, 119), (183, 54), (184, 191), (185, 178), (186, 143), (187, 122), (188, 176), (189, 84), (190, 111), (191, 101), (192, 64), (193, 17), (194, 120), (195, 97), (196, 63), (197, 45), (198, 186), (199, 192)]}
Checkpoint ...
[33mEpoch 38/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [37][ 0/45]	Total Loss -2.3067e+01 (-2.3067e+01)	Consistency Loss 3.1596e+00 (3.1596e+00)	Entropy 5.2453e+00 (5.2453e+00)
Epoch: [37][25/45]	Total Loss -2.3000e+01 (-2.2951e+01)	Consistency Loss 3.0922e+00 (3.2110e+00)	Entropy 5.2185e+00 (5.2324e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.279320240020752, 'consistency': 2.545614242553711, 'total_loss': -2.733705997467041}], 'lowest_loss_head': 0, 'lowest_loss': -2.733705997467041}
New lowest loss on validation set: -2.7212 -> -2.7337
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13444943044528823, 'ARI': 0.049118080763609594, 'NMI': 0.4689190070223857, 'ACC Top-5': 0.27166033828098035, 'hungarian_match': [(0, 27), (1, 35), (2, 32), (3, 132), (4, 160), (5, 129), (6, 57), (7, 94), (8, 190), (9, 148), (10, 88), (11, 37), (12, 102), (13, 168), (14, 165), (15, 46), (16, 26), (17, 163), (18, 140), (19, 58), (20, 83), (21, 29), (22, 22), (23, 7), (24, 173), (25, 183), (26, 76), (27, 24), (28, 114), (29, 150), (30, 53), (31, 97), (32, 13), (33, 121), (34, 33), (35, 55), (36, 108), (37, 31), (38, 195), (39, 90), (40, 6), (41, 146), (42, 80), (43, 96), (44, 135), (45, 167), (46, 155), (47, 136), (48, 2), (49, 14), (50, 103), (51, 126), (52, 181), (53, 20), (54, 40), (55, 49), (56, 127), (57, 171), (58, 110), (59, 194), (60, 151), (61, 77), (62, 142), (63, 166), (64, 56), (65, 119), (66, 84), (67, 174), (68, 153), (69, 10), (70, 3), (71, 64), (72, 180), (73, 149), (74, 30), (75, 177), (76, 191), (77, 197), (78, 18), (79, 157), (80, 116), (81, 81), (82, 164), (83, 128), (84, 28), (85, 104), (86, 117), (87, 189), (88, 106), (89, 72), (90, 93), (91, 25), (92, 113), (93, 175), (94, 52), (95, 107), (96, 17), (97, 199), (98, 198), (99, 105), (100, 161), (101, 42), (102, 34), (103, 154), (104, 1), (105, 137), (106, 23), (107, 95), (108, 159), (109, 152), (110, 123), (111, 147), (112, 100), (113, 188), (114, 187), (115, 79), (116, 70), (117, 92), (118, 43), (119, 62), (120, 15), (121, 86), (122, 156), (123, 111), (124, 65), (125, 78), (126, 170), (127, 11), (128, 179), (129, 98), (130, 133), (131, 50), (132, 60), (133, 87), (134, 82), (135, 193), (136, 172), (137, 130), (138, 19), (139, 69), (140, 61), (141, 118), (142, 131), (143, 5), (144, 73), (145, 71), (146, 109), (147, 59), (148, 67), (149, 66), (150, 196), (151, 141), (152, 134), (153, 75), (154, 16), (155, 48), (156, 101), (157, 192), (158, 89), (159, 158), (160, 145), (161, 115), (162, 8), (163, 178), (164, 182), (165, 68), (166, 91), (167, 36), (168, 124), (169, 99), (170, 125), (171, 0), (172, 38), (173, 74), (174, 85), (175, 185), (176, 47), (177, 4), (178, 143), (179, 9), (180, 138), (181, 12), (182, 112), (183, 54), (184, 169), (185, 139), (186, 44), (187, 122), (188, 176), (189, 186), (190, 39), (191, 41), (192, 51), (193, 162), (194, 120), (195, 184), (196, 63), (197, 45), (198, 21), (199, 144)]}
Checkpoint ...
[33mEpoch 39/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [38][ 0/45]	Total Loss -2.3012e+01 (-2.3012e+01)	Consistency Loss 3.1762e+00 (3.1762e+00)	Entropy 5.2376e+00 (5.2376e+00)
Epoch: [38][25/45]	Total Loss -2.2973e+01 (-2.2950e+01)	Consistency Loss 3.2416e+00 (3.2334e+00)	Entropy 5.2430e+00 (5.2368e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.282510280609131, 'consistency': 2.543071985244751, 'total_loss': -2.73943829536438}], 'lowest_loss_head': 0, 'lowest_loss': -2.73943829536438}
New lowest loss on validation set: -2.7337 -> -2.7394
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13203313772868486, 'ARI': 0.04624627082335226, 'NMI': 0.4666056056177517, 'ACC Top-5': 0.2704521919226786, 'hungarian_match': [(0, 191), (1, 91), (2, 32), (3, 12), (4, 160), (5, 158), (6, 24), (7, 94), (8, 136), (9, 173), (10, 86), (11, 42), (12, 196), (13, 168), (14, 165), (15, 46), (16, 26), (17, 14), (18, 140), (19, 62), (20, 105), (21, 29), (22, 22), (23, 7), (24, 162), (25, 182), (26, 76), (27, 4), (28, 155), (29, 150), (30, 56), (31, 47), (32, 13), (33, 121), (34, 130), (35, 55), (36, 176), (37, 31), (38, 195), (39, 113), (40, 6), (41, 146), (42, 87), (43, 34), (44, 131), (45, 167), (46, 152), (47, 28), (48, 0), (49, 41), (50, 119), (51, 112), (52, 181), (53, 116), (54, 40), (55, 49), (56, 127), (57, 53), (58, 111), (59, 194), (60, 199), (61, 37), (62, 144), (63, 166), (64, 171), (65, 15), (66, 33), (67, 174), (68, 151), (69, 25), (70, 3), (71, 51), (72, 180), (73, 148), (74, 30), (75, 177), (76, 190), (77, 197), (78, 18), (79, 159), (80, 120), (81, 193), (82, 153), (83, 128), (84, 141), (85, 104), (86, 102), (87, 189), (88, 9), (89, 90), (90, 114), (91, 103), (92, 184), (93, 175), (94, 52), (95, 107), (96, 100), (97, 157), (98, 35), (99, 57), (100, 161), (101, 16), (102, 101), (103, 154), (104, 1), (105, 137), (106, 23), (107, 95), (108, 179), (109, 72), (110, 123), (111, 147), (112, 63), (113, 188), (114, 187), (115, 79), (116, 70), (117, 92), (118, 43), (119, 65), (120, 132), (121, 88), (122, 156), (123, 81), (124, 83), (125, 44), (126, 170), (127, 78), (128, 164), (129, 183), (130, 106), (131, 50), (132, 60), (133, 126), (134, 82), (135, 198), (136, 172), (137, 149), (138, 19), (139, 69), (140, 61), (141, 98), (142, 133), (143, 5), (144, 73), (145, 71), (146, 109), (147, 59), (148, 93), (149, 66), (150, 118), (151, 64), (152, 134), (153, 75), (154, 129), (155, 48), (156, 54), (157, 192), (158, 89), (159, 163), (160, 145), (161, 115), (162, 8), (163, 108), (164, 10), (165, 68), (166, 117), (167, 36), (168, 124), (169, 99), (170, 125), (171, 2), (172, 38), (173, 74), (174, 85), (175, 185), (176, 77), (177, 67), (178, 142), (179, 96), (180, 139), (181, 11), (182, 27), (183, 97), (184, 169), (185, 178), (186, 143), (187, 122), (188, 20), (189, 84), (190, 39), (191, 110), (192, 135), (193, 17), (194, 80), (195, 138), (196, 58), (197, 45), (198, 21), (199, 186)]}
Checkpoint ...
[33mEpoch 40/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [39][ 0/45]	Total Loss -2.3051e+01 (-2.3051e+01)	Consistency Loss 3.1303e+00 (3.1303e+00)	Entropy 5.2362e+00 (5.2362e+00)
Epoch: [39][25/45]	Total Loss -2.2976e+01 (-2.2970e+01)	Consistency Loss 3.1836e+00 (3.1931e+00)	Entropy 5.2320e+00 (5.2326e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.2753448486328125, 'consistency': 2.5310404300689697, 'total_loss': -2.7443044185638428}], 'lowest_loss_head': 0, 'lowest_loss': -2.7443044185638428}
New lowest loss on validation set: -2.7394 -> -2.7443
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13410424577148775, 'ARI': 0.04739548645369333, 'NMI': 0.46796915929594024, 'ACC Top-5': 0.26958923023817744, 'hungarian_match': [(0, 191), (1, 193), (2, 32), (3, 12), (4, 168), (5, 173), (6, 24), (7, 47), (8, 105), (9, 129), (10, 88), (11, 37), (12, 196), (13, 158), (14, 165), (15, 78), (16, 26), (17, 151), (18, 140), (19, 58), (20, 83), (21, 29), (22, 22), (23, 136), (24, 162), (25, 182), (26, 76), (27, 149), (28, 114), (29, 150), (30, 155), (31, 74), (32, 13), (33, 124), (34, 130), (35, 55), (36, 108), (37, 31), (38, 195), (39, 137), (40, 4), (41, 146), (42, 80), (43, 96), (44, 75), (45, 94), (46, 36), (47, 9), (48, 0), (49, 118), (50, 103), (51, 126), (52, 82), (53, 20), (54, 181), (55, 52), (56, 127), (57, 132), (58, 111), (59, 33), (60, 199), (61, 46), (62, 142), (63, 156), (64, 178), (65, 53), (66, 121), (67, 174), (68, 152), (69, 2), (70, 3), (71, 50), (72, 180), (73, 112), (74, 30), (75, 177), (76, 14), (77, 197), (78, 18), (79, 159), (80, 117), (81, 194), (82, 153), (83, 128), (84, 133), (85, 91), (86, 102), (87, 189), (88, 106), (89, 90), (90, 93), (91, 25), (92, 184), (93, 35), (94, 85), (95, 28), (96, 183), (97, 166), (98, 167), (99, 57), (100, 161), (101, 42), (102, 27), (103, 77), (104, 1), (105, 56), (106, 23), (107, 95), (108, 135), (109, 176), (110, 123), (111, 147), (112, 100), (113, 188), (114, 187), (115, 79), (116, 70), (117, 92), (118, 43), (119, 62), (120, 15), (121, 86), (122, 101), (123, 81), (124, 65), (125, 49), (126, 170), (127, 11), (128, 164), (129, 98), (130, 107), (131, 51), (132, 60), (133, 120), (134, 113), (135, 5), (136, 171), (137, 115), (138, 19), (139, 69), (140, 61), (141, 157), (142, 131), (143, 17), (144, 73), (145, 141), (146, 109), (147, 59), (148, 67), (149, 66), (150, 116), (151, 64), (152, 134), (153, 34), (154, 16), (155, 48), (156, 54), (157, 192), (158, 89), (159, 163), (160, 145), (161, 175), (162, 8), (163, 154), (164, 10), (165, 68), (166, 198), (167, 40), (168, 148), (169, 99), (170, 125), (171, 71), (172, 38), (173, 72), (174, 7), (175, 185), (176, 110), (177, 6), (178, 143), (179, 104), (180, 138), (181, 190), (182, 119), (183, 97), (184, 169), (185, 139), (186, 44), (187, 122), (188, 160), (189, 84), (190, 39), (191, 41), (192, 186), (193, 179), (194, 87), (195, 172), (196, 63), (197, 45), (198, 21), (199, 144)]}
Checkpoint ...
[33mEpoch 41/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [40][ 0/45]	Total Loss -2.2900e+01 (-2.2900e+01)	Consistency Loss 3.2723e+00 (3.2723e+00)	Entropy 5.2344e+00 (5.2344e+00)
Epoch: [40][25/45]	Total Loss -2.3110e+01 (-2.2938e+01)	Consistency Loss 3.1172e+00 (3.2424e+00)	Entropy 5.2455e+00 (5.2361e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.285947322845459, 'consistency': 2.5423970222473145, 'total_loss': -2.7435503005981445}], 'lowest_loss_head': 0, 'lowest_loss': -2.7435503005981445}
No new lowest loss on validation set: -2.7443 -> -2.7436
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13462202278218846, 'ARI': 0.047067655850243556, 'NMI': 0.4686810044019113, 'ACC Top-5': 0.26958923023817744, 'hungarian_match': [(0, 191), (1, 193), (2, 32), (3, 12), (4, 166), (5, 90), (6, 136), (7, 185), (8, 190), (9, 173), (10, 86), (11, 37), (12, 196), (13, 158), (14, 186), (15, 135), (16, 78), (17, 151), (18, 140), (19, 62), (20, 105), (21, 29), (22, 24), (23, 121), (24, 162), (25, 182), (26, 76), (27, 149), (28, 114), (29, 150), (30, 138), (31, 47), (32, 13), (33, 124), (34, 130), (35, 55), (36, 176), (37, 31), (38, 195), (39, 111), (40, 4), (41, 146), (42, 80), (43, 36), (44, 75), (45, 94), (46, 155), (47, 9), (48, 0), (49, 172), (50, 119), (51, 126), (52, 82), (53, 116), (54, 181), (55, 52), (56, 127), (57, 129), (58, 110), (59, 194), (60, 34), (61, 46), (62, 144), (63, 156), (64, 56), (65, 20), (66, 84), (67, 174), (68, 152), (69, 103), (70, 3), (71, 51), (72, 180), (73, 112), (74, 30), (75, 169), (76, 14), (77, 197), (78, 18), (79, 15), (80, 100), (81, 79), (82, 153), (83, 128), (84, 28), (85, 91), (86, 102), (87, 189), (88, 106), (89, 72), (90, 157), (91, 25), (92, 184), (93, 5), (94, 85), (95, 107), (96, 183), (97, 167), (98, 35), (99, 57), (100, 161), (101, 16), (102, 113), (103, 154), (104, 1), (105, 137), (106, 23), (107, 95), (108, 139), (109, 159), (110, 123), (111, 147), (112, 145), (113, 188), (114, 187), (115, 104), (116, 70), (117, 92), (118, 43), (119, 65), (120, 132), (121, 88), (122, 97), (123, 81), (124, 83), (125, 141), (126, 170), (127, 49), (128, 164), (129, 98), (130, 133), (131, 50), (132, 60), (133, 87), (134, 40), (135, 198), (136, 74), (137, 115), (138, 19), (139, 69), (140, 64), (141, 118), (142, 131), (143, 17), (144, 73), (145, 71), (146, 109), (147, 59), (148, 93), (149, 66), (150, 199), (151, 2), (152, 134), (153, 53), (154, 117), (155, 48), (156, 27), (157, 192), (158, 89), (159, 163), (160, 61), (161, 175), (162, 10), (163, 108), (164, 8), (165, 68), (166, 33), (167, 165), (168, 148), (169, 99), (170, 125), (171, 44), (172, 38), (173, 11), (174, 7), (175, 177), (176, 77), (177, 67), (178, 142), (179, 96), (180, 171), (181, 101), (182, 168), (183, 54), (184, 42), (185, 160), (186, 143), (187, 122), (188, 22), (189, 26), (190, 39), (191, 41), (192, 63), (193, 179), (194, 120), (195, 178), (196, 58), (197, 45), (198, 21), (199, 6)]}
Checkpoint ...
[33mEpoch 42/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [41][ 0/45]	Total Loss -2.2639e+01 (-2.2639e+01)	Consistency Loss 3.5143e+00 (3.5143e+00)	Entropy 5.2307e+00 (5.2307e+00)
Epoch: [41][25/45]	Total Loss -2.3019e+01 (-2.2969e+01)	Consistency Loss 3.2045e+00 (3.2125e+00)	Entropy 5.2448e+00 (5.2363e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.28090238571167, 'consistency': 2.5255234241485596, 'total_loss': -2.7553789615631104}], 'lowest_loss_head': 0, 'lowest_loss': -2.7553789615631104}
New lowest loss on validation set: -2.7443 -> -2.7554
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13358646876078703, 'ARI': 0.0475824340231959, 'NMI': 0.4690357438647705, 'ACC Top-5': 0.2625129444252675, 'hungarian_match': [(0, 27), (1, 80), (2, 32), (3, 132), (4, 164), (5, 90), (6, 24), (7, 185), (8, 136), (9, 158), (10, 86), (11, 37), (12, 196), (13, 168), (14, 165), (15, 135), (16, 190), (17, 72), (18, 140), (19, 143), (20, 105), (21, 29), (22, 22), (23, 121), (24, 162), (25, 183), (26, 76), (27, 149), (28, 114), (29, 150), (30, 138), (31, 79), (32, 13), (33, 124), (34, 173), (35, 182), (36, 176), (37, 167), (38, 195), (39, 113), (40, 6), (41, 146), (42, 130), (43, 96), (44, 75), (45, 94), (46, 36), (47, 48), (48, 0), (49, 46), (50, 198), (51, 128), (52, 82), (53, 116), (54, 111), (55, 52), (56, 127), (57, 129), (58, 110), (59, 33), (60, 53), (61, 77), (62, 144), (63, 151), (64, 56), (65, 20), (66, 84), (67, 174), (68, 152), (69, 103), (70, 3), (71, 51), (72, 157), (73, 112), (74, 30), (75, 177), (76, 14), (77, 197), (78, 18), (79, 159), (80, 117), (81, 100), (82, 153), (83, 38), (84, 141), (85, 104), (86, 180), (87, 189), (88, 106), (89, 5), (90, 154), (91, 87), (92, 12), (93, 4), (94, 85), (95, 28), (96, 194), (97, 108), (98, 35), (99, 57), (100, 161), (101, 42), (102, 101), (103, 184), (104, 1), (105, 137), (106, 26), (107, 95), (108, 41), (109, 166), (110, 123), (111, 147), (112, 63), (113, 188), (114, 187), (115, 169), (116, 70), (117, 92), (118, 43), (119, 62), (120, 15), (121, 88), (122, 69), (123, 134), (124, 83), (125, 78), (126, 170), (127, 11), (128, 199), (129, 98), (130, 107), (131, 49), (132, 60), (133, 126), (134, 40), (135, 193), (136, 25), (137, 115), (138, 19), (139, 191), (140, 61), (141, 118), (142, 133), (143, 17), (144, 73), (145, 71), (146, 109), (147, 59), (148, 93), (149, 172), (150, 192), (151, 64), (152, 39), (153, 55), (154, 16), (155, 9), (156, 54), (157, 34), (158, 89), (159, 163), (160, 145), (161, 175), (162, 10), (163, 178), (164, 8), (165, 68), (166, 91), (167, 47), (168, 148), (169, 99), (170, 125), (171, 2), (172, 139), (173, 74), (174, 7), (175, 181), (176, 31), (177, 67), (178, 142), (179, 186), (180, 171), (181, 66), (182, 119), (183, 97), (184, 81), (185, 160), (186, 44), (187, 122), (188, 23), (189, 102), (190, 131), (191, 156), (192, 50), (193, 179), (194, 120), (195, 155), (196, 58), (197, 45), (198, 21), (199, 65)]}
Checkpoint ...
[33mEpoch 43/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [42][ 0/45]	Total Loss -2.2948e+01 (-2.2948e+01)	Consistency Loss 3.2220e+00 (3.2220e+00)	Entropy 5.2340e+00 (5.2340e+00)
Epoch: [42][25/45]	Total Loss -2.2872e+01 (-2.2966e+01)	Consistency Loss 3.2454e+00 (3.2084e+00)	Entropy 5.2235e+00 (5.2350e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.282647132873535, 'consistency': 2.528390407562256, 'total_loss': -2.7542567253112793}], 'lowest_loss_head': 0, 'lowest_loss': -2.7542567253112793}
No new lowest loss on validation set: -2.7554 -> -2.7543
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13375906109768726, 'ARI': 0.04586978183899588, 'NMI': 0.46727407806208726, 'ACC Top-5': 0.2759751467034864, 'hungarian_match': [(0, 27), (1, 193), (2, 32), (3, 12), (4, 196), (5, 173), (6, 136), (7, 185), (8, 105), (9, 148), (10, 86), (11, 42), (12, 113), (13, 168), (14, 171), (15, 46), (16, 26), (17, 163), (18, 140), (19, 64), (20, 83), (21, 29), (22, 24), (23, 92), (24, 162), (25, 182), (26, 76), (27, 9), (28, 123), (29, 176), (30, 155), (31, 74), (32, 13), (33, 158), (34, 130), (35, 41), (36, 108), (37, 31), (38, 195), (39, 111), (40, 6), (41, 146), (42, 80), (43, 34), (44, 75), (45, 167), (46, 36), (47, 22), (48, 0), (49, 118), (50, 103), (51, 128), (52, 165), (53, 116), (54, 40), (55, 52), (56, 127), (57, 90), (58, 110), (59, 194), (60, 199), (61, 37), (62, 144), (63, 166), (64, 56), (65, 20), (66, 84), (67, 174), (68, 151), (69, 53), (70, 3), (71, 49), (72, 180), (73, 112), (74, 30), (75, 177), (76, 190), (77, 197), (78, 18), (79, 159), (80, 117), (81, 187), (82, 164), (83, 147), (84, 141), (85, 91), (86, 102), (87, 189), (88, 106), (89, 72), (90, 47), (91, 87), (92, 184), (93, 33), (94, 85), (95, 28), (96, 183), (97, 157), (98, 129), (99, 57), (100, 161), (101, 16), (102, 101), (103, 77), (104, 1), (105, 137), (106, 23), (107, 95), (108, 135), (109, 152), (110, 175), (111, 104), (112, 100), (113, 188), (114, 191), (115, 79), (116, 70), (117, 114), (118, 43), (119, 61), (120, 132), (121, 88), (122, 55), (123, 81), (124, 65), (125, 78), (126, 170), (127, 181), (128, 172), (129, 98), (130, 107), (131, 50), (132, 58), (133, 126), (134, 82), (135, 35), (136, 25), (137, 149), (138, 19), (139, 69), (140, 60), (141, 94), (142, 133), (143, 17), (144, 73), (145, 71), (146, 109), (147, 62), (148, 93), (149, 66), (150, 192), (151, 44), (152, 39), (153, 14), (154, 51), (155, 48), (156, 54), (157, 121), (158, 89), (159, 150), (160, 145), (161, 115), (162, 8), (163, 178), (164, 10), (165, 68), (166, 198), (167, 15), (168, 124), (169, 99), (170, 125), (171, 2), (172, 38), (173, 11), (174, 7), (175, 153), (176, 134), (177, 67), (178, 142), (179, 96), (180, 138), (181, 4), (182, 119), (183, 97), (184, 169), (185, 139), (186, 143), (187, 122), (188, 160), (189, 186), (190, 131), (191, 156), (192, 63), (193, 179), (194, 120), (195, 154), (196, 59), (197, 45), (198, 21), (199, 5)]}
Checkpoint ...
[33mEpoch 44/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [43][ 0/45]	Total Loss -2.2924e+01 (-2.2924e+01)	Consistency Loss 3.2524e+00 (3.2524e+00)	Entropy 5.2353e+00 (5.2353e+00)
Epoch: [43][25/45]	Total Loss -2.3057e+01 (-2.2982e+01)	Consistency Loss 3.0997e+00 (3.1993e+00)	Entropy 5.2314e+00 (5.2362e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.281145095825195, 'consistency': 2.508941888809204, 'total_loss': -2.772203207015991}], 'lowest_loss_head': 0, 'lowest_loss': -2.772203207015991}
New lowest loss on validation set: -2.7554 -> -2.7722
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13565757680358992, 'ARI': 0.04767384672043191, 'NMI': 0.4692825298681266, 'ACC Top-5': 0.27217811529168107, 'hungarian_match': [(0, 189), (1, 193), (2, 31), (3, 12), (4, 160), (5, 90), (6, 136), (7, 46), (8, 190), (9, 148), (10, 86), (11, 151), (12, 196), (13, 168), (14, 165), (15, 110), (16, 26), (17, 14), (18, 140), (19, 100), (20, 105), (21, 9), (22, 24), (23, 74), (24, 162), (25, 171), (26, 76), (27, 29), (28, 114), (29, 176), (30, 94), (31, 47), (32, 13), (33, 124), (34, 130), (35, 55), (36, 108), (37, 75), (38, 195), (39, 194), (40, 197), (41, 146), (42, 80), (43, 34), (44, 135), (45, 167), (46, 155), (47, 133), (48, 2), (49, 41), (50, 198), (51, 128), (52, 82), (53, 116), (54, 40), (55, 52), (56, 35), (57, 38), (58, 111), (59, 121), (60, 199), (61, 37), (62, 142), (63, 156), (64, 56), (65, 20), (66, 84), (67, 174), (68, 152), (69, 103), (70, 3), (71, 51), (72, 150), (73, 112), (74, 30), (75, 177), (76, 95), (77, 149), (78, 18), (79, 159), (80, 158), (81, 187), (82, 164), (83, 126), (84, 28), (85, 104), (86, 102), (87, 27), (88, 106), (89, 72), (90, 157), (91, 129), (92, 113), (93, 5), (94, 85), (95, 25), (96, 147), (97, 180), (98, 132), (99, 57), (100, 161), (101, 42), (102, 173), (103, 154), (104, 1), (105, 137), (106, 23), (107, 185), (108, 117), (109, 166), (110, 123), (111, 182), (112, 145), (113, 188), (114, 191), (115, 79), (116, 70), (117, 92), (118, 43), (119, 62), (120, 15), (121, 88), (122, 181), (123, 81), (124, 83), (125, 78), (126, 170), (127, 186), (128, 179), (129, 183), (130, 107), (131, 50), (132, 58), (133, 87), (134, 141), (135, 61), (136, 172), (137, 115), (138, 19), (139, 69), (140, 60), (141, 118), (142, 131), (143, 17), (144, 73), (145, 71), (146, 109), (147, 59), (148, 93), (149, 66), (150, 127), (151, 64), (152, 77), (153, 153), (154, 16), (155, 48), (156, 54), (157, 192), (158, 89), (159, 163), (160, 63), (161, 175), (162, 8), (163, 184), (164, 10), (165, 68), (166, 91), (167, 36), (168, 98), (169, 99), (170, 125), (171, 0), (172, 139), (173, 11), (174, 7), (175, 53), (176, 134), (177, 67), (178, 143), (179, 96), (180, 138), (181, 4), (182, 119), (183, 97), (184, 169), (185, 178), (186, 144), (187, 122), (188, 22), (189, 33), (190, 39), (191, 101), (192, 44), (193, 49), (194, 120), (195, 32), (196, 65), (197, 45), (198, 21), (199, 6)]}
Checkpoint ...
[33mEpoch 45/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [44][ 0/45]	Total Loss -2.3181e+01 (-2.3181e+01)	Consistency Loss 2.9462e+00 (2.9462e+00)	Entropy 5.2254e+00 (5.2254e+00)
Epoch: [44][25/45]	Total Loss -2.3110e+01 (-2.3015e+01)	Consistency Loss 3.0350e+00 (3.1575e+00)	Entropy 5.2289e+00 (5.2346e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.281855583190918, 'consistency': 2.501833438873291, 'total_loss': -2.780022144317627}], 'lowest_loss_head': 0, 'lowest_loss': -2.780022144317627}
New lowest loss on validation set: -2.7722 -> -2.7800
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.1351397997928892, 'ARI': 0.050751658981205844, 'NMI': 0.4709926521087625, 'ACC Top-5': 0.2832240248532965, 'hungarian_match': [(0, 27), (1, 193), (2, 32), (3, 12), (4, 168), (5, 90), (6, 136), (7, 185), (8, 191), (9, 114), (10, 86), (11, 42), (12, 172), (13, 158), (14, 95), (15, 181), (16, 26), (17, 151), (18, 140), (19, 143), (20, 105), (21, 141), (22, 24), (23, 186), (24, 162), (25, 183), (26, 76), (27, 62), (28, 132), (29, 150), (30, 56), (31, 74), (32, 13), (33, 124), (34, 173), (35, 55), (36, 108), (37, 20), (38, 195), (39, 111), (40, 4), (41, 146), (42, 130), (43, 93), (44, 135), (45, 167), (46, 36), (47, 48), (48, 2), (49, 41), (50, 119), (51, 126), (52, 165), (53, 116), (54, 40), (55, 49), (56, 148), (57, 129), (58, 47), (59, 194), (60, 34), (61, 37), (62, 144), (63, 156), (64, 171), (65, 125), (66, 179), (67, 174), (68, 153), (69, 10), (70, 3), (71, 50), (72, 166), (73, 149), (74, 30), (75, 177), (76, 14), (77, 197), (78, 18), (79, 198), (80, 117), (81, 182), (82, 164), (83, 128), (84, 103), (85, 104), (86, 102), (87, 189), (88, 29), (89, 72), (90, 157), (91, 25), (92, 113), (93, 190), (94, 85), (95, 106), (96, 120), (97, 180), (98, 35), (99, 57), (100, 161), (101, 139), (102, 101), (103, 154), (104, 1), (105, 137), (106, 23), (107, 94), (108, 184), (109, 159), (110, 123), (111, 147), (112, 100), (113, 188), (114, 187), (115, 79), (116, 70), (117, 92), (118, 43), (119, 59), (120, 15), (121, 88), (122, 77), (123, 81), (124, 65), (125, 78), (126, 170), (127, 11), (128, 199), (129, 98), (130, 107), (131, 51), (132, 60), (133, 87), (134, 82), (135, 91), (136, 31), (137, 115), (138, 19), (139, 69), (140, 61), (141, 118), (142, 131), (143, 5), (144, 73), (145, 71), (146, 109), (147, 83), (148, 52), (149, 66), (150, 192), (151, 64), (152, 39), (153, 75), (154, 16), (155, 9), (156, 54), (157, 196), (158, 89), (159, 163), (160, 145), (161, 175), (162, 8), (163, 178), (164, 133), (165, 68), (166, 33), (167, 46), (168, 121), (169, 99), (170, 127), (171, 0), (172, 38), (173, 53), (174, 7), (175, 152), (176, 134), (177, 67), (178, 142), (179, 96), (180, 138), (181, 22), (182, 112), (183, 97), (184, 169), (185, 160), (186, 44), (187, 122), (188, 176), (189, 84), (190, 110), (191, 28), (192, 63), (193, 17), (194, 80), (195, 155), (196, 58), (197, 45), (198, 21), (199, 6)]}
Checkpoint ...
[33mEpoch 46/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [45][ 0/45]	Total Loss -2.2998e+01 (-2.2998e+01)	Consistency Loss 3.0926e+00 (3.0926e+00)	Entropy 5.2182e+00 (5.2182e+00)
Epoch: [45][25/45]	Total Loss -2.2963e+01 (-2.3006e+01)	Consistency Loss 3.1416e+00 (3.1570e+00)	Entropy 5.2209e+00 (5.2326e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.277976036071777, 'consistency': 2.502617359161377, 'total_loss': -2.7753586769104004}], 'lowest_loss_head': 0, 'lowest_loss': -2.7753586769104004}
No new lowest loss on validation set: -2.7800 -> -2.7754
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13496720745598895, 'ARI': 0.0481222652822701, 'NMI': 0.46970349022359376, 'ACC Top-5': 0.2711425612702796, 'hungarian_match': [(0, 191), (1, 193), (2, 32), (3, 12), (4, 164), (5, 103), (6, 136), (7, 185), (8, 190), (9, 173), (10, 86), (11, 42), (12, 196), (13, 168), (14, 165), (15, 46), (16, 26), (17, 72), (18, 140), (19, 63), (20, 83), (21, 9), (22, 24), (23, 117), (24, 162), (25, 182), (26, 76), (27, 29), (28, 123), (29, 150), (30, 155), (31, 47), (32, 22), (33, 121), (34, 126), (35, 55), (36, 108), (37, 20), (38, 195), (39, 194), (40, 27), (41, 146), (42, 130), (43, 53), (44, 135), (45, 167), (46, 38), (47, 48), (48, 0), (49, 171), (50, 119), (51, 149), (52, 151), (53, 116), (54, 111), (55, 52), (56, 127), (57, 129), (58, 110), (59, 183), (60, 118), (61, 37), (62, 142), (63, 156), (64, 56), (65, 96), (66, 132), (67, 174), (68, 152), (69, 10), (70, 3), (71, 49), (72, 157), (73, 112), (74, 154), (75, 181), (76, 14), (77, 197), (78, 18), (79, 159), (80, 120), (81, 30), (82, 153), (83, 128), (84, 90), (85, 91), (86, 102), (87, 189), (88, 106), (89, 13), (90, 93), (91, 25), (92, 147), (93, 57), (94, 85), (95, 107), (96, 33), (97, 199), (98, 94), (99, 105), (100, 161), (101, 163), (102, 101), (103, 172), (104, 1), (105, 137), (106, 23), (107, 95), (108, 176), (109, 166), (110, 114), (111, 84), (112, 145), (113, 188), (114, 187), (115, 79), (116, 70), (117, 92), (118, 43), (119, 62), (120, 15), (121, 88), (122, 77), (123, 81), (124, 65), (125, 141), (126, 170), (127, 78), (128, 179), (129, 51), (130, 133), (131, 50), (132, 60), (133, 87), (134, 82), (135, 35), (136, 74), (137, 115), (138, 19), (139, 69), (140, 61), (141, 98), (142, 131), (143, 5), (144, 73), (145, 71), (146, 109), (147, 59), (148, 67), (149, 66), (150, 192), (151, 64), (152, 39), (153, 75), (154, 16), (155, 28), (156, 54), (157, 34), (158, 89), (159, 158), (160, 144), (161, 175), (162, 8), (163, 180), (164, 100), (165, 68), (166, 198), (167, 36), (168, 124), (169, 99), (170, 125), (171, 2), (172, 139), (173, 11), (174, 7), (175, 177), (176, 31), (177, 4), (178, 143), (179, 17), (180, 138), (181, 186), (182, 148), (183, 97), (184, 169), (185, 178), (186, 44), (187, 122), (188, 160), (189, 40), (190, 134), (191, 41), (192, 113), (193, 104), (194, 80), (195, 184), (196, 58), (197, 45), (198, 21), (199, 6)]}
Checkpoint ...
[33mEpoch 47/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [46][ 0/45]	Total Loss -2.3051e+01 (-2.3051e+01)	Consistency Loss 3.0802e+00 (3.0802e+00)	Entropy 5.2262e+00 (5.2262e+00)
Epoch: [46][25/45]	Total Loss -2.2984e+01 (-2.2979e+01)	Consistency Loss 3.2016e+00 (3.1864e+00)	Entropy 5.2372e+00 (5.2331e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.2852630615234375, 'consistency': 2.4911158084869385, 'total_loss': -2.794147253036499}], 'lowest_loss_head': 0, 'lowest_loss': -2.794147253036499}
New lowest loss on validation set: -2.7800 -> -2.7941
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13479461511908872, 'ARI': 0.049309447784951145, 'NMI': 0.4698470178667653, 'ACC Top-5': 0.2811529168104936, 'hungarian_match': [(0, 191), (1, 193), (2, 31), (3, 12), (4, 164), (5, 90), (6, 136), (7, 185), (8, 190), (9, 129), (10, 86), (11, 37), (12, 102), (13, 158), (14, 165), (15, 78), (16, 26), (17, 151), (18, 140), (19, 146), (20, 83), (21, 29), (22, 24), (23, 117), (24, 162), (25, 183), (26, 76), (27, 149), (28, 123), (29, 38), (30, 138), (31, 47), (32, 13), (33, 124), (34, 130), (35, 55), (36, 180), (37, 188), (38, 195), (39, 11), (40, 6), (41, 94), (42, 80), (43, 93), (44, 135), (45, 15), (46, 155), (47, 9), (48, 0), (49, 53), (50, 198), (51, 128), (52, 79), (53, 116), (54, 111), (55, 52), (56, 127), (57, 51), (58, 110), (59, 194), (60, 196), (61, 77), (62, 142), (63, 156), (64, 56), (65, 20), (66, 84), (67, 174), (68, 152), (69, 10), (70, 3), (71, 49), (72, 166), (73, 112), (74, 30), (75, 177), (76, 14), (77, 197), (78, 25), (79, 159), (80, 100), (81, 81), (82, 153), (83, 119), (84, 186), (85, 91), (86, 18), (87, 189), (88, 107), (89, 72), (90, 157), (91, 87), (92, 113), (93, 5), (94, 85), (95, 106), (96, 167), (97, 199), (98, 160), (99, 57), (100, 161), (101, 42), (102, 101), (103, 172), (104, 1), (105, 137), (106, 23), (107, 95), (108, 168), (109, 150), (110, 114), (111, 147), (112, 145), (113, 27), (114, 187), (115, 104), (116, 70), (117, 92), (118, 43), (119, 62), (120, 132), (121, 88), (122, 181), (123, 40), (124, 65), (125, 141), (126, 170), (127, 36), (128, 179), (129, 98), (130, 133), (131, 50), (132, 60), (133, 126), (134, 82), (135, 35), (136, 32), (137, 115), (138, 19), (139, 69), (140, 61), (141, 118), (142, 131), (143, 17), (144, 73), (145, 71), (146, 109), (147, 44), (148, 67), (149, 66), (150, 192), (151, 64), (152, 39), (153, 75), (154, 16), (155, 28), (156, 54), (157, 34), (158, 89), (159, 163), (160, 58), (161, 175), (162, 48), (163, 108), (164, 8), (165, 68), (166, 33), (167, 46), (168, 148), (169, 99), (170, 125), (171, 2), (172, 139), (173, 74), (174, 7), (175, 184), (176, 121), (177, 4), (178, 144), (179, 96), (180, 171), (181, 22), (182, 173), (183, 97), (184, 169), (185, 178), (186, 143), (187, 122), (188, 176), (189, 103), (190, 134), (191, 41), (192, 63), (193, 182), (194, 120), (195, 154), (196, 59), (197, 45), (198, 21), (199, 105)]}
Checkpoint ...
[33mEpoch 48/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [47][ 0/45]	Total Loss -2.3019e+01 (-2.3019e+01)	Consistency Loss 3.1115e+00 (3.1115e+00)	Entropy 5.2260e+00 (5.2260e+00)
Epoch: [47][25/45]	Total Loss -2.3114e+01 (-2.2970e+01)	Consistency Loss 3.0756e+00 (3.1893e+00)	Entropy 5.2380e+00 (5.2318e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.280112266540527, 'consistency': 2.5021145343780518, 'total_loss': -2.7779977321624756}], 'lowest_loss_head': 0, 'lowest_loss': -2.7779977321624756}
No new lowest loss on validation set: -2.7941 -> -2.7780
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13479461511908872, 'ARI': 0.048655564522238584, 'NMI': 0.4683767985755523, 'ACC Top-5': 0.2694166379012772, 'hungarian_match': [(0, 191), (1, 193), (2, 31), (3, 12), (4, 168), (5, 103), (6, 24), (7, 185), (8, 190), (9, 129), (10, 86), (11, 37), (12, 87), (13, 158), (14, 167), (15, 46), (16, 57), (17, 14), (18, 143), (19, 146), (20, 83), (21, 9), (22, 107), (23, 117), (24, 162), (25, 183), (26, 76), (27, 149), (28, 123), (29, 181), (30, 138), (31, 79), (32, 13), (33, 124), (34, 130), (35, 55), (36, 108), (37, 100), (38, 195), (39, 111), (40, 4), (41, 94), (42, 80), (43, 36), (44, 135), (45, 15), (46, 155), (47, 133), (48, 2), (49, 53), (50, 119), (51, 128), (52, 165), (53, 20), (54, 40), (55, 52), (56, 127), (57, 90), (58, 110), (59, 194), (60, 196), (61, 78), (62, 144), (63, 156), (64, 56), (65, 199), (66, 84), (67, 174), (68, 152), (69, 11), (70, 3), (71, 51), (72, 150), (73, 112), (74, 30), (75, 177), (76, 151), (77, 197), (78, 18), (79, 157), (80, 136), (81, 173), (82, 153), (83, 147), (84, 106), (85, 91), (86, 102), (87, 189), (88, 29), (89, 72), (90, 38), (91, 25), (92, 113), (93, 64), (94, 85), (95, 28), (96, 49), (97, 68), (98, 35), (99, 105), (100, 161), (101, 42), (102, 101), (103, 166), (104, 1), (105, 137), (106, 23), (107, 95), (108, 172), (109, 176), (110, 114), (111, 182), (112, 63), (113, 27), (114, 187), (115, 169), (116, 70), (117, 92), (118, 43), (119, 62), (120, 132), (121, 88), (122, 77), (123, 81), (124, 65), (125, 141), (126, 170), (127, 184), (128, 179), (129, 175), (130, 6), (131, 50), (132, 60), (133, 126), (134, 82), (135, 188), (136, 32), (137, 116), (138, 19), (139, 198), (140, 61), (141, 118), (142, 131), (143, 69), (144, 73), (145, 71), (146, 109), (147, 59), (148, 93), (149, 5), (150, 192), (151, 140), (152, 39), (153, 75), (154, 16), (155, 48), (156, 54), (157, 34), (158, 89), (159, 163), (160, 145), (161, 115), (162, 8), (163, 180), (164, 10), (165, 67), (166, 33), (167, 47), (168, 98), (169, 99), (170, 125), (171, 0), (172, 139), (173, 74), (174, 7), (175, 96), (176, 121), (177, 66), (178, 142), (179, 17), (180, 171), (181, 22), (182, 148), (183, 97), (184, 159), (185, 178), (186, 44), (187, 122), (188, 160), (189, 26), (190, 134), (191, 41), (192, 186), (193, 164), (194, 120), (195, 154), (196, 58), (197, 45), (198, 21), (199, 104)]}
Checkpoint ...
[33mEpoch 49/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [48][ 0/45]	Total Loss -2.2756e+01 (-2.2756e+01)	Consistency Loss 3.3862e+00 (3.3862e+00)	Entropy 5.2284e+00 (5.2284e+00)
Epoch: [48][25/45]	Total Loss -2.2948e+01 (-2.3002e+01)	Consistency Loss 3.3027e+00 (3.1664e+00)	Entropy 5.2500e+00 (5.2336e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.280800819396973, 'consistency': 2.4637210369110107, 'total_loss': -2.817079782485962}], 'lowest_loss_head': 0, 'lowest_loss': -2.817079782485962}
New lowest loss on validation set: -2.7941 -> -2.8171
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13410424577148775, 'ARI': 0.04886892246357724, 'NMI': 0.4696744400450819, 'ACC Top-5': 0.28011736278909216, 'hungarian_match': [(0, 27), (1, 91), (2, 32), (3, 36), (4, 168), (5, 90), (6, 136), (7, 129), (8, 190), (9, 158), (10, 86), (11, 42), (12, 196), (13, 157), (14, 165), (15, 113), (16, 26), (17, 72), (18, 140), (19, 100), (20, 105), (21, 9), (22, 24), (23, 5), (24, 162), (25, 183), (26, 76), (27, 10), (28, 73), (29, 150), (30, 138), (31, 97), (32, 117), (33, 124), (34, 130), (35, 132), (36, 176), (37, 49), (38, 195), (39, 111), (40, 197), (41, 94), (42, 80), (43, 93), (44, 135), (45, 15), (46, 155), (47, 28), (48, 0), (49, 164), (50, 119), (51, 128), (52, 82), (53, 20), (54, 40), (55, 52), (56, 127), (57, 38), (58, 110), (59, 194), (60, 199), (61, 37), (62, 142), (63, 156), (64, 56), (65, 53), (66, 84), (67, 174), (68, 152), (69, 103), (70, 3), (71, 51), (72, 166), (73, 112), (74, 30), (75, 177), (76, 95), (77, 17), (78, 18), (79, 151), (80, 116), (81, 55), (82, 153), (83, 147), (84, 106), (85, 104), (86, 102), (87, 189), (88, 29), (89, 114), (90, 47), (91, 70), (92, 12), (93, 75), (94, 85), (95, 25), (96, 33), (97, 66), (98, 131), (99, 57), (100, 161), (101, 163), (102, 101), (103, 77), (104, 1), (105, 137), (106, 23), (107, 185), (108, 172), (109, 159), (110, 123), (111, 182), (112, 63), (113, 188), (114, 187), (115, 79), (116, 145), (117, 92), (118, 43), (119, 62), (120, 180), (121, 88), (122, 191), (123, 81), (124, 65), (125, 44), (126, 170), (127, 11), (128, 178), (129, 98), (130, 107), (131, 50), (132, 58), (133, 120), (134, 64), (135, 35), (136, 184), (137, 149), (138, 19), (139, 69), (140, 60), (141, 118), (142, 146), (143, 198), (144, 78), (145, 71), (146, 109), (147, 59), (148, 67), (149, 34), (150, 192), (151, 141), (152, 39), (153, 14), (154, 16), (155, 48), (156, 139), (157, 175), (158, 89), (159, 167), (160, 6), (161, 115), (162, 8), (163, 108), (164, 133), (165, 68), (166, 193), (167, 46), (168, 148), (169, 99), (170, 125), (171, 2), (172, 13), (173, 74), (174, 7), (175, 181), (176, 121), (177, 4), (178, 144), (179, 96), (180, 171), (181, 22), (182, 126), (183, 54), (184, 169), (185, 160), (186, 143), (187, 122), (188, 31), (189, 173), (190, 134), (191, 41), (192, 83), (193, 179), (194, 87), (195, 154), (196, 61), (197, 45), (198, 21), (199, 186)]}
Checkpoint ...
[33mEpoch 50/50[0m
[33m---------------[0m
Adjusted learning rate to 0.00010
Train ...
Epoch: [49][ 0/45]	Total Loss -2.2966e+01 (-2.2966e+01)	Consistency Loss 3.1681e+00 (3.1681e+00)	Entropy 5.2268e+00 (5.2268e+00)
Epoch: [49][25/45]	Total Loss -2.2933e+01 (-2.3019e+01)	Consistency Loss 3.1872e+00 (3.1461e+00)	Entropy 5.2241e+00 (5.2330e+00)
Make prediction on validation set ...
Evaluate based on SCAN loss ...
{'scan': [{'entropy': 5.284804821014404, 'consistency': 2.4619641304016113, 'total_loss': -2.822840690612793}], 'lowest_loss_head': 0, 'lowest_loss': -2.822840690612793}
New lowest loss on validation set: -2.8171 -> -2.8228
Lowest loss head is 0
Evaluate with hungarian matching algorithm ...
{'ACC': 0.13375906109768726, 'ARI': 0.04774114676697144, 'NMI': 0.4701212147750992, 'ACC Top-5': 0.27839143942008976, 'hungarian_match': [(0, 27), (1, 91), (2, 32), (3, 12), (4, 164), (5, 90), (6, 136), (7, 185), (8, 105), (9, 158), (10, 86), (11, 36), (12, 196), (13, 168), (14, 165), (15, 78), (16, 10), (17, 157), (18, 140), (19, 64), (20, 83), (21, 29), (22, 24), (23, 172), (24, 162), (25, 182), (26, 76), (27, 148), (28, 114), (29, 152), (30, 138), (31, 47), (32, 13), (33, 121), (34, 130), (35, 132), (36, 108), (37, 150), (38, 195), (39, 137), (40, 6), (41, 94), (42, 80), (43, 96), (44, 75), (45, 167), (46, 155), (47, 28), (48, 0), (49, 53), (50, 103), (51, 128), (52, 79), (53, 116), (54, 40), (55, 49), (56, 127), (57, 38), (58, 111), (59, 194), (60, 199), (61, 37), (62, 144), (63, 156), (64, 56), (65, 20), (66, 84), (67, 174), (68, 181), (69, 26), (70, 3), (71, 52), (72, 166), (73, 112), (74, 30), (75, 177), (76, 14), (77, 197), (78, 18), (79, 151), (80, 117), (81, 9), (82, 153), (83, 149), (84, 141), (85, 104), (86, 102), (87, 189), (88, 106), (89, 74), (90, 159), (91, 70), (92, 113), (93, 175), (94, 85), (95, 25), (96, 183), (97, 66), (98, 35), (99, 57), (100, 161), (101, 16), (102, 42), (103, 154), (104, 1), (105, 34), (106, 23), (107, 54), (108, 135), (109, 72), (110, 123), (111, 147), (112, 63), (113, 188), (114, 187), (115, 169), (116, 145), (117, 92), (118, 43), (119, 62), (120, 15), (121, 88), (122, 77), (123, 81), (124, 65), (125, 107), (126, 170), (127, 100), (128, 179), (129, 98), (130, 22), (131, 51), (132, 58), (133, 193), (134, 82), (135, 198), (136, 184), (137, 126), (138, 19), (139, 69), (140, 60), (141, 118), (142, 131), (143, 17), (144, 73), (145, 71), (146, 109), (147, 44), (148, 93), (149, 87), (150, 192), (151, 4), (152, 39), (153, 55), (154, 68), (155, 48), (156, 41), (157, 129), (158, 89), (159, 163), (160, 61), (161, 115), (162, 8), (163, 180), (164, 133), (165, 67), (166, 33), (167, 46), (168, 124), (169, 99), (170, 125), (171, 2), (172, 139), (173, 11), (174, 7), (175, 176), (176, 134), (177, 5), (178, 142), (179, 186), (180, 171), (181, 190), (182, 119), (183, 97), (184, 191), (185, 160), (186, 143), (187, 122), (188, 31), (189, 173), (190, 110), (191, 101), (192, 50), (193, 95), (194, 120), (195, 178), (196, 59), (197, 45), (198, 21), (199, 146)]}
Checkpoint ...
[34mEvaluate best model based on SCAN metric at the end[0m
torch.Size([5794])
torch.Size([5794])
{'ACC': 0.13375906109768726, 'ARI': 0.04774114676697144, 'NMI': 0.4701212147750992, 'ACC Top-5': 0.27839143942008976, 'hungarian_match': [(0, 27), (1, 91), (2, 32), (3, 12), (4, 164), (5, 90), (6, 136), (7, 185), (8, 105), (9, 158), (10, 86), (11, 36), (12, 196), (13, 168), (14, 165), (15, 78), (16, 10), (17, 157), (18, 140), (19, 64), (20, 83), (21, 29), (22, 24), (23, 172), (24, 162), (25, 182), (26, 76), (27, 148), (28, 114), (29, 152), (30, 138), (31, 47), (32, 13), (33, 121), (34, 130), (35, 132), (36, 108), (37, 150), (38, 195), (39, 137), (40, 6), (41, 94), (42, 80), (43, 96), (44, 75), (45, 167), (46, 155), (47, 28), (48, 0), (49, 53), (50, 103), (51, 128), (52, 79), (53, 116), (54, 40), (55, 49), (56, 127), (57, 38), (58, 111), (59, 194), (60, 199), (61, 37), (62, 144), (63, 156), (64, 56), (65, 20), (66, 84), (67, 174), (68, 181), (69, 26), (70, 3), (71, 52), (72, 166), (73, 112), (74, 30), (75, 177), (76, 14), (77, 197), (78, 18), (79, 151), (80, 117), (81, 9), (82, 153), (83, 149), (84, 141), (85, 104), (86, 102), (87, 189), (88, 106), (89, 74), (90, 159), (91, 70), (92, 113), (93, 175), (94, 85), (95, 25), (96, 183), (97, 66), (98, 35), (99, 57), (100, 161), (101, 16), (102, 42), (103, 154), (104, 1), (105, 34), (106, 23), (107, 54), (108, 135), (109, 72), (110, 123), (111, 147), (112, 63), (113, 188), (114, 187), (115, 169), (116, 145), (117, 92), (118, 43), (119, 62), (120, 15), (121, 88), (122, 77), (123, 81), (124, 65), (125, 107), (126, 170), (127, 100), (128, 179), (129, 98), (130, 22), (131, 51), (132, 58), (133, 193), (134, 82), (135, 198), (136, 184), (137, 126), (138, 19), (139, 69), (140, 60), (141, 118), (142, 131), (143, 17), (144, 73), (145, 71), (146, 109), (147, 44), (148, 93), (149, 87), (150, 192), (151, 4), (152, 39), (153, 55), (154, 68), (155, 48), (156, 41), (157, 129), (158, 89), (159, 163), (160, 61), (161, 115), (162, 8), (163, 180), (164, 133), (165, 67), (166, 33), (167, 46), (168, 124), (169, 99), (170, 125), (171, 2), (172, 139), (173, 11), (174, 7), (175, 176), (176, 134), (177, 5), (178, 142), (179, 186), (180, 171), (181, 190), (182, 119), (183, 97), (184, 191), (185, 160), (186, 143), (187, 122), (188, 31), (189, 173), (190, 110), (191, 101), (192, 50), (193, 95), (194, 120), (195, 178), (196, 59), (197, 45), (198, 21), (199, 146)]}
Final Accuracy: 0.13375906109768726
